{
  "Children": [
    {
      "$type": "Comment",
      "IsInfo": false,
      "Text": "When using relogger for back to back logins, enable a short wait time..."
    },
    {
      "$type": "Wait",
      "Delay": 8.0,
      "DelayMax": 8.0,
      "IsEnabled": false
    },
    {
      "$type": "ActionSequence",
      "Children": [
        {
          "$type": "CSharpAction",
          "CSharpCode": "//Default Settings.................................................................................\r\n// NOTE for Users: make sure each flag ends with either = true; OR = false;\r\n// NOTE for Users: true OR false being all lower case, with a semicolon terminator;\r\nG[\"MissionsOnlyMode\"] = false;\r\nG[\"GarrisonHerbingAndMiningOnly\"] = false;\r\nG[\"GarrisonHerbingOff\"] = false;\r\nG[\"GarrisonMiningOff\"] = false;\r\nG[\"GarrisonCacheAlreadyCollected\"] = false;\r\nG[\"MaximumGarrisonResourcesBeforeLootingCacheOrCompletingMissions\"] = 7000;\r\n"
        },
        {
          "$type": "Comment",
          "IsInfo": false,
          "Text": "Right Click On A Script Command To See A Pop-up Menu With A \"Enable/Disable\" Option"
        },
        {
          "$type": "Comment",
          "IsInfo": false,
          "Text": "Disabled Script Commands Will Appear Whited Out And Only Readable When Mousing Over Them"
        },
        {
          "$type": "Comment",
          "IsInfo": false,
          "Text": "Enable The C# Script Command Below For Missions Only Mode"
        },
        {
          "$type": "CSharpAction",
          "IsEnabled": false,
          "CSharpCode": "//Missions Only Mode..................................................................................\r\n G[\"MissionsOnlyMode\"] = true;\r\n "
        },
        {
          "$type": "Comment",
          "IsInfo": false,
          "Text": "Enable The C# Script Command Below For Mining Off Mode"
        },
        {
          "$type": "CSharpAction",
          "IsEnabled": false,
          "CSharpCode": "//Mining Off Mode.................................................................................\r\n G[\"GarrisonMiningOff\"] = true;\r\n \r\n "
        },
        {
          "$type": "Comment",
          "IsInfo": false,
          "Text": "Enable The C# Script Command Below For Herbing Off Mode"
        },
        {
          "$type": "CSharpAction",
          "IsEnabled": false,
          "CSharpCode": "//Herbing Off Mode..................................................................................\r\n G[\"GarrisonHerbingOff\"] = true;"
        },
        {
          "$type": "Comment",
          "IsInfo": false,
          "Text": "Enable The C# Script Command Below For Mining and Herbing Only Mode"
        },
        {
          "$type": "CSharpAction",
          "IsEnabled": false,
          "CSharpCode": "//Mining and Herbing Only Mode...........................................................\r\nG[\"GarrisonHerbingAndMiningOnly\"] = true;"
        }
      ],
      "GroupName": "User Settings"
    },
    {
      "$type": "ActionSequence",
      "Children": [
        {
          "$type": "CallBlock",
          "IsEnabled": false,
          "Target": "Print Pathing Vectors (Enable to run in log printing mode)"
        },
        {
          "$type": "CallBlock",
          "IsEnabled": false,
          "Target": "Alpha Codepath (Enabled When Developing)"
        },
        {
          "$type": "ActionSequence",
          "Children": [
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Garrison Automation for Draenor Daily Chores Main Script Sequence"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Initialze some variables (of interest to coders)"
            },
            {
              "$type": "CallBlock",
              "Target": "Initialize"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "If Not Done Yet Do The Quests For The Mine Or Herb Garden (Clearing The Garden/Things Are Not Goren Our Way)"
            },
            {
              "$type": "CallBlock",
              "Target": "Tests For Prerequisite Quests To Enable The Mine Or Herb Garden"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Test for being in the Mine Subzone, Then either resume mining or Exit The Mine"
            },
            {
              "$type": "CallBlock",
              "Target": "Test For Moving Out Of Mining SubZone"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Test For Should This Script Only Do Mining And Herbing?"
            },
            {
              "$type": "CallBlock",
              "Target": "Test User Setting For Herbing Or Mining Only"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Before activities that may net Garrison Resources, Ensure they are not maxed out."
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Set G[\"MaximumGarrisonResourcesBeforeLootingCacheOrCompletingMissions\"] (default is 7000)"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "In the C# Section in the First Block of this Script (USER SETTINGS)"
            },
            {
              "$type": "CallBlock",
              "Target": "Test Currency (Garrison Resources)"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Make sure character is at the Garrison Hearth Home Position"
            },
            {
              "$type": "CallBlock",
              "Target": "Test For Garrison Home Position And Attempt Hearth If Needed"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Do all Command Table Activities, #1) Complete Missions, #2) Use Weapon/Armor Enhancement Tokens, #3) Upgrade Followers, #4) Run Missions"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "#1 Requires the Addon called Master Plan (with the checkbox captioned \"Expedited mission completion\" checked)"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "#3 Requires the Addon called FollowerGearOptimizer (won't interfere with Garrison Commander)"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "#4 Requires the Addon called Garrison Commander (others may interfere)"
            },
            {
              "$type": "CallBlock",
              "Target": "Use Command Table"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Do Draenor Character Professions Crafting Dailes that do not require an Anvil"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Only applies to the two main professions on this character."
            },
            {
              "$type": "CallBlock",
              "Target": "Draenor DoTradeSkills"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Test to determine if this character has already done the remaining stuff \"this wow day\" (herb, mine, garrison dailes, etc...)"
            },
            {
              "$type": "CallBlock",
              "Target": "Test Skip the Rest?"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Loot the Garrison Cache if not already looted"
            },
            {
              "$type": "CallBlock",
              "Target": "Collect Garrison Cache"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Apparently this character has not done this stuff yet \"this wow day\"."
            },
            {
              "$type": "Comment",
              "Text": "This Character is doing daily stuff which has not already been done \"this wow day\".",
              "Color": "255, 128, 255"
            },
            {
              "$type": "CallBlock",
              "Target": "Armory Do"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "If this character has a V2 or V3 Gem Boutique And has not done the Jewelcrafting Daily Attempt to do it"
            },
            {
              "$type": "CallBlock",
              "Target": "Gem Boutique Do"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "If this character is under level 100 (leveling) and needs Garrison Resources, sumbit Trading Post Work Orders"
            },
            {
              "$type": "CallBlock",
              "Target": "Test For Level Under 100 Needs To Submit Trading Post Work Orders?"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Go Herbing"
            },
            {
              "$type": "CallBlock",
              "Target": "Herb Garden Do"
            },
            {
              "$type": "Comment",
              "IsInfo": false,
              "Text": "Go Mining"
            },
            {
              "$type": "CallBlock",
              "Target": "The Mine Do"
            },
            {
              "$type": "EndScript"
            }
          ],
          "GroupName": "Main Script Sequence"
        }
      ],
      "GroupName": "Main"
    },
    {
      "$type": "ActionSequence",
      "Children": [
        {
          "$type": "ActionSequence",
          "Children": [
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Initialize"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "Text": "Detect Faction and Garrison Level"
                    },
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "string thisFaction = \"\";\r\nstring thisLevel = \"\";\r\nif (Me.IsAlliance) \r\n{\r\n\tthisFaction = \"Alliance\";\r\n\tif (IsQuestCompleted(36615)) \r\n\t{\r\n\t\tthisLevel = \"Level3\"; \r\n\t} else \r\n\t{\r\n\t\tif (IsQuestCompleted(36592)) \r\n\t\t{\r\n\t\t\tthisLevel = \"Level2\";\r\n\t\t} else { thisLevel = \"Level1\"; }\r\n\t}\r\n}\r\n\r\nif (Me.IsHorde) \r\n{\r\n\tthisFaction = \"Horde\";\r\n\tif (IsQuestCompleted(36614)) \r\n\t{\r\n\t\tthisLevel = \"Level3\"; \r\n\t} else \r\n\t{\r\n\t\tif (IsQuestCompleted(36567)) \r\n\t\t{\r\n\t\t\tthisLevel = \"Level2\";\r\n\t\t} else { thisLevel = \"Level1\"; }\r\n\t}\r\n}\r\n\r\n\r\n//PrintInfo(\"Detected GarrisonFaction=\"+thisFaction);\r\n//PrintInfo(\"Detected GarrisonLevel=\"+thisLevel);\r\n\r\nG[\"GarrisonFaction\"] = thisFaction;\r\nG[\"GarrisonLevel\"] = thisLevel;\r\n\r\nif ((thisFaction == \"Alliance\") && (thisLevel == \"Level3\")) \r\n{ \r\n\tG[\"GarrisonMinePosition\"] = new Vector3(1906.141f, 95.35181f, 83.5256f);\r\n\tG[\"GarrisonFarmPosition\"] = new Vector3(1820.004f, 151.1286f, 76.60437f);\r\n\tG[\"GarrisonFishingShackPosition\"] = new Vector3(2021.639f, 174.4023f, 84.56709f);\r\n\tG[\"GarrisonMediumPlot1Position\"] = new Vector3(1867.319f, 300.4445f, 81.65955f);\r\n\tG[\"GarrisonMediumPlot2Position\"] = new Vector3(1875.268f, 197.4612f, 78.05647f);\r\n\tG[\"GarrisonLargePlot1Position\"] = new Vector3(1896.086f, 237.3929f, 76.6404f);\r\n\tG[\"GarrisonLargePlot2Position\"] = new Vector3(1834.056f, 271.3645f, 76.6404f);\r\n\tG[\"GarrisonSmallPlot1Position\"] = new Vector3(1827.231f, 205.4545f, 71.98605f);\r\n\tG[\"GarrisonSmallPlot2Position\"] = new Vector3(1821.751f, 222.0747f, 72.17419f);\r\n\tG[\"GarrisonSmallPlot3Position\"] = new Vector3(1796.797f, 203.8349f, 70.07415f);\r\n\tG[\"GarrisonMailboxPosition\"] = new Vector3(1924.104f, 294.436f, 88.9642f);\r\n\tG[\"GarrisonCachePosition\"] = new Vector3(1944.604f, 290.7702f, 88.9642f);\r\n\tG[\"GarrisonCommandTablePosition\"] = new Vector3(1934.11f, 345.9399f, 91.76401f);\r\n}\r\nif ((thisFaction == \"Alliance\") && (thisLevel == \"Level2\")) \r\n{ \r\n\tG[\"GarrisonMinePosition\"] = new Vector3(1904.86f, 93.27461f, 83.52528f);\r\n\tG[\"GarrisonFarmPosition\"] = new Vector3(1818.957f, 151.467f, 76.60437f);\r\n\tG[\"GarrisonFishingShackPosition\"] = new Vector3(2021.093f, 175.315f, 84.59418f);\r\n\tG[\"GarrisonMediumPlot1Position\"] = new Vector3(1867.316f, 300.2985f, 81.66061f);\r\n\tG[\"GarrisonLargePlot1Position\"] = new Vector3(1892.82f, 238.781f, 76.63972f);\r\n\tG[\"GarrisonSmallPlot1Position\"] = new Vector3(1822.26f, 222.0705f, 72.17432f);\r\n\tG[\"GarrisonSmallPlot2Position\"] = new Vector3(1827.093f, 206.7299f, 71.97854f);\r\n\tG[\"GarrisonMailboxPosition\"] = new Vector3(1923.158f, 296.7492f, 88.9643f);\r\n\tG[\"GarrisonCachePosition\"] = new Vector3(1942.211f, 289.794f, 88.9643f);\r\n\tG[\"GarrisonCommandTablePosition\"] = new Vector3(1944.399f, 330.0542f, 91.76407f);\r\n\t//Some stuff doesn't exist for this Level Garrison\r\n\tG[\"GarrisonMediumPlot2Position\"] = (Vector3)G[\"GarrisonMediumPlot1Position\"];\r\n\tG[\"GarrisonLargePlot2Position\"] = (Vector3)G[\"GarrisonLargePlot1Position\"];\r\n\tG[\"GarrisonSmallPlot3Position\"] = (Vector3)G[\"GarrisonSmallPlot1Position\"];\r\n}\r\nif ((thisFaction == \"Alliance\") && (thisLevel == \"Level1\")) \r\n{\r\n\tG[\"GarrisonMailboxPosition\"] = new Vector3(1850.208f, 254.7601f, 78.12648f);\r\n\tG[\"GarrisonCachePosition\"] = new Vector3(1892.145f, 214.5021f, 77.06219f);\r\n\tG[\"GarrisonCommandTablePosition\"] = new Vector3(1847.254f, 264.8563f, 78.31438f);\r\n\t//Some stuff doesn't exist for this Level Garrison\r\n\tG[\"GarrisonMinePosition\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonFarmPosition\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonFishingShackPosition\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonMediumPlot1Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonMediumPlot2Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonLargePlot1Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonLargePlot2Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonSmallPlot1Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonSmallPlot2Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonSmallPlot3Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n}\r\n\r\nif ((thisFaction == \"Horde\") && (thisLevel == \"Level3\")) \r\n{\r\n\tG[\"GarrisonMinePosition\"] = new Vector3(5473.777f, 4446.553f, 144.5857f);\r\n\tG[\"GarrisonFarmPosition\"] =  new Vector3(5413.376f, 4547.907f, 139.1234f);\r\n\tG[\"GarrisonFishingShackPosition\"] = new Vector3(5477.904f, 4614.571f, 134.4506f);\r\n\tG[\"GarrisonMediumPlot1Position\"] = new Vector3(5549.654f, 4522.418f, 131.2601f);\r\n\tG[\"GarrisonMediumPlot2Position\"] = new Vector3(5680.301f, 4486.312f, 130.085f);\r\n\tG[\"GarrisonLargePlot1Position\"] = new Vector3(5591.232f, 4480.952f, 130.2977f);\r\n\tG[\"GarrisonLargePlot2Position\"] = new Vector3(5643.285f, 4463.485f, 130.5254f);\r\n\tG[\"GarrisonSmallPlot1Position\"] = new Vector3(5642.984f, 4515.471f, 119.2692f);\r\n\tG[\"GarrisonSmallPlot2Position\"] = new Vector3(5654.33f, 4545.557f, 119.2652f);\r\n\tG[\"GarrisonSmallPlot3Position\"] = new Vector3(5625.308f, 4518.255f, 119.2709f);\r\n\tG[\"GarrisonMailboxPosition\"] = new Vector3(5585.87f, 4574.487f, 136.5342f);\r\n\tG[\"GarrisonCachePosition\"] = new Vector3(5594.384f, 4585.14f, 136.571f);\r\n\tG[\"GarrisonCommandTablePosition\"] = new Vector3(5561.559f, 4604.695f, 141.716f);\r\n\tPrintInfo(\"Horde Level 3\");\r\n}\r\nif ((thisFaction == \"Horde\") && (thisLevel == \"Level2\")) \r\n{ \r\n\tG[\"GarrisonMinePosition\"] = new Vector3(5474.952f, 4447.6f, 144.5495f);\r\n\tG[\"GarrisonFarmPosition\"] = new Vector3(5413.841f, 4549.771f, 139.1244f);\r\n\tG[\"GarrisonFishingShackPosition\"] = new Vector3(5476.003f, 4614.757f, 134.4497f);\r\n\tG[\"GarrisonMediumPlot1Position\"] = new Vector3(5544.554f, 4521.405f, 131.5806f);\r\n\tG[\"GarrisonLargePlot1Position\"] = new Vector3(5587.235f, 4475.563f, 130.281f);\r\n\tG[\"GarrisonSmallPlot1Position\"] = new Vector3(5639.765f, 4519.359f, 119.2005f);\r\n\tG[\"GarrisonSmallPlot2Position\"] = new Vector3(5654.986f, 4545.293f, 119.2618f);\r\n\tG[\"GarrisonMailboxPosition\"] = new Vector3(5584.29f, 4572.794f, 136.578f);\r\n\tG[\"GarrisonCachePosition\"] = new Vector3(5593.784f, 4591.348f, 136.5864f);\r\n\tG[\"GarrisonCommandTablePosition\"] = new Vector3(5561.67f, 4597.933f, 140.9089f);\r\n\t//Some stuff doesn't exist for this Level Garrison\r\n\tG[\"GarrisonMediumPlot2Position\"] = (Vector3)G[\"GarrisonMediumPlot1Position\"];\r\n\tG[\"GarrisonLargePlot2Position\"] = (Vector3)G[\"GarrisonLargePlot1Position\"];\r\n\tG[\"GarrisonSmallPlot3Position\"] = (Vector3)G[\"GarrisonSmallPlot1Position\"];\r\n}\r\nif ((thisFaction == \"Horde\") && (thisLevel == \"Level1\")) \r\n{\r\n\tG[\"GarrisonMailboxPosition\"] = new Vector3(5567.958f, 4511.583f, 132.3537f);\r\n\tG[\"GarrisonCachePosition\"] = new Vector3(5572.593f, 4502.434f, 131.0415f);\r\n\tG[\"GarrisonCommandTablePosition\"] = new Vector3(5561.244f, 4508.848f, 132.6943f);\r\n\t//Some stuff doesn't exist for this Level Garrison\r\n\tG[\"GarrisonMinePosition\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonFarmPosition\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonFishingShackPosition\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonMediumPlot1Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonMediumPlot2Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonLargePlot1Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonLargePlot2Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonSmallPlot1Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonSmallPlot2Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n\tG[\"GarrisonSmallPlot3Position\"] = (Vector3)G[\"GarrisonCommandTablePosition\"];\r\n}"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Detect Faction and Garrison Level"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Pathing Define Vectors"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "IsInfo": false,
                      "Text": "Profession DoTradeSkill Lua String Template"
                    },
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "G[\"ProfessionDoTradeSkillTemplate\"] = \"local todo = ##itemId## local result = false prof1id, prof2id = GetProfessions() prof1name = tostring(GetProfessionInfo(prof1id)) prof2name = tostring(GetProfessionInfo(prof2id)) if prof1name ~= 'nil' then CastSpellByName(prof2name) c=GetNumTradeSkills() if c == nil then c = 0 end t=-1 s='' x=-1 z=-1 if c > 6 then for i=1,c do n,_,a = GetTradeSkillInfo(i) l = GetTradeSkillItemLink(i) l = tostring(l) local id = tonumber(strmatch(l,'item:(%d+)')) if id == nil then id = 0 end if id == todo then t = i x = a s = tostring(n) z = id break end end end if t > 0 then if x > 0 then DoTradeSkill(t,1) result = true end end end if result == false then CastSpellByName(prof1name) c=GetNumTradeSkills() if c == nil then c = 0 end if c > 6 then for i=1,c do n,_,a = GetTradeSkillInfo(i) l = GetTradeSkillItemLink(i) l = tostring(l) local id = tonumber(strmatch(l,'item:(%d+)')) if id == nil then id = 0 end if id == todo then t = i x = a s = tostring(n) z = id break end end end if t > 0 then if x > 0 then DoTradeSkill(t,1) result = true end end end return result\";"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Professions"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Initialize"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int minDistance = 10;\r\nfloat z = 9999f;\r\nGameObject f = null;\r\nforeach (GameObject g in GameObjects)\r\n{\r\n\tfloat d = g.Distance;\r\n\tint e = g.EntryID;\r\n\tstring s = g.Name;\r\n\tif ((s.IndexOf(\"Anvil\") >= 0) || (e == 214229) || (e == 232534)) { if (d < z) { f = g; z = d; } }\r\n}\r\nif (!object.ReferenceEquals(null, f)) \r\n{\r\n\tif (z < minDistance)\r\n\t{\r\n\t\tG[\"AnvilVector3\"] = f.Position;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tG[\"AnvilVector3\"] = new Vector3(0f,0f,0f);\r\n\t}\r\n}\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Distance to the Closest Anvil"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "G[\"TradeSkill#111245\"] = -1;\r\nG[\"TradeSkill#108257\"] = -1;\r\nG[\"TradeSkill#118720\"] = -1;\r\nG[\"TradeSkill#111366\"] = -1;\r\nG[\"TradeSkill#119299\"] = -1;\r\nG[\"TradeSkill#108996\"] = -1;\r\nG[\"TradeSkill#118700\"] = -1;\r\nG[\"TradeSkill#113588\"] = -1;\r\nG[\"TradeSkill#115504\"] = -1;\r\nG[\"TradeSkill#119293\"] = -1;\r\nG[\"TradeSkill#112377\"] = -1;\r\nG[\"TradeSkill#119297\"] = -1;\r\nG[\"TradeSkill#115524\"] = -1;\r\nG[\"TradeSkill#170700\"] = -1;\r\nG[\"TradeSkill#118723\"] = -1;\r\nG[\"TradeSkill#110611\"] = -1;\r\nG[\"TradeSkill#118721\"] = -1;\r\nG[\"TradeSkill#111556\"] = -1;\r\nG[\"TradeSkill#118722\"] = -1;\r\n\r\nstring lua = \"result = '' prof1id, prof2id = GetProfessions() prof1name = tostring(GetProfessionInfo(prof1id)) prof2name = tostring(GetProfessionInfo(prof2id)) if prof1name ~= 'nil' then CastSpellByName(prof1name) c=GetNumTradeSkills() if c == nil then c = 0 end t=-1 s='' x=-1 z=-1 if c > 6 then for i=1,c do n,_,a = GetTradeSkillInfo(i) n = tostring(n) if a == nil then a = 0 end a = tonumber(a) l = GetTradeSkillItemLink(i) l = tostring(l) local id = tonumber(strmatch(l,'item:(%d+)')) if id == nil then id = 0 end if ((id == 111245) or (id == 108257) or (id == 118720) or (id == 111366) or (id == 119299) or (id == 108996) or (id == 118700) or (id == 115504) or (id == 119293) or (id == 112377) or (id == 119297) or (id == 115524) or (id == 170700) or (id == 113588) or (id == 118723) or (id == 110611) or (id == 118721) or (id == 111556) or (id == 118722)) then s = n x = a z = id w = GetTradeSkillCooldown(i) if w == nil then result = result..'TradeSkill#'..tostring(id)..':'..tostring(x)..',' end end end end end if prof2name ~= 'nil' then CastSpellByName(prof2name) c=GetNumTradeSkills() if c == nil then c = 0 end t=-1 s='' x=-1 z=-1 if c > 6 then for i=1,c do n,_,a = GetTradeSkillInfo(i) n = tostring(n) if a == nil then a = 0 end a = tonumber(a) l = GetTradeSkillItemLink(i) l = tostring(l) local id = tonumber(strmatch(l,'item:(%d+)')) if id == nil then id = 0 end if ((id == 111245) or (id == 108257) or (id == 118720) or (id == 111366) or (id == 119299) or (id == 108996) or (id == 118700) or (id == 115504) or (id == 119293) or (id == 112377) or (id == 119297) or (id == 115524) or (id == 170700) or (id == 113588) or (id == 118723) or (id == 110611) or (id == 118721) or (id == 111556) or (id == 118722)) then s = n x = a z = id w = GetTradeSkillCooldown(i) if w == nil then result = result..'TradeSkill#'..tostring(id)..':'..tostring(x)..',' end end end end end return result\";\r\n\r\nstring p = ExecuteLua<string>(lua);\r\n\r\nyield return 200;\r\n\r\nif (object.ReferenceEquals(null,p))\r\n{\r\n\tp = \"null\";\r\n\tyield return 2000;\r\n\tp = ExecuteLua<string>(lua);\r\n\tPrintInfo(\"p=\"+p);\r\n}\r\nif (object.ReferenceEquals(null,p))\r\n{\r\n\tp = \"null\";\r\n\tyield return 2000;\r\n\tp = ExecuteLua<string>(lua);\r\n\tPrintInfo(\"p=\"+p);\r\n}\r\nif (object.ReferenceEquals(null,p))\r\n{\r\n\tp = \"null\";\r\n\tPrintInfo(\"p=\"+p);\r\n}\r\n\r\n\r\n\r\n\r\nstring[] ks = p.Split(new char[] {','});\r\nfor(int i = 0; i < ks.Length; i++)\r\n{\r\n//\tPrintInfo(ks[i]);\r\n\tif (ks[i].IndexOf(\":\") > 0)\r\n\t{\r\n//\t\tPrintInfo(ks[i]);\r\n\t\tstring[] kt = ks[i].Split(new char[] {':'});\r\n\t\tif (kt.Length == 2)\r\n\t\t{\r\n//\t\t\tPrintInfo(kt[0]);\r\n//\t\t\tPrintInfo(kt[1]);\r\n\t\t\tint haveMatsToCraftQuantityOf = -1;\r\n\t\t\tInt32.TryParse(kt[1].Trim(), out haveMatsToCraftQuantityOf);\r\n\t\t\tif (object.ReferenceEquals(null, haveMatsToCraftQuantityOf)) { haveMatsToCraftQuantityOf = -1; }\r\n\t\t\tif (haveMatsToCraftQuantityOf >= 0)\r\n\t\t\t{\r\n\t\t\t\tG[kt[0].Trim()] = haveMatsToCraftQuantityOf;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Examine Characters Proffessions"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Initialize SomeVariables"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "            int TemporalCrystal = -1;\r\n            try { TemporalCrystal = (int)G[\"TradeSkill#113588\"]; }\r\n            catch { TemporalCrystal = -1; }\r\n            if (TemporalCrystal < 0)\r\n            {\r\n                PrintInfo(\"Do not need to craft a Temporal Crystal right now, therefore we do not need a Luminous Shard.\");\r\n            }\r\n            else\r\n            {\r\n                int LuminousShard = -1;\r\n                try { LuminousShard = (int)G[\"TradeSkill#111245\"]; }\r\n                catch { LuminousShard = -1; }\r\n                if (LuminousShard == 0)\r\n                {\r\n                    PrintInfo(\"Need mats to craft a Luminous Shard (which is needed).\");\r\n                }\r\n                else\r\n                {\r\n\r\n                    int itemId = 111245;\r\n                    string lua = \"\";\r\n                    try { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; }\r\n                    catch { lua = \"\"; }\r\n                    lua = lua.Replace(\"##itemId##\", itemId.ToString());\r\n\r\n                    //PrintInfo(lua);\r\n\r\n                    bool didDo = false;\r\n                    didDo = ExecuteLua<bool>(lua);\r\n                    //if (didDo) {}\r\n\r\n                    yield return 200;\r\n\r\n                    if (Me.RemainingCastTime > 0)\r\n                    {\r\n                        PrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n                        yield return Me.RemainingCastTime;\r\n                    }\r\n                    yield return 200;\r\n                }\r\n            }\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Luminous Shard"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#111366\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\n\r\n\r\nVector3 anvilPosition = new Vector3(0f,0f,0f);\r\ntry { anvilPosition = (Vector3)G[\"AnvilVector3\"]; } catch { anvilPosition = new Vector3(0f,0f,0f); }\r\nfloat anvilDistance = Me.DistanceTo(anvilPosition);\r\nbool nearAnvil = false;\r\nif (anvilDistance < 10)\r\n{ \r\n\tnearAnvil = true;\r\n}\r\nelse\r\n{\r\n\tbool hasThermalAnvil = false;\r\n\tstring lua = \"local itemId = 87216 local result = false for b=0,4 do for s=1,GetContainerNumSlots(b) do local id=GetContainerItemID(b,s) if id == nil then id = 0 end if (id ==  itemId) then result = true break end end end return result\";\r\n\thasThermalAnvil = ExecuteLua<bool>(lua);\r\n\r\n\tif (hasThermalAnvil) \r\n\t{\r\n\t\tstring cultureItemName = ExecuteLua<string>(\"return GetItemInfo(87216)\");\r\n\t\tExecuteLua<string>(\"UseItemByName('\"+ cultureItemName + \"', '') \");\r\n\t\tnearAnvil = true;\r\n\t}\r\n}\r\n\r\nif (nearAnvil)\r\n{\r\n\r\nint itemId = 111366;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n}\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Gearspring Parts"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#108257\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\n\r\nVector3 anvilPosition = new Vector3(0f,0f,0f);\r\ntry { anvilPosition = (Vector3)G[\"AnvilVector3\"]; } catch { anvilPosition = new Vector3(0f,0f,0f); }\r\nfloat anvilDistance = Me.DistanceTo(anvilPosition);\r\nbool nearAnvil = false;\r\nif (anvilDistance < 10)\r\n{ \r\n\tnearAnvil = true;\r\n}\r\nelse\r\n{\r\n\tbool hasThermalAnvil = false;\r\n\tstring lua = \"local itemId = 87216 local result = false for b=0,4 do for s=1,GetContainerNumSlots(b) do local id=GetContainerItemID(b,s) if id == nil then id = 0 end if (id ==  itemId) then result = true break end end end return result\";\r\n\thasThermalAnvil = ExecuteLua<bool>(lua);\r\n\r\n\tif (hasThermalAnvil) \r\n\t{\r\n\t\tstring cultureItemName = ExecuteLua<string>(\"return GetItemInfo(87216)\");\r\n\t\tExecuteLua<string>(\"UseItemByName('\"+ cultureItemName + \"', '') \");\r\n\t\tnearAnvil = true;\r\n\t}\r\n}\r\n\r\nif (nearAnvil)\r\n{\r\n\r\n\r\nint itemId = 108257;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n}\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Truesteel Ingot"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#108996\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 108996;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Alchemical Catalyst"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#111556\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 111556;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Hexweave Cloth"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#115524\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 115524;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Taladite Crystal"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#110611\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 110611;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Burnished Leather"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#112377\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 112377;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill War Paints"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#113588\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 113588;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Temporal Crystal"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#119299\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\n\r\nVector3 anvilPosition = new Vector3(0f,0f,0f);\r\ntry { anvilPosition = (Vector3)G[\"AnvilVector3\"]; } catch { anvilPosition = new Vector3(0f,0f,0f); }\r\nfloat anvilDistance = Me.DistanceTo(anvilPosition);\r\nbool nearAnvil = false;\r\nif (anvilDistance < 10)\r\n{ \r\n\tnearAnvil = true;\r\n}\r\nelse\r\n{\r\n\tbool hasThermalAnvil = false;\r\n\tstring lua = \"local itemId = 87216 local result = false for b=0,4 do for s=1,GetContainerNumSlots(b) do local id=GetContainerItemID(b,s) if id == nil then id = 0 end if (id ==  itemId) then result = true break end end end return result\";\r\n\thasThermalAnvil = ExecuteLua<bool>(lua);\r\n\r\n\tif (hasThermalAnvil) \r\n\t{\r\n\t\tstring cultureItemName = ExecuteLua<string>(\"return GetItemInfo(87216)\");\r\n\t\tExecuteLua<string>(\"UseItemByName('\"+ cultureItemName + \"', '') \");\r\n\t\tnearAnvil = true;\r\n\t}\r\n}\r\n\r\nif (nearAnvil)\r\n{\r\n\r\n\r\nint itemId = 119299;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n}\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Engineering"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#118720\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\n\r\nVector3 anvilPosition = new Vector3(0f,0f,0f);\r\ntry { anvilPosition = (Vector3)G[\"AnvilVector3\"]; } catch { anvilPosition = new Vector3(0f,0f,0f); }\r\nfloat anvilDistance = Me.DistanceTo(anvilPosition);\r\nbool nearAnvil = false;\r\nif (anvilDistance < 10)\r\n{ \r\n\tnearAnvil = true;\r\n}\r\nelse\r\n{\r\n\tbool hasThermalAnvil = false;\r\n\tstring lua = \"local itemId = 87216 local result = false for b=0,4 do for s=1,GetContainerNumSlots(b) do local id=GetContainerItemID(b,s) if id == nil then id = 0 end if (id ==  itemId) then result = true break end end end return result\";\r\n\thasThermalAnvil = ExecuteLua<bool>(lua);\r\n\r\n\tif (hasThermalAnvil) \r\n\t{\r\n\t\tstring cultureItemName = ExecuteLua<string>(\"return GetItemInfo(87216)\");\r\n\t\tExecuteLua<string>(\"UseItemByName('\"+ cultureItemName + \"', '') \");\r\n\t\tnearAnvil = true;\r\n\t}\r\n}\r\n\r\nif (nearAnvil)\r\n{\r\n\r\n\r\nint itemId = 118720;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Blacksmithing"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#118700\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 118700;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Alchemy"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#118722\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 118722;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Tailoring"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#118723\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 118723;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Jewelcrafting"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#118721\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 118721;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Leatherworking"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#119297\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 119297;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Inscription"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int xx = -1;\r\ntry { xx = (int)G[\"TradeSkill#119293\"]; } catch { xx = -1; }\r\nif (xx < 0)\r\n{\r\n\t//this tradeskill is not needed\r\n}\r\nelse if (xx == 0)\r\n{\r\n\t//this tradeskill is needed, but mats are needed.\r\n}\r\nelse\r\n{\r\nint itemId = 119293;\r\nstring lua = \"\";\r\ntry { lua = (string)G[\"ProfessionDoTradeSkillTemplate\"]; } catch { lua = \"\"; }\r\nlua = lua.Replace(\"##itemId##\",itemId.ToString());\r\n\r\n//PrintInfo(lua);\r\n\r\nbool didDo = false;\r\ndidDo = ExecuteLua<bool>(lua);\r\n//if (didDo) {}\r\n\r\nyield return 200;\r\n\r\nif (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n}"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "DoTradeSkill Secrets of Draenor Enchanting"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ExecuteLua",
                          "LuaCode": "TradeSkillFrameCloseButton:Click()"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Trade Skill Frame Close"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Draenor DoTradeSkills"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Trade Skills"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "Text": "Checking Currency (Garrison Resources)"
                    },
                    {
                      "$type": "If",
                      "IsExtendedInEditor": false,
                      "ActionsFalse": {
                        "Children": [],
                        "IsSpecialElement": true,
                        "SpecialElementName": "Else",
                        "GroupName": ""
                      },
                      "ActionsTrue": {
                        "Children": [
                          {
                            "$type": "Comment",
                            "Text": "Too many Garrison Resources, exchanging some for Gold."
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Move To Trading Post"
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Move To Trader"
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Exchange Resoucers for Gold via Smuggeld Gold Sacks"
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Move Away From Trader"
                          },
                          {
                            "$type": "If",
                            "IsExtendedInEditor": false,
                            "ActionsFalse": {
                              "Children": [
                                {
                                  "$type": "Comment",
                                  "Text": "No Trading Post Orders are Ready for Pickup"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "IsSpecialElement": true,
                              "SpecialElementName": "Else",
                              "GroupName": ""
                            },
                            "ActionsTrue": {
                              "Children": [
                                {
                                  "$type": "Comment",
                                  "Text": "Picking up Ready Trading Post Orders"
                                },
                                {
                                  "$type": "CallBlock",
                                  "Target": "Move To Trading Post Shipment"
                                },
                                {
                                  "$type": "CallBlock",
                                  "Target": "Collect Trading Post Shipment"
                                },
                                {
                                  "$type": "CallBlock",
                                  "Target": "Move Away From Trading Post Shipment"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "IsSpecialElement": true,
                              "SpecialElementName": "Then",
                              "GroupName": ""
                            },
                            "Condition": {
                              "$type": "LuaCondition",
                              "LuaCode": "--Test to see if any Trading Post Orders are Ready for Pickup\r\nlocal orders = 'Trading Post'\r\n--orders = 'Lunarfall Excavation'\r\nresult = false for k,v in pairs(C_Garrison.GetBuildings()) do local name, texture, shipmentCapacity, shipmentsReady, shipmentsTotal, creationTime, duration, timeleftString, itemName, itemIcon, itemQuality, itemID = C_Garrison.GetLandingPageShipmentInfo(v.buildingID) if tostring( shipmentsTotal) == 'nil' then  shipmentsTotal = 0 end if tostring( shipmentsReady) == 'nil' then shipmentsReady = 0 end if tostring( shipmentsCapacity) == 'nil' then  shipmentsCapacity = 0 end if tostring(name) ~= 'nil' then print(name) shipmentsReady = tonumber(shipmentsReady) shipmentsCapacity = tonumber(shipmentsCapacity) shipmentsTotal = tonumber(shipmentsTotal) shipmentsPending = shipmentsTotal-shipmentsReady if ((orders == name) and (shipmentsReady > 0)) then result = true end end end print(result) return result"
                            }
                          },
                          {
                            "$type": "Comment",
                            "Text": "No Trade Post Orders should be submitted."
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Move To Garrison Cache"
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Collect Garrison Cache"
                          },
                          {
                            "$type": "CallBlock",
                            "Target": "Move To Command Table"
                          }
                        ],
                        "IsExtendedInEditor": false,
                        "IsSpecialElement": true,
                        "SpecialElementName": "Then",
                        "GroupName": ""
                      },
                      "Condition": {
                        "$type": "CSharpCondition",
                        "CSharpCode": "bool result = false;\r\nint maxResDefault = 7000;\r\nint maxRes = maxResDefault; //default to 7k\r\ntry { maxRes = (int)G[\"MaximumGarrisonResourcesBeforeLootingCacheOrCompletingMissions\"]; } catch { maxRes = maxResDefault; }\r\nint curRes = ExecuteLua<int>(\"_,amount,_,_,_,_,_ = GetCurrencyInfo(824) return amount\");\r\nif (curRes > maxRes) { result = true; }\r\nreturn result;"
                      }
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Checking Currency (Garrison Resources)"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "int maxDistance = 20; //20 yards max distance to search\r\nint minDistance = 5; //5 yards max distance to search\r\nint maxTriesMoveTo = 99; //10 yards max distance to search\r\nint i = 1;\r\nUnitObject x = null;\r\ndouble z = 1000.0;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tstring s = (string)\"\" + u.Name;\r\n\tint e = u.EntryID;\r\n\tdouble d = (double)0.0 + u.Distance;\r\n\t//PrintInfo(s);\r\n\tif ((s.Equals(\"Command Table\")) || (e == 84698) || ( e== 84224))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\tPrintInfo(\"Could not find Command Table?\");\r\n} else\r\n{\r\n\t//ExecuteLua<string>(\"print('\" + x.Name + \"')\");\r\n\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tMoveTo(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to use Command Table\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 2000;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Interact with Command Table"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "Text": "Use Command Table"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "Text": "Complete Missions Requires Garrison Commander Addon (others may interfere)",
                          "Color": "255, 128, 255"
                        },
                        {
                          "$type": "Comment",
                          "Text": "Completing Missions"
                        },
                        {
                          "$type": "CallBlock",
                          "Target": "Interact with Command Table"
                        },
                        {
                          "$type": "ExecuteLua",
                          "LuaCode": "--print(\"Master Plan Complete All Button Finder\")\r\nlocal thisButton = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n\tif frame:IsVisible() then\r\n\t\tlocal n = tostring(frame:GetName())\r\n\t\tlocal w = tostring(frame:GetWidth())\r\n\t\tlocal x = tonumber(frame:GetWidth())\r\n\t\tlocal t = tostring(type(frame))\r\n\t\tlocal ok = \"false\"\r\n\t\tif ((t == \"table\") and (x > 199)) then\r\n--\t\t\tprint(n..\":\"..w..\":\"..t)\r\n\t\t\tfor k, v in pairs(frame) do\r\n--\t\t\t\tprint(tostring(k))\r\n\t\t\t\tif tostring(k) == \"Middle\" then\r\n\t\t\t\t\tok = \"true\"\r\n\t\t\t\t\t break\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\tif ok == \"true\" then\r\n\t\t\tlocal e = tostring(frame:GetText())\r\n--\t\t\tprint(e)\r\n\t\t\tif strfind(e,\"Complete All\") ~= nil then \t\t--\t\t\t\tprint(\"found\")\r\n\t\t\t\tthisButton = frame\r\n\t\t\t\tbreak\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\n_G[\"MasterPlanDoneWaitCounter\"] = 0\r\n_G[\"MasterPlanDidCompleteAllButtonClick\"] = \"false\"\r\nif thisButton ~= nil then\r\n--\tprint(\"found it....\")\r\n\tframe:Click()\r\n\t_G[\"MasterPlanDidCompleteAllButtonClick\"] = \"true\"\r\nend\r\n"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Waiting for Done..."
                                  },
                                  {
                                    "$type": "Wait",
                                    "Delay": 1.0
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Master Plan Done Button Foo"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "LuaCondition",
                                "LuaCode": "local counter = tonumber(_G[\"MasterPlanDoneWaitCounter\"])\r\nif counter == nil then counter = 999 end\r\ncounter = counter  + 1\r\n_G[\"MasterPlanDoneWaitCounter\"] = counter\r\nlocal result = false\r\n--print(\"Master Plan Done Button Finder\")\r\nlocal thisButton = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n\tif frame:IsVisible() then\r\n\t\tlocal n = tostring(frame:GetName())\r\n\t\tlocal w = tostring(frame:GetWidth())\r\n\t\tlocal x = tonumber(frame:GetWidth())\r\n\t\tlocal t = tostring(type(frame))\r\n\t\tlocal ok = \"false\"\r\n\t\tif ((t == \"table\") and (x > 199)) then\r\n--\t\t\tprint(n..\":\"..w..\":\"..t)\r\n\t\t\tfor k, v in pairs(frame) do\r\n--\t\t\t\tprint(tostring(k))\r\n\t\t\t\tif tostring(k) == \"Middle\" then\r\n\t\t\t\t\tok = \"true\"\r\n\t\t\t\t\t break\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\tif ok == \"true\" then\r\n\t\t\tlocal e = tostring(frame:GetText())\r\n--\t\t\tprint(e)\r\n\t\t\tif strfind(e,\"Done\") ~= nil then \t\t\t--\t\t\t\tprint(\"found\")\r\n\t\t\t\tthisButton = frame\r\n\t\t\t\tbreak\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif thisButton ~= nil then\r\n--\tprint(\"found it....\")\r\n\tresult = true\r\nend\r\nif tostring(_G[\"MasterPlanDidCompleteAllButtonClick\"]) == \"false\" then result = true end\r\nif counter > 19 then result = true end\r\nprint(counter)\r\nreturn result"
                              },
                              "IsNot": true
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Master Plan Done Button Foo"
                        },
                        {
                          "$type": "ExecuteLua",
                          "LuaCode": "--print(\"Master Plan Done Button Finder\")\r\nlocal thisButton = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n\tif frame:IsVisible() then\r\n\t\tlocal n = tostring(frame:GetName())\r\n\t\tlocal w = tostring(frame:GetWidth())\r\n\t\tlocal x = tonumber(frame:GetWidth())\r\n\t\tlocal t = tostring(type(frame))\r\n\t\tlocal ok = \"false\"\r\n\t\tif ((t == \"table\") and (x > 199)) then\r\n--\t\t\tprint(n..\":\"..w..\":\"..t)\r\n\t\t\tfor k, v in pairs(frame) do\r\n--\t\t\t\tprint(tostring(k))\r\n\t\t\t\tif tostring(k) == \"Middle\" then\r\n\t\t\t\t\tok = \"true\"\r\n\t\t\t\t\t break\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\tif ok == \"true\" then\r\n\t\t\tlocal e = tostring(frame:GetText())\r\n--\t\t\tprint(e)\r\n\t\t\tif strfind(e,\"Done\") ~= nil then \t\t\t--\t\t\t\tprint(\"found\")\r\n\t\t\t\tthisButton = frame\r\n\t\t\t\tbreak\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif thisButton ~= nil then\r\n--\tprint(\"found it....\")\r\n\tframe:Click()\r\nend\r\n"
                        },
                        {
                          "$type": "Wait",
                          "Delay": 0.2
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Complete Missions"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "While",
                              "IsExtendedInEditor": false,
                              "LoopActions": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Armor Enhancement Token Found in Inventory, Using it..."
                                  },
                                  {
                                    "$type": "CSharpAction",
                                    "CSharpCode": "string cultureItemName = ExecuteLua<string>(\"return GetItemInfo(120301)\");\r\nExecuteLua<string>(\"UseItemByName(\\\"\"+ cultureItemName + \"\\\", \\\"\\\") \");\r\n"
                                  },
                                  {
                                    "$type": "Wait",
                                    "Delay": 1.6,
                                    "DelayMax": 1.6
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Do",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "LuaCondition",
                                "LuaCode": "local itemId = 120301\r\nlocal result = false\r\nfor b=0,4 do\r\n     for s=1,GetContainerNumSlots(b) do \r\n          local id=GetContainerItemID(b,s)\r\n\tif id == nil then id = 0 end\r\n\t--print(tostring(id))\r\n          if (id ==  itemId) then\r\n--               print(\"found \"..tostring(id)..\" bag:\"..tostring(b)..\"; slot:\"..tostring(s)..\";\")\r\n--               UseContainerItem(b,s)\r\n               result = true\r\n               break\r\n          end\r\n     end\r\nend\r\nreturn result"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Armor Enhancement Tokens"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "While",
                              "IsExtendedInEditor": false,
                              "LoopActions": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Weapon Enhancement Token Found in Inventory, Using it..."
                                  },
                                  {
                                    "$type": "CSharpAction",
                                    "CSharpCode": "string cultureItemName = ExecuteLua<string>(\"return GetItemInfo(120302)\");\r\nExecuteLua<string>(\"UseItemByName(\\\"\"+ cultureItemName + \"\\\", \\\"\\\") \");\r\n"
                                  },
                                  {
                                    "$type": "Wait",
                                    "Delay": 1.6,
                                    "DelayMax": 1.6
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Do",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "LuaCondition",
                                "LuaCode": "local itemId = 120302\r\nlocal result = false\r\nfor b=0,4 do\r\n     for s=1,GetContainerNumSlots(b) do \r\n          local id=GetContainerItemID(b,s)\r\n\tif id == nil then id = 0 end\r\n\t--print(tostring(id))\r\n          if (id ==  itemId) then\r\n--               print(\"found \"..tostring(id)..\" bag:\"..tostring(b)..\"; slot:\"..tostring(s)..\";\")\r\n--               UseContainerItem(b,s)\r\n               result = true\r\n               break\r\n          end\r\n     end\r\nend\r\nreturn result"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Weapon Enhancement Tokens"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "CSharpCode": "",
                      "GroupName": "Weapon and Armor Enhancement Tokens"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ExecuteLua",
                          "LuaCode": "GarrisonMissionFrameTab2:Click()"
                        },
                        {
                          "$type": "Wait",
                          "Delay": 1.0
                        },
                        {
                          "$type": "If",
                          "IsExtendedInEditor": false,
                          "ActionsFalse": {
                            "Children": [
                              {
                                "$type": "Comment",
                                "Text": "FollowerGearOptimizer Addon Required For Automatic Follower Upgrading",
                                "Color": "255, 128, 255"
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "ExecuteLua",
                                "LuaCode": "local ThisButtonName = \"FollowerGearOptimizerButton\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     ThisButton:Click() \r\nend"
                              },
                              {
                                "$type": "Wait",
                                "Delay": 0.4,
                                "DelayMax": 0.4
                              },
                              {
                                "$type": "If",
                                "IsExtendedInEditor": false,
                                "ActionsFalse": {
                                  "Children": [],
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Else",
                                  "GroupName": ""
                                },
                                "ActionsTrue": {
                                  "Children": [
                                    {
                                      "$type": "ExecuteLua",
                                      "LuaCode": "local ThisButtonName = \"FGOOptimize675\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     ThisButton:Click() \r\nend"
                                    },
                                    {
                                      "$type": "Wait",
                                      "Delay": 2.0,
                                      "DelayMax": 2.0
                                    },
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "ExecuteLua",
                                            "LuaCode": "local ThisButtonName = \"FGOApply\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n          --print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     local e = tostring(ThisButton:IsEnabled())\r\n     print(e)\r\n     if e == \"true\" then\r\n          ThisButton:Click()\r\n     else\r\nframe = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n          if strfind(n,\"Optimize\") then print(n) frame:Hide() end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n     end\r\nend"
                                          },
                                          {
                                            "$type": "Wait",
                                            "Delay": 3.0,
                                            "DelayMax": 3.0
                                          },
                                          {
                                            "$type": "While",
                                            "IsExtendedInEditor": false,
                                            "LoopActions": {
                                              "Children": [
                                                {
                                                  "$type": "ExecuteLua",
                                                  "LuaCode": "local ThisButtonName = \"FGOApplyButton\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     ThisButton:Click() \r\nend"
                                                },
                                                {
                                                  "$type": "Wait",
                                                  "Delay": 2.0,
                                                  "DelayMax": 2.0
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Do",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "LuaCondition",
                                              "LuaCode": "local result = false\r\nlocal ThisButtonName = \"FGOApplyButton\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     result = true\r\nend\r\n\r\nreturn result"
                                            }
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "LuaCondition",
                                        "LuaCode": "local result = false\r\nlocal ThisButtonName = \"FGOApply\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     result = true\r\nend\r\nreturn result"
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Then",
                                  "GroupName": ""
                                },
                                "Condition": {
                                  "$type": "LuaCondition",
                                  "LuaCode": "local result = false\r\nlocal ThisButtonName = \"FGOOptimize675\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     result = true\r\nend\r\nreturn result"
                                }
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "LuaCondition",
                            "LuaCode": "local result = false\r\nlocal ThisButtonName = \"FollowerGearOptimizerButton\"\r\nlocal ThisButton = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n--          print(n)\r\n          if n == ThisButtonName then\r\n--\tprint(\"found it\")\r\n               ThisButton = frame\r\n               break\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif ThisButton ~= nil then\r\n--     print(\"found button: \"..ThisButtonName)\r\n     result = true\r\nend\r\nreturn result"
                          }
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Upgrade Followers"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "Text": "Starting Missions"
                        },
                        {
                          "$type": "ExecuteLua",
                          "LuaCode": "GarrisonMissionFrame.tabMC:Click()"
                        },
                        {
                          "$type": "Wait",
                          "Delay": 4.0
                        },
                        {
                          "$type": "ExecuteLua",
                          "LuaCode": "_G[\"GMCCounter\"] = 0"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "ExecuteLua",
                                    "LuaCode": "GMC.runButton:Click()"
                                  },
                                  {
                                    "$type": "Wait",
                                    "Delay": 4.0
                                  },
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [],
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "ExecuteLua",
                                          "LuaCode": "GarrisonMissionFrame.CloseButton:Click()"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Interact with Command Table"
                                        },
                                        {
                                          "$type": "Wait",
                                          "Delay": 4.0,
                                          "DelayMax": 3.0
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Starting Missions Button Click"
                                        },
                                        {
                                          "$type": "ExecuteLua",
                                          "LuaCode": "GMC.startButton:Click()"
                                        },
                                        {
                                          "$type": "Wait",
                                          "Delay": 3.0
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "LuaCondition",
                                      "LuaCode": "_G[\"GMCCounter\"] = _G[\"GMCCounter\"] + 1\r\nlocal result = false\r\nlocal e = tostring(GMC.startButton:IsEnabled())\r\nlocal v = tostring(GMC.startButton:IsVisible())\r\n--print (\"sseee\"..e)\r\n--print (\"ssvvv\"..v)\r\nif (e == \"true\") and (e == \"true\") then result = true end\r\nif _G[\"GMCCounter\"] > 4 then result = false end\r\nreturn result"
                                    }
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "LuaCondition",
                                "LuaCode": "local result = false\r\nlocal e = tostring(GMC.runButton:IsEnabled())\r\nlocal v = tostring(GMC.runButton:IsVisible())\r\n--print (\"eeeee\"..e)\r\n--print (\"vvvvv\"..v)\r\nif (e == \"true\") and (e == \"true\") then result = true end\r\nreturn result"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Starting Missions Button Click"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Starting Missions"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Use Command Table"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ExecuteLua",
                      "LuaCode": "local lastMissionID, numSucceeded, numFailed\r\nlocal function QueryMissions()\r\nlocal missions = C_Garrison.GetCompleteMissions()\r\nif(#missions > 0) then\r\nif(not lastMissionID) then\r\nprint('Found', #missions)\r\nnumSucceeded, numFailed = 0, 0\r\nend\r\nlastMissionID = missions[1].missionID\r\nC_Timer.After(1/2, function()\r\nC_Garrison.MarkMissionComplete(lastMissionID)\r\nend)\r\nelseif(lastMissionID) then\r\nGarrisonMissionFrame.MissionTab.MissionList.CompleteDialog:Hide()\r\nprint(numSucceeded, 'missions successful')\r\nprint(numFailed, 'missions failed')\r\nnumSucceeded, numFailed, lastMissionID = nil, nil, nil\r\nend\r\nend\r\nlocal Handler = CreateFrame('Frame')\r\nHandler:RegisterEvent('GARRISON_MISSION_NPC_OPENED')\r\nHandler:RegisterEvent('GARRISON_MISSION_COMPLETE_RESPONSE')\r\nHandler:SetScript('OnEvent', function(self, event, ...)\r\nif(event == 'GARRISON_MISSION_NPC_OPENED') then\r\nif(IsShiftKeyDown()) then\r\nself:UnregisterEvent(event)\r\nself:RegisterEvent('GARRISON_MISSION_NPC_CLOSED')\r\nelse\r\nQueryMissions()\r\nend\r\nelseif(event == 'GARRISON_MISSION_NPC_CLOSED') then\r\nself:RegisterEvent('GARRISON_MISSION_NPC_OPENED')\r\nelse\r\nlocal missionID, canComplete, wasSuccessful = ...\r\nif(missionID == lastMissionID and canComplete) then\r\nif(wasSuccessful and C_Garrison.CanOpenMissionChest(missionID)) then\r\nnumSucceeded = numSucceeded + 1\r\nC_Garrison.MissionBonusRoll(missionID)\r\nreturn\r\nend\r\nnumFailed = numFailed + 1\r\nC_Timer.After(1/2, QueryMissions)\r\nend\r\nend\r\nend)"
                    },
                    {
                      "$type": "ExecuteLua",
                      "LuaCode": "local kids = { WorldFrame:GetChildren() };\r\nprint(\"blah................\")\r\nfor _, child in ipairs(kids) do\r\n\tprint(tostring(child:GetName())..\":\"..tostring(child:IsVisible()))\r\n\tlocal kids1 = { child:GetChildren() };\r\n\tfor _, child1 in ipairs(kids1) do\r\n\t\tprint(\"     1\")--..tostring(child:GetWidth()))--\"     \"..child1:GetName()))\r\n\tend\r\nend\r\n"
                    },
                    {
                      "$type": "ExecuteLua",
                      "LuaCode": "print(\"---------------------------\")\r\nlocal frame = EnumerateFrames(FollowerGearOptimizerFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n          local w = tostring(frame:GetWidth())\r\n          local x = tonumber(frame:GetWidth())\r\n          local t = tostring(type(frame))\r\n\tprint(n..\":\"..w..\":\"..t)\r\n               if t == \"table\" then\r\n                    for k, v in pairs(frame) do\r\n--                         print(tostring(k))\r\n                         local m = tostring(k)\r\n                         if m == \"UpArrow\" then\r\n                              local a = tostring(frame:GetText())\r\n                              print(a)\r\n                              if n == \"GarrisonMissionFrameFollowersListScrollFrameButton10\" then\r\n                                   print(\"blah\")\r\n                              end\r\n                         end\r\n                    end\r\n          end\r\n     end\r\n    frame = EnumerateFrames(frame)\r\nend"
                    },
                    {
                      "$type": "ExecuteLua",
                      "LuaCode": "--print(\"Garrison Commander Quick Mission Completion Button Finder\")\r\nlocal GCQMissionCompleteButton = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n\tif frame:IsVisible() then\r\n\t\tlocal n = tostring(frame:GetName())\r\n\t\tlocal w = tostring(frame:GetWidth())\r\n\t\tlocal x = tonumber(frame:GetWidth())\r\n\t\tlocal t = tostring(type(frame))\r\n\t\tlocal ok = \"false\"\r\n\t\tif ((t == \"table\") and (x > 199)) then\r\n--\t\t\tprint(n..\":\"..w..\":\"..t)\r\n\t\t\tfor k, v in pairs(frame) do\r\n--\t\t\t\tprint(tostring(k))\r\n\t\t\t\tif tostring(k) == \"Middle\" then\r\n\t\t\t\t\tok = \"true\"\r\n\t\t\t\t\t break\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\tif ok == \"true\" then\r\n\t\t\tlocal e = tostring(frame:GetText())\r\n--\t\t\tprint(e)\r\n\t\t\tif strfind(e,\"Quick Mission Compl\") ~= nil then \t\t\t\t--print(\"found\")\r\n\t\t\t\tGCQMissionCompleteButton = frame\r\n\t\t\t\tbreak\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n    frame = EnumerateFrames(frame)\r\nend\r\n\r\nif GCQMissionCompleteButton ~= nil then\r\n\tprint(\"found it....\")\r\n\tframe:Click()\r\nend\r\n"
                    },
                    {
                      "$type": "ExecuteLua",
                      "LuaCode": "--print(\"Garrison Commander Mission Completion Results Display Frame Finder\")\r\nlocal GCQMissionCompletedDisplay = nil\r\nlocal frame = EnumerateFrames(GarrisonMissionFrame)\r\nwhile frame do\r\n     if frame:IsVisible() then\r\n          local n = tostring(frame:GetName())\r\n          local w = tostring(frame:GetWidth())\r\n          local x = tonumber(frame:GetWidth())\r\n          local t = tostring(type(frame))\r\n          if ((t == \"table\") and (x > 429.9) and (x < 579.9)) then\r\n               for k, v in pairs(frame) do\r\n--                    print(tostring(k))\r\n                    if tostring(k) == \"TitleText\" then\r\n--                         print(n..\":\"..w..\":\"..t)\r\n                         if tostring(type(v)) == \"table\" then\r\n                              local v0 =  tostring(type(v[0]))\r\n--                              print(v0)\r\n                              if v0 == \"userdata\" then\r\n                                   GCQMissionCompletedDisplay = frame\r\n                                   break\r\n                              end\r\n                         end\r\n                    end\r\n               end\r\n          end\r\n          if GCQMissionCompletedDisplay ~= nil then\r\n               break\r\n          end\r\n      end\r\n      frame = EnumerateFrames(frame)\r\nend\r\n\r\nif GCQMissionCompletedDisplay ~= nil then\r\n--\tprint(\"found it....\")\r\n\tframe:Hide()\r\nend"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Snippet Dump"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Missions"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "List<int> thisList = new List<int> (new int[] {231217, 231964, 236176, 236177, 236185, 236186, 236188, 236187, 236191, 233248, 233249, 233250, 233251});\r\nint maxDistance = 35; //20 yards max distance to search\r\nint minDistance = 5; //5 yards max distance to search\r\nint maxTriesMoveTo = 99; //10 yards max distance to search\r\nint i = 1;\r\nGameObject x = null;\r\nfloat z = 9999f;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tint e = o.EntryID;\r\n\tfloat d = o.Distance;\r\n\t//PrintInfo(\"EntryID=\"+e);\r\n\tif (thisList.Contains(e))\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tPrintInfo(\"Found: \"+x.Name);\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.EntryID, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tMoveTo(x.Position);\r\n\t\t\tPrintInfo(\"Moving closer to {1}... distance of {0} yards.\", \"\" + (int)z, x.Name);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to use Finalize Plot\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 15000;\r\n\t\t} else { PrintInfo(\"Not close enough to Finialize Plot? Moving on...\"); }\r\n\t}\r\n}\r\n"
                    }
                  ],
                  "GroupName": "Finalize Plot"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "string seeGossip = \"\";\r\nstring workers = \" Yulia Samras, Kaya Solasen, Trader Joseph, Dalana Clarke, Kaylie Macdonald, Olly Nimkip, Marianne Levine, Garm, Kurt Broadoak, Fayla Fairfeather, Magrish, Kinja, Elrondir Surrion, Yanney, Gorsol, Nali Softsoil, Y'rogg, Garra, Turga, Timothy Leens,\";\r\nint maxDistance = 40;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint maxTriesSubmit = 36;\r\nint i = 1;\r\nUnitObject x = null;\r\ndouble z = 1000.0;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tstring s = (string)\"\" + u.Name;\r\n\tdouble d = (double)0.0 + u.Distance;\r\n\tif (workers.IndexOf(\" \" + s + \",\") >= 0) { if (d < z) { x = u; z = d; }\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to gossip...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 3000;\r\n\t\t\tseeGossip = ExecuteLua<string>(\"return tostring(GarrisonCapacitiveDisplayFrame['StartWorkOrderButton']:IsVisible())\");\r\n\t\t\tif ((x.Name.Equals(\"Timothy Leens\")) || (x.Name.Equals(\"Olly Nimkip\")) || (x.Name.Equals(\"Nali Softsoil\")) || (x.Name.Equals(\"Gorsol\")))\r\n\t\t\t{ seeGossip = \"true\"; }\r\n\t\t\tint t = 0;\r\n\t\t\tstring canDo = \"true\";\r\n\t\t\twhile ((canDo == \"true\") && (t < maxTriesSubmit)) \r\n\t\t\t{\r\n\t\t\t\tt++;\r\n\t\t\t\tcanDo = ExecuteLua<string>(\"return tostring(GarrisonCapacitiveDisplayFrame['StartWorkOrderButton']:IsEnabled())\");\r\n\t\t\t\tif (object.ReferenceEquals(null, canDo)) { canDo = \"\"; }\r\n\t\t\t\tif (canDo == \"true\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPrintInfo(\"attempting to submit work order {0}\", \"\" + t);\r\n\t\t\t\t\tExecuteLua<string>(\"GarrisonCapacitiveDisplayFrame['CreateAllWorkOrdersButton']:Click()\"); \r\n\t\t\t\t\tyield return 1000;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i*2; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\nif (object.ReferenceEquals(null, seeGossip)) { seeGossip = \"false\"; }\r\nG[\"seeGossipEquals\"] = seeGossip;\r\n\r\nPrintInfo(\"seeGossip = \" + seeGossip);\r\nPrintInfo(\"xx = \" + G[\"seeGossipEquals\"]);\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Submit Work Order"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CallBlock",
                          "Target": "Submit Work Order"
                        },
                        {
                          "$type": "If",
                          "IsExtendedInEditor": false,
                          "ActionsFalse": {
                            "Children": [],
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "Comment",
                                "Text": "Submitting Work Orders (sometimes the gossip dialog does not open so do it twice)",
                                "Color": "255, 0, 128"
                              },
                              {
                                "$type": "CSharpAction",
                                "CSharpCode": "//sometimes the start work order dialog doesn't show up; interacting with another npc then try again fixes it.\r\nstring seeGossip = \"\";\r\nstring workers = \" Grun'lek, Blixthraz Blastcharge, Rachelle Black, Kristen Stoneforge, Chritopher Macdonald, Auria Irondreamer, Costan Highwall, Maaria, Tradesman Portanuus, Ayada the White, Eric Broadoak, Anders Longstitch, Tai'tasi, Dorogarr, Warra the Weaver, Orgek Ironhand, Tarnon, Yukla Greenshadow, Urgra,\";\r\nint maxDistance = 40;\r\nint minDistance = 2;\r\nint i = 1;\r\nUnitObject x = null;\r\ndouble z = 1000.0;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tstring s = (string)\"\" + u.Name;\r\n\tdouble d = (double)0.0 + u.Distance;\r\n\tif (workers.IndexOf(\" \" + s + \",\") >= 0) { if (d < z) { x = u; z = d; }\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < 99) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to gossip...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 3000;\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i*2; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                              },
                              {
                                "$type": "Wait",
                                "Delay": 1.0
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Submit Work Order"
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "CSharpCondition",
                            "CSharpCode": "bool result = false;\r\nif (object.ReferenceEquals(null, G[\"seeGossipEquals\"])) { result = false; PrintInfo(\"woah\"); } else { result = G[\"seeGossipEquals\"].Equals(\"true\"); }\r\nreturn result;"
                          },
                          "IsNot": true
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Submit Work Orders"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Submits"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int maxDistance = 20; //20 yards max distance to search\r\nint minDistance = 5; //Interact Distance Minimum\r\nint i = 1;\r\nGameObject x = null;\r\ndouble z = 1000.0;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tstring s = (string)\"\" + o.Name;\r\n\tdouble d = (double)0.0 + o.Distance;\r\n\tif ((s == \"Mine Cart\") || (s == \"Blackrock Deposit\") || (s == \"True Iron Deposit\") || (s == \"Rich Blackrock Deposit\") || (s == \"Rich True Iron Deposit\"))\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\t//ExecuteLua<string>(\"print('\" + x.GameObjectType + \"')\");\r\n\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < 39) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to loot... looting once...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 6000;\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Collect Ore"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "int maxDistance = 20; //20 yards max distance to search\r\nint minDistance = 5; //Interact Distance Minimum\r\nint i = 1;\r\nGameObject x = null;\r\ndouble z = 1000.0;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tstring s = (string)\"\" + o.Name;\r\n\tint e = o.EntryID;\r\n\tdouble d = (double)0.0 + o.Distance;\r\n\tif ((s == \"Talador Orchid\") || (s == \"Nagrand Arrowbloom\") || (s == \"Gorgrond Flytrap\") || (s == \"Frostweed\") || (s == \"Fireweed\") || (s == \"Starflower\") || (e == 232541) || (e == 232542) || (e == 232543) || (e == 232544) || (e == 232545))\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\t//ExecuteLua<string>(\"print('\" + x.GameObjectType + \"')\");\r\n\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < 39) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to loot... looting once...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 6000;\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Collect Herb"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "Text": "Collecting Shipment",
                          "Color": "255, 0, 128"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "GameObject x = null;\r\nfloat z = 9999f;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tstring s = (string)\"\" + o.GameObjectType;\r\n\tfloat d = o.Distance;\r\n\tif (s == \"GarrisonShipment\")\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "CTM Star Pathfinding Algorithm"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 25;\r\nint minDistance = 6;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nGameObject x = null;\r\nfloat z = 9999f;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tstring s = (string)\"\" + o.GameObjectType;\r\n\tfloat d = o.Distance;\r\n\tif (s == \"GarrisonShipment\")\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to loot... looting once...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 3000;\r\n\t\t\tPrintInfo(\"Close enough to loot... looting twice...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 3000;\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Search for the Closest Shipment; Double tap it; And move back to where I was..."
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Collect Shipment"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "If",
                          "IsExtendedInEditor": false,
                          "ActionsFalse": {
                            "Children": [
                              {
                                "$type": "Comment",
                                "Text": "There is no Garrison Cache object detected (out of range? or already looted?)",
                                "Color": "Fuchsia"
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "If",
                                "IsExtendedInEditor": false,
                                "ActionsFalse": {
                                  "Children": [
                                    {
                                      "$type": "Comment",
                                      "Text": "Garrison Cache has already been collected..................................................",
                                      "Color": "255, 0, 128"
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Else",
                                  "GroupName": ""
                                },
                                "ActionsTrue": {
                                  "Children": [
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Move To Garrison Cache"
                                    },
                                    {
                                      "$type": "Comment",
                                      "Text": "Collecting Garrison Cache",
                                      "Color": "255, 0, 128"
                                    },
                                    {
                                      "$type": "CSharpAction",
                                      "CSharpCode": "int maxDistance = 20;\r\nint minDistance = 4;\r\nint maxTriesMoveTo = 19;\r\nint i = 1;\r\nGameObject x = null;\r\ndouble z = 1000.0;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tstring s = (string)\"\" + o.Name;\r\n\tint e = o.EntryID;\r\n\tdouble d = (double)0.0 + o.Distance;\r\n\tif ((s.IndexOf(\"Garrison Cache\") >= 0) || (e == 236916) || (e == 237722) || (e == 237723) || (e == 237724) || (e == 237191) || (e == 237720))\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('\" + x.GameObjectType + \"')\");\r\n\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tG[\"GarrisonCacheAlreadyCollected\"] = true;\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to loot... looting once...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 3000;\r\n\t\t\tPrintInfo(\"Close enough to loot... looting twice...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 3000;\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n\r\n\r\n"
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Then",
                                  "GroupName": ""
                                },
                                "Condition": {
                                  "$type": "CSharpCondition",
                                  "CSharpCode": "//if Garrison Cache is already collected...................................................\r\nbool result = false;\r\ntry { result = (bool)G[\"GarrisonCacheAlreadyCollected\"]; } catch { result = false; }\r\nreturn result\r\n"
                                },
                                "IsNot": true
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "CSharpCondition",
                            "CSharpCode": "//if Garrison Cache Gameobject found (may not be if looted recently).......................\r\nbool result = false;\r\nGameObject x = null;\r\nfloat z = 9999f;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tint e = o.EntryID;\r\n\tfloat d = o.Distance;\r\n\tif ((e == 236916) || (e == 237722) || (e == 237723) || (e == 237724) || (e == 237191) || (e == 237720))\r\n\t{\r\n\t\tif (d < z) { x = o; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tresult = true;\t\r\n}\r\nreturn result;"
                          }
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Collect Garrison Cache"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Collects"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "IsInfo": false,
                          "Text": "Loading Screen is going to need some time here... (more accurate/efficient way to test/wait time?)"
                        },
                        {
                          "$type": "Wait",
                          "Delay": 12.0,
                          "DelayMax": 12.0
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Wait While Loading Screen (World)"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "IsInfo": false,
                          "Text": "Loading Screen is going to need some time here... (more accurate/efficient way to test/wait time?)"
                        },
                        {
                          "$type": "Wait",
                          "Delay": 5.0,
                          "DelayMax": 5.0
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Wait While Loading Screen (Garrison)"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "if (Me.RemainingCastTime > 0)\r\n{\r\n\tPrintInfo(\"Wait While Channeling... Casting SpellId=\" + Me.CastingSpellID.ToString() + \"; RemainingCastTime=\" + Me.RemainingCastTime.ToString());\r\n\tyield return Me.RemainingCastTime;\r\n}\r\nyield return 200;\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Wait While Channeling"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Wait Timers"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "IsInfo": false,
                      "Text": "if the Callblock starts with \"Use ...\" the function will be found here"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CallBlock",
                                  "Target": "Test Bag Contains Item Garrison Hearthstone"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "bool result = false;\r\ntry { result = (bool)G[\"BagContainsItemGarrisonHearthstone\"]; } catch { result = false; }\r\n\r\n//PrintInfo(\"Reading G[\\\"BagContainsItemGarrisonHearthstone\\\"] = \" + result.ToString() + \";\");\r\n\r\nif (result)\r\n{\r\n\tstring cultureItemName = ExecuteLua<string>(\"return GetItemInfo(110560)\");\r\n\tExecuteLua<string>(\"UseItemByName(\\\"\"+ cultureItemName + \"\\\", \\\"\\\") \");\r\n}\r\nelse\r\n{\r\n\tPrintInfo(\"G[\\\"BagContainsItemGarrisonHearthstone\\\"] Indicates you do not have a Garrison Hearthstone in your bags.\");\r\n}"
                                },
                                {
                                  "$type": "Comment",
                                  "IsInfo": false,
                                  "Text": "Going to need some time to channel here..."
                                },
                                {
                                  "$type": "CallBlock",
                                  "Target": "Wait While Channeling"
                                },
                                {
                                  "$type": "CallBlock",
                                  "Target": "Wait While Loading Screen (Garrison)"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "CSharpCode": "",
                              "GroupName": "Use Bag Item Garrison Hearthstone"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Use Bag Item"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Inventory"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "LocalPlayer me = null;\r\ntry { me = Me; } catch { me = null; }\r\nif (!(object.ReferenceEquals(null, me)))\r\n{\r\n\tfloat od = 99999f;\r\n\tVector3 lastPosition = new Vector3(0f,0f,0f);\r\n\twhile (true)\r\n\t{\r\n\t\tif (Vector3.Distance(me.Position, lastPosition) > 3f)\r\n\t\t{\r\n\t\t\tstring s = \"\";\r\n\t\t\ttry {s = me.Position.ToString(); } catch { s = \"\"; }\r\n\t\t\tif (!(s.Equals(\"\"))) \r\n\t\t\t{\r\n\t\t\t\ts = \"new Vector3\"+s.Replace(\"{\",\"(\").Replace(\"}\",\"f)\").Replace(\" \",\"f, \")+\",\";\r\n\t\t\t\tlastPosition = me.Position;\r\n\t\t\t\tPrintInfo(s); \r\n\t\t\t}\r\n\t\t}\r\n\t\tyield return 100;\r\n\t}\r\n\t\r\n}\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Print Pathing Vectors"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Use"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "IsInfo": false,
                      "Text": "if the Callblock starts with \"Test ...\" the function will be found here"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "If",
                          "ActionsFalse": {
                            "Children": [],
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "If",
                                "ActionsFalse": {
                                  "Children": [],
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Else",
                                  "GroupName": ""
                                },
                                "ActionsTrue": {
                                  "Children": [
                                    {
                                      "$type": "Comment",
                                      "Text": "Character is not level 100 and can use some resources, going to submit work orders."
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Move To Trading Post"
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Trading Post Collect Shipment"
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Move To Trading Post Worker"
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Submit Work Orders"
                                    }
                                  ],
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Then",
                                  "GroupName": ""
                                },
                                "Condition": {
                                  "$type": "CSharpCondition",
                                  "CSharpCode": "//level 99 and under so get some resources to build with............................\r\nbool result = false;\r\nint curRes = ExecuteLua<int>(\"_,amount,_,_,_,_,_ = GetCurrencyInfo(824) return amount\");\r\nif (curRes < 8000) { result = true; }\r\nreturn result;"
                                }
                              }
                            ],
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "PlayerCondition",
                            "Property": "IsLevel",
                            "Parameter": "90-99"
                          }
                        }
                      ],
                      "GroupName": "Test For Level Under 100 Needs To Submit Trading Post Work Orders?"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "If",
                          "IsExtendedInEditor": false,
                          "ActionsFalse": {
                            "Children": [],
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "Comment",
                                "Text": "Mining And Herbing Only Section"
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "The Mine Do"
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Herb Garden Do"
                              },
                              {
                                "$type": "EndScript"
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "CSharpCondition",
                            "CSharpCode": "bool result = false;\r\ntry { result = (bool)G[\"GarrisonHerbingAndMiningOnly\"]; } catch { result = false; }\r\nreturn result;"
                          }
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Test User Setting For Herbing Or Mining Only"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [],
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Herb Garden Worker"
                                        },
                                        {
                                          "$type": "Comment",
                                          "Text": "Quest: Clearing The Garden"
                                        },
                                        {
                                          "$type": "ActionSequence",
                                          "Children": [
                                            {
                                              "$type": "Comment",
                                              "Text": "Accept Quest: Clearing The Garden"
                                            },
                                            {
                                              "$type": "If",
                                              "IsExtendedInEditor": false,
                                              "ActionsFalse": {
                                                "Children": [
                                                  {
                                                    "$type": "AcceptQuestCommand",
                                                    "QuestIds": [
                                                      34193
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Else",
                                                "GroupName": ""
                                              },
                                              "ActionsTrue": {
                                                "Children": [
                                                  {
                                                    "$type": "AcceptQuestCommand",
                                                    "QuestIds": [
                                                      36404
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Then",
                                                "GroupName": ""
                                              },
                                              "Condition": {
                                                "$type": "PlayerCondition",
                                                "Property": "IsAlliance"
                                              }
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "GroupName": "Accept Quest: Clearing The Garden"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Herb Garden"
                                        },
                                        {
                                          "$type": "ActionSequence",
                                          "Children": [
                                            {
                                              "$type": "Comment",
                                              "Text": "Do Quest: Clearing The Garden"
                                            },
                                            {
                                              "$type": "If",
                                              "IsExtendedInEditor": false,
                                              "ActionsFalse": {
                                                "Children": [
                                                  {
                                                    "$type": "DoQuestsCommand",
                                                    "QuestIds": [
                                                      34193
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Else",
                                                "GroupName": ""
                                              },
                                              "ActionsTrue": {
                                                "Children": [
                                                  {
                                                    "$type": "DoQuestsCommand",
                                                    "QuestIds": [
                                                      36404
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Then",
                                                "GroupName": ""
                                              },
                                              "Condition": {
                                                "$type": "PlayerCondition",
                                                "Property": "IsAlliance"
                                              }
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "GroupName": "Do Quest: Clearing The Garden"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Herb Garden Worker"
                                        },
                                        {
                                          "$type": "ActionSequence",
                                          "Children": [
                                            {
                                              "$type": "Comment",
                                              "Text": "TurnIn Quest: Clearing The Garden"
                                            },
                                            {
                                              "$type": "If",
                                              "IsExtendedInEditor": false,
                                              "ActionsFalse": {
                                                "Children": [
                                                  {
                                                    "$type": "TurnInQuestsCommand",
                                                    "QuestIds": [
                                                      34193
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Else",
                                                "GroupName": ""
                                              },
                                              "ActionsTrue": {
                                                "Children": [
                                                  {
                                                    "$type": "TurnInQuestsCommand",
                                                    "QuestIds": [
                                                      36404
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Then",
                                                "GroupName": ""
                                              },
                                              "Condition": {
                                                "$type": "PlayerCondition",
                                                "Property": "IsAlliance"
                                              }
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "GroupName": "TurnIn Quest: Clearing The Garden"
                                        },
                                        {
                                          "$type": "Comment",
                                          "IsInfo": false,
                                          "Text": "Add the Herb Garden vectors"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Pathing Define Vectors"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Herb Garden Do"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "PlayerCondition",
                                      "Property": "IsLevel",
                                      "Parameter": "96-100"
                                    }
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//if the character has the Herb Garden Quest Prerequisites.......................................................\r\nbool result = false;\r\nif ((IsQuestCompleted(36404)) || (IsQuestCompleted(34193))) { result = true; }\r\nreturn result;"
                              },
                              "IsNot": true
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Herb Garden Prerequisite Quest (Clearing The Garden)"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [],
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Mine Worker"
                                        },
                                        {
                                          "$type": "Comment",
                                          "Text": "Quest: Things Are Not Goren Our Way"
                                        },
                                        {
                                          "$type": "ActionSequence",
                                          "Children": [
                                            {
                                              "$type": "Comment",
                                              "Text": "Accept Quest: Things Are Not Goren Our Way"
                                            },
                                            {
                                              "$type": "If",
                                              "IsExtendedInEditor": false,
                                              "ActionsFalse": {
                                                "Children": [
                                                  {
                                                    "$type": "AcceptQuestCommand",
                                                    "QuestIds": [
                                                      35154
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Else",
                                                "GroupName": ""
                                              },
                                              "ActionsTrue": {
                                                "Children": [
                                                  {
                                                    "$type": "AcceptQuestCommand",
                                                    "QuestIds": [
                                                      34192
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Then",
                                                "GroupName": ""
                                              },
                                              "Condition": {
                                                "$type": "PlayerCondition",
                                                "Property": "IsAlliance"
                                              }
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "CSharpCode": "",
                                          "GroupName": "Accept Quest: Things Are Not Goren Our Way"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Mine (To Boss From Entrance)"
                                        },
                                        {
                                          "$type": "ActionSequence",
                                          "Children": [
                                            {
                                              "$type": "Comment",
                                              "Text": "Do Quest: Things Are Not Goren Our Way"
                                            },
                                            {
                                              "$type": "If",
                                              "IsExtendedInEditor": false,
                                              "ActionsFalse": {
                                                "Children": [
                                                  {
                                                    "$type": "DoQuestsCommand",
                                                    "QuestIds": [
                                                      35154
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Else",
                                                "GroupName": ""
                                              },
                                              "ActionsTrue": {
                                                "Children": [
                                                  {
                                                    "$type": "DoQuestsCommand",
                                                    "QuestIds": [
                                                      34192
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Then",
                                                "GroupName": ""
                                              },
                                              "Condition": {
                                                "$type": "PlayerCondition",
                                                "Property": "IsAlliance"
                                              }
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "GroupName": "Do Quest: Things Are Not Goren Our Way"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Mine (To Entrance From Boss)"
                                        },
                                        {
                                          "$type": "ActionSequence",
                                          "Children": [
                                            {
                                              "$type": "Comment",
                                              "Text": "TurnIn Quest: Things Are Not Goren Our Way"
                                            },
                                            {
                                              "$type": "If",
                                              "IsExtendedInEditor": false,
                                              "ActionsFalse": {
                                                "Children": [
                                                  {
                                                    "$type": "TurnInQuestsCommand",
                                                    "QuestIds": [
                                                      35154
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Else",
                                                "GroupName": ""
                                              },
                                              "ActionsTrue": {
                                                "Children": [
                                                  {
                                                    "$type": "TurnInQuestsCommand",
                                                    "QuestIds": [
                                                      34192
                                                    ]
                                                  }
                                                ],
                                                "IsExtendedInEditor": false,
                                                "IsSpecialElement": true,
                                                "SpecialElementName": "Then",
                                                "GroupName": ""
                                              },
                                              "Condition": {
                                                "$type": "PlayerCondition",
                                                "Property": "IsAlliance"
                                              }
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "GroupName": "TurnIn Quest: Things Are Not Goren Our Way"
                                        },
                                        {
                                          "$type": "Comment",
                                          "IsInfo": false,
                                          "Text": "Add the mine vectors"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Pathing Define Vectors"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "The Mine Do"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "PlayerCondition",
                                      "Property": "IsLevel",
                                      "Parameter": "92-100"
                                    }
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//if chararacter has the Mine Quest Prerequisites..................................................................\r\nbool result = false;\r\nif ((IsQuestCompleted(34192)) || (IsQuestCompleted(35154))) { result = true; }\r\nreturn result;"
                              },
                              "IsNot": true
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Mine Prerequisite Quest (Things are Not Goren Our Way)"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Tests For Prerequisite Quests To Enable The Mine Or Herb Garden"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "Text": "Checking Currency (Garrison Resources)"
                        },
                        {
                          "$type": "If",
                          "IsExtendedInEditor": false,
                          "ActionsFalse": {
                            "Children": [],
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "Comment",
                                "Text": "Too many Garrison Resources, exchanging some for Gold."
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Move To Trading Post"
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Move To Trading Post Trader"
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Exchange Resoucers for Gold via Smuggeld Gold Sacks"
                              },
                              {
                                "$type": "If",
                                "IsExtendedInEditor": false,
                                "ActionsFalse": {
                                  "Children": [
                                    {
                                      "$type": "Comment",
                                      "Text": "No Trading Post Orders are Ready for Pickup"
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Else",
                                  "GroupName": ""
                                },
                                "ActionsTrue": {
                                  "Children": [
                                    {
                                      "$type": "Comment",
                                      "Text": "Picking up Ready Trading Post Orders"
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Move To Trading Post Shipment"
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Collect Trading Post Shipment"
                                    },
                                    {
                                      "$type": "CallBlock",
                                      "Target": "Move Away From Trading Post Shipment"
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "IsSpecialElement": true,
                                  "SpecialElementName": "Then",
                                  "GroupName": ""
                                },
                                "Condition": {
                                  "$type": "LuaCondition",
                                  "LuaCode": "--Test to see if any Trading Post Orders are Ready for Pickup\r\nlocal orders = 'Trading Post'\r\n--orders = 'Lunarfall Excavation'\r\nresult = false for k,v in pairs(C_Garrison.GetBuildings()) do local name, texture, shipmentCapacity, shipmentsReady, shipmentsTotal, creationTime, duration, timeleftString, itemName, itemIcon, itemQuality, itemID = C_Garrison.GetLandingPageShipmentInfo(v.buildingID) if tostring( shipmentsTotal) == 'nil' then  shipmentsTotal = 0 end if tostring( shipmentsReady) == 'nil' then shipmentsReady = 0 end if tostring( shipmentsCapacity) == 'nil' then  shipmentsCapacity = 0 end if tostring(name) ~= 'nil' then print(name) shipmentsReady = tonumber(shipmentsReady) shipmentsCapacity = tonumber(shipmentsCapacity) shipmentsTotal = tonumber(shipmentsTotal) shipmentsPending = shipmentsTotal-shipmentsReady if ((orders == name) and (shipmentsReady > 0)) then result = true end end end print(result) return result"
                                }
                              },
                              {
                                "$type": "Comment",
                                "Text": "No Trade Post Orders should be submitted."
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Collect Garrison Cache"
                              },
                              {
                                "$type": "CallBlock",
                                "Target": "Move To Command Table"
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "CSharpCondition",
                            "CSharpCode": "bool result = false;\r\nint curRes = ExecuteLua<int>(\"_,amount,_,_,_,_,_ = GetCurrencyInfo(824) return amount\");\r\nif (Me.Level < 100)\r\n{\r\n\tif (curRes > 9100) { result = true; }\t\r\n\tPrintInfo(\"Character is under level 100, when over 9100 Garrison Resources exchange for gold.\");\r\n}\r\nelse\r\n{\r\n\tint maxResDefault = 7000;\r\n\tint maxRes = maxResDefault;\r\n\ttry { maxRes = (int)G[\"MaximumGarrisonResourcesBeforeLootingCacheOrCompletingMissions\"]; } catch { maxRes = maxResDefault; }\r\n\tPrintInfo(\"Character is level 100, when over \"+maxRes+\" Garrison Resources exchange for gold.\");\r\n\tif (curRes > maxRes) { result = true; }\r\n}\r\nreturn result;\r\n\r\n"
                          }
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Test Currency (Garrison Resources)"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Test Inside Mine"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Mine Exit"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "The Mine Do"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "CSharpCondition",
                                      "CSharpCode": "//character is inside the Mine and needs to resume.....................................................\r\nbool result = false;\r\ntry { result = (bool)G[\"GarrisonMeInMineAndResumeNeeded\"]; } catch { result = false; }\r\nreturn result;\r\n"
                                    }
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//character is inside the Mine.........................................................................\r\nbool result = false;\r\ntry { result = (bool)G[\"GarrisonMeInMine\"]; } catch { result = false; }\r\nreturn result;\r\n"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Test For Moving Out Of Mining SubZone"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "//Test Me.Position for inside of the Mine..............................................................................................\r\nbool result = false;\r\nint ZoneId = 0;\r\nG[\"GarrisonMeInMineAndResumeNeeded\"] = false;\r\ntry { ZoneId = Me.ZoneId; } catch { ZoneId = 0; }\r\nif ((ZoneId == 7004)  || (ZoneId == 7078))\r\n{\r\n\tstring mmzt = ExecuteLua<string>(\"return GetMinimapZoneText()\");\r\n\tif (object.ReferenceEquals(null, mmzt)) { mmzt = \"\"; }\r\n\t//PrintInfo(\"MinimapZoneText=\"+mmzt+\"; IndexOf(\\\"\"+Me.Name+\"\\\") = \"+mmzt.IndexOf(Me.Name));\r\n\tif (mmzt.IndexOf(Me.Name) < 0) \r\n\t{\r\n\t\tint jumpstart = 0;\r\n\t\tVector3[] v = new Vector3[] { };\r\n\t\tstring thisGName = \"GarrisonMineChainVectors\";\r\n\t\t//PrintInfo(\"Loading G[\\\"\" + thisGName + \"\\\"]\");\r\n\t\ttry { v = (Vector3[])G[thisGName]; }\r\n\t\tcatch { v = new Vector3[] { }; }\r\n\t\tif (v.Length > 0)\r\n\t\t{\r\n\t\t\t//Print(\"Vectors to visit = \" + v.Length);\r\n\t\t\tfor (int i = 0; i < v.Length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (Me.Distance2DTo(v[i]) < 6) { jumpstart = i; break; }\r\n\t\t\t}\r\n\t\t\tif (jumpstart > (v.Length-9)) { jumpstart = 0; }\r\n\t\t}\r\n\t\tif (jumpstart > 0) { result = true; }\r\n\t\tif (result)\r\n\t\t{\r\n\t\t\tGameObject[] w = new GameObject[v.Length];\r\n\t\t\tforeach (GameObject o in GameObjects)\r\n\t\t\t{\r\n\t\t\t\tint e = o.EntryID;\r\n\t\t\t\tif ((e == 232541) || (e == 232542) || (e == 232543) || (e == 232544) || (e == 232545))\r\n\t\t\t\t{\r\n\t\t\t\t\tfloat z = 9999f;\r\n\t\t\t\t\tGameObject x = null;\r\n\t\t\t\t\tint y = -1;\r\n\t\t\t\t\tfor (int k = 0; k < v.Length; k++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfloat d = Vector3.Distance(o.Position, v[k]);\r\n\t\t\t\t\t\tif (z > d) { x = o; z = d; y = k; if (d <= 6) { break; } }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((!object.ReferenceEquals(null, x)) && (y >= 0)) { w[y] = x; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tint nodesBeforeMe = 0;\r\n\t\t\tfor (int h = 0; h < jumpstart; h++)\r\n\t\t\t{\r\n\t\t\t\tif (!object.ReferenceEquals(null, w[h])) { nodesBeforeMe++; }\r\n\t\t\t}\r\n\t\t\tint nodesAfterMe = 0;\r\n\t\t\tfor (int h = jumpstart; h < v.Length; h++)\r\n\t\t\t{\r\n\t\t\t\tif (!object.ReferenceEquals(null, w[h])) { nodesAfterMe++; }\r\n\t\t\t}\r\n\t\t\t//PrintInfo(\"nodesBeforeMe=\"+nodesBeforeMe+\"; nodesAfterMe=\"+nodesAfterMe);\r\n\t\t\tif ((nodesBeforeMe < 3) && (nodesAfterMe > 2))\r\n\t\t\t{\r\n\t\t\t\tG[\"GarrisonMeInMineAndResumeNeeded\"] = true;\r\n\t\t\t}\r\n\t\t\tif ((nodesBeforeMe+nodesAfterMe) < 4)\r\n\t\t\t{\r\n\t\t\t\tG[\"GarrisonTheMineIsDone\"] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nG[\"GarrisonMeInMine\"] = result;\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Test Inside Mine"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "In Garrison... This is Good! (We have Privacy of that Sort!)"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Not in Garrison... Exiting Script"
                                  },
                                  {
                                    "$type": "EndScript"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "bool result = false;\r\nint ZoneId = 0;\r\ntry { ZoneId = Me.ZoneId; } catch { ZoneId = 0; }\r\nresult = ((ZoneId == 7004)  || (ZoneId == 7078));\r\nreturn result;"
                              },
                              "IsNot": true
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Test Zone"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 25;\r\nbool isNeeded = true;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif ((e == 84224) || (e == 84698) || (e == 79740))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\n\r\nif (!object.ReferenceEquals(x, null)) \r\n{ \r\n\tPrintInfo(\"Setting G[\\\"GarrisonHomePositionYards\\\"] = \" + z.ToString() + \";\");\r\n\tG[\"GarrisonHomePositionYards\"] = z; \r\n} \r\nelse \r\n{ \r\n//\tPrintInfo(\"Setting G[\\\"GarrisonHomePositionYards\\\"] = 9999;\");\r\n\tG[\"GarrisonHomePositionYards\"] = 9999f; \r\n}\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Test For Garrison Home Position Yards"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Test Zone"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Test For Garrison Home Position Yards"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "//Test to see if Me.Position is withing 25 yards of the Command Table in the Garrison\r\n//must use \"Callblock Test Yards From Command Table\" to set G[\"YardsFromCommandTable\"]\r\nfloat z = 9999f;\r\ntry { z = (float)G[\"GarrisonHomePositionYards\"]; } catch { z = 9999f; }\r\n\r\n//PrintInfo(\"Reading G[\\\"GarrisonHomePositionYards\\\"] = \" + z.ToString() + \";\");\r\n\r\nif (z < 25) { G[\"GarrisonHomePosition\"] = true; } else { G[\"GarrisonHomePosition\"] = false; }\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Test For Garrison Home Position"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Test For Garrison Home Position And Attempt Hearth If Needed"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Test For Garrison Home Position"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Use Bag Item Garrison Hearthstone"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Command Table"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Test For Garrison Home Position"
                                        },
                                        {
                                          "$type": "If",
                                          "IsExtendedInEditor": false,
                                          "ActionsFalse": {
                                            "Children": [],
                                            "IsSpecialElement": true,
                                            "SpecialElementName": "Else",
                                            "GroupName": ""
                                          },
                                          "ActionsTrue": {
                                            "Children": [
                                              {
                                                "$type": "CallBlock",
                                                "Target": "Use Bag Item Garrison Hearthstone"
                                              }
                                            ],
                                            "IsExtendedInEditor": false,
                                            "IsSpecialElement": true,
                                            "SpecialElementName": "Then",
                                            "GroupName": ""
                                          },
                                          "Condition": {
                                            "$type": "CSharpCondition",
                                            "CSharpCode": "bool result = false;\r\ntry { result = (bool)G[\"GarrisonHomePosition\"]; } catch { result = false; }\r\n\r\n//PrintInfo(\"Reading G[\\\"GarrisonHomePosition\\\"] = \" + result.ToString() + \";\");\r\n\r\nreturn result;\r\n"
                                          },
                                          "IsNot": true
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "CSharpCondition",
                                      "CSharpCode": "bool result = false;\r\nint ZoneId = 0;\r\ntry { ZoneId = Me.ZoneId; } catch { ZoneId = 0; }\r\nresult = ((ZoneId == 7004)  || (ZoneId == 7078));\r\nreturn result;"
                                    }
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "bool result = false;\r\ntry { result = (bool)G[\"GarrisonHomePosition\"]; } catch { result = false; }\r\n\r\n//PrintInfo(\"Reading G[\\\"GarrisonHomePosition\\\"] = \" + result.ToString() + \";\");\r\n\r\nreturn result;\r\n\r\n"
                              },
                              "IsNot": true
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Test For Garrison Home Position"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "This character does not appear to be at the starting point (Garrison Command Table).  And could not Hearth there... exiting script."
                                  },
                                  {
                                    "$type": "EndScript"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "bool result = false;\r\ntry { result = (bool)G[\"GarrisonHomePosition\"]; } catch { result = false; }\r\n\r\n//PrintInfo(\"Reading G[\\\"GarrisonHomePosition\\\"] = \" + result.ToString() + \";\");\r\n\r\nreturn result;\r\n"
                              },
                              "IsNot": true
                            },
                            {
                              "$type": "Comment",
                              "Text": "Position is Garrison Hearth Home Position! Great+++++"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Test For Garrison Home Position And Attempt Hearth If Needed"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Tests For (Me.Position)"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "int itemId = 87216;\r\nbool result = false;\r\nstring lua = \"local itemId = \" + itemId.ToString() + \" local result = false for b=0,4 do for s=1,GetContainerNumSlots(b) do local id=GetContainerItemID(b,s) if id == nil then id = 0 end if (id ==  itemId) then result = true break end end end return result\";\r\nresult = ExecuteLua<bool>(lua);\r\n\r\n//PrintInfo(result.ToString());\r\n\r\nG[\"BagContainsItemThermalAnvil\"] = result;\r\n"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Test Bag Contains Item Thermal Anvil"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "int itemId = 110560;\r\nbool result = false;\r\nstring lua = \"local itemId = \" + itemId.ToString() + \" local result = false for b=0,4 do for s=1,GetContainerNumSlots(b) do local id=GetContainerItemID(b,s) if id == nil then id = 0 end if (id ==  itemId) then result = true break end end end return result\";\r\nresult = ExecuteLua<bool>(lua);\r\n\r\n//PrintInfo(result.ToString());\r\n\r\nG[\"BagContainsItemGarrisonHearthstone\"] = result;\r\n"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Test Bag Contains Item Garrison Hearthstone"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Bag Contains Item"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Tests For Inventory"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "IsInfo": false,
                          "Text": "Test to determine if this character has already done this stuff \"this wow day\"."
                        },
                        {
                          "$type": "If",
                          "IsExtendedInEditor": false,
                          "ActionsFalse": {
                            "Children": [],
                            "IsSpecialElement": true,
                            "SpecialElementName": "Else",
                            "GroupName": ""
                          },
                          "ActionsTrue": {
                            "Children": [
                              {
                                "$type": "Comment",
                                "IsInfo": false,
                                "Text": "Tthis character has already done the stuff above\"this wow day\", just stay at the Command Table for missions."
                              },
                              {
                                "$type": "Comment",
                                "Text": "This Character is only running missions (daily stuff has already been done \"this wow day\").",
                                "Color": "255, 128, 255"
                              },
                              {
                                "$type": "Wait",
                                "Delay": 1.0,
                                "DelayMax": 1.0
                              },
                              {
                                "$type": "EndScript"
                              }
                            ],
                            "IsExtendedInEditor": false,
                            "IsSpecialElement": true,
                            "SpecialElementName": "Then",
                            "GroupName": ""
                          },
                          "Condition": {
                            "$type": "CSharpCondition",
                            "CSharpCode": "bool result = false;\r\nbool missionsOnlyMode = false;\r\ntry { missionsOnlyMode = (bool)G[\"MissionsOnlyMode\"]; } catch { missionsOnlyMode = false; }\r\nif (missionsOnlyMode)\r\n{\r\n\tPrintInfo(\"Running in MissionsOnly Mode, skipping the rest...\");\r\n\tresult = true;\r\n}\r\nelse\r\n{\r\n\tbool hasGemBoutique = true;\r\n\ttry { Vector3 v = (Vector3)G[\"GarrisonGemBoutiquePosition\"]; } catch { hasGemBoutique = false; }\r\n\tif (hasGemBoutique)\r\n\t{\r\n\t\tif (IsQuestCompleted(37324)) { result = true; }\r\n\t\tif (IsQuestCompleted(37325)) { result = true; }\r\n\t\tif (IsQuestCompleted(37319)) { result = true; }\r\n\t\tif (IsQuestCompleted(37320)) { result = true; }\r\n\t\tif (IsQuestCompleted(37323)) { result = true; }\r\n\t\tif (IsQuestCompleted(37321)) { result = true; }\r\n\t\tif (result) { PrintInfo(\"This Character has done the Jewelcrafting Daily.\"); }\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"There is not a Gem Boutique in the Garrsion.\");\r\n\t}\r\n}\r\nreturn result;\r\n"
                          }
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Test Skip the Rest?"
                    }
                  ],
                  "GroupName": "Test"
                }
              ],
              "GroupName": "(Functions/Methods/Tests)"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Armory"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Armory Collect Shipment"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Armory Worker"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Armory Submit Work Orders"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Armory Do"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Submit Work Orders"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Armory Submit Work Orders"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Armory Collect Shipment"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "No Armory?",
                                    "Color": "255, 128, 255"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Move To Armory"
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Collect Shipment"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//if we have a Armory...........................................................\r\nstring thisName = \"Armory\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Armory Collect Shipment"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Armory Quartermaster"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif ((e == 77377) || (e == 79815))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Armory Interact with Quartermaster"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Armory Worker"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif ((e == 89065) || (e == 89066))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Armory Interact with Worker"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Armory"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Attempting the Jewelcrafter Daily Quest...."
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Move To Gem Boutique"
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Collect Shipment"
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Submit Work Orders"
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Attempt the Jewelcrafter Daily Quest"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//If we have a Gem Boutique (Ver 2 or 3) and need to do the Jewelcrafting Daily......................................\r\nbool result = true;\r\ntry { Vector3 v = (Vector3)G[\"GarrisonGemBoutiquePosition\"]; } catch { result = false; }\r\nif (result)\r\n{\r\n\tint r = -1;\r\n\ttry { r = (int)G[\"GarrisonGemBoutiqueVersion\"]; } catch { r = -1; }\r\n\tif (r < 2) { PrintInfo(\"Get Boutique is not Version 2 or Higher (Daily requires V2+ and Follower)\"); result = false; } else \r\n\t{\r\n\t\tif (IsQuestCompleted(37324)) { result = false; }\r\n\t\tif (IsQuestCompleted(37325)) { result = false; }\r\n\t\tif (IsQuestCompleted(37319)) { result = false; }\r\n\t\tif (IsQuestCompleted(37320)) { result = false; }\r\n\t\tif (IsQuestCompleted(37323)) { result = false; }\r\n\t\tif (IsQuestCompleted(37321)) { result = false; }\r\n\t\tif (result) { PrintInfo(\"This Character has done the Jewelcrafting Daily.\"); }\r\n\t}\r\n}\r\nelse\r\n{\r\n\tPrintInfo(\"There is not a Gem Boutique in the Garrsion.\");\r\n}\r\nreturn result;"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Gem Boutique Do"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "string seeGossip = \"\";\r\nstring workers = \" Costan Highwall, Dorogarr,\";\r\nint maxDistance = 15;\r\nint minDistance = 3;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\ndouble z = 1000.0;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tstring s = (string)\"\" + u.Name;\r\n\tdouble d = (double)0.0 + u.Distance;\r\n\tif (workers.IndexOf(\" \" + s + \",\") >= 0) { if (d < z) { x = u; z = d; }\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to gossip...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 2500;\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n//\t\tPrintInfo(\"Moving back to where I was...\");\r\n//\t\tfor (int b = 1; b < i*2; b++) { CTM(a); } \r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Interact with Jewelcrafter"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "string seeGossip = \"\";\r\nint maxDistance = 15;\r\nint minDistance = 3;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\ndouble z = 1000.0;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tstring s = (string)\"\" + u.Name;\r\n\tdouble d = (double)0.0 + u.Distance;\r\n\tif (s.StartsWith(\"Jewelcrafting Follower\")) { if (d < z) { x = u; z = d; }\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\t//ExecuteLua<string>(\"print('x is null')\");\r\n} else\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\tVector3 a = Me.Position;\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = ((double)0.0 + x.Distance);\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\t\t//ExecuteLua<string>(\"print('\" + z + \"')\");\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moving closer... distance of {0} yards.\", \"\" + (int)z);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 200;\r\n\t\t\tPrintInfo(\"Close enough to gossip...\");\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 2500;\r\n\t\t\tseeGossip = ExecuteLua<string>(\"return tostring(QuestFrameAcceptButton:IsVisible())\");\r\n\t\t\tif (object.ReferenceEquals(null, seeGossip)) { seeGossip = \"false\"; }\r\n\t\t\tPrintInfo(\"seeGossip = \" + seeGossip);\r\n\t\t\tstring canAccept = \"false\";\r\n\t\t\tcanAccept = ExecuteLua<string>(\"return tostring(QuestFrameAcceptButton:IsEnabled())\");\r\n\t\t\tif (object.ReferenceEquals(null, canAccept)) { canAccept = \"false\"; }\r\n\t\t\tPrintInfo(\"canAccept = \" + canAccept);\r\n\t\t\tif ((seeGossip.Equals(\"true\")) && (canAccept.Equals(\"true\")))\r\n\t\t\t{\r\n\t\t\t\tPrintInfo(\"Attempting to pick up quest...\");\r\n\t\t\t\tExecuteLua<string>(\"QuestFrameAcceptButton:Click()\"); \r\n\t\t\t\tyield return 1000;\r\n\t\t\t}\r\n\r\n\t\t\tstring canTurnIn = \"false\";\r\n\t\t\tcanTurnIn = ExecuteLua<string>(\"return tostring(QuestFrameCompleteButton:IsVisible())\");\r\n\t\t\tif (object.ReferenceEquals(null, canTurnIn)) { canTurnIn = \"false\"; }\r\n\t\t\tPrintInfo(\"canTurnIn = \" + canTurnIn);\r\n\t\t\tif (canTurnIn == \"true\")\r\n\t\t\t{\r\n\t\t\t\tint nc = ExecuteLua<int>(\"GetNumQuestChoices()\");\r\n\t\t\t\tif (object.ReferenceEquals(null, nc)) { nc = -1; }\r\n\t\t\t\tPrintInfo(\"nc = \" + nc);\r\n\t\t\t\tif (nc >= 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPrintInfo(\"Attempting to turn in quest...\");\r\n\t\t\t\t\tExecuteLua<string>(\"CompleteQuest()\");\r\n\t\t\t\t\tyield return 1500;\r\n\t\t\t\t\tExecuteLua<string>(\"GetQuestReward(\" + nc + \")\");\r\n\t\t\t\t\tyield return 2000;\r\n\t\t\t\t\tExecuteLua<string>(\"UseItemByName(\\\"Jewelcrafting Payment\\\", \\\"\\\") \");\r\n\t\t\t\t\tyield return 2000;\r\n\t\t\t\t\tExecuteLua<string>(\"UseItemByName(\\\"Jewelcrafting Payment\\\", \\\"\\\") \");\r\n\t\t\t\t\tyield return 2000;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n//ExecuteLua<string>(\"if QuestFrameCompleteButton:IsShown() == 1 then QuestFrameCompleteButton:Click() end\");\r\n//ExecuteLua<string>(\"if QuestFrameCompleteQuestButton:IsShown() == 1 then QuestFrameCompleteQuestButton:Click() end\");\r\n\r\n\t\t} else { PrintInfo(\"Not close enough to loot? Moving on...\"); }\r\n\t\tPrintInfo(\"Moving back to where I was...\");\r\n\t\tfor (int b = 1; b < i*2; b++)\r\n\t\t{\r\n\t\t\tCTM(a);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Interact with Jewelcrafter Follower"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "Comment",
                                  "Text": "Jewelcrafting Special Order"
                                },
                                {
                                  "$type": "CallBlock",
                                  "Target": "Interact with Jewelcrafter Follower"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "string quest = \"\";\r\nint NumQuestLogEntries = ExecuteLua<int>(\"return GetNumQuestLogEntries()\");\r\nif (object.ReferenceEquals(null, NumQuestLogEntries)) { NumQuestLogEntries = 0; }\r\nif (NumQuestLogEntries > 0)\r\n{\r\n\tstring s = \"\";\r\n\tfor (int i = 1; i < NumQuestLogEntries; i++)\r\n\t{\r\n\t\ts = ExecuteLua<string>(\"return GetQuestLink(\" + i + \")\");\r\n\t\tif (object.ReferenceEquals(null, s)) { s = \"\"; }\r\n//\t\tPrintInfo(s);\r\n\t\tif (s.Length > 20) \r\n\t\t{\r\n\t\t\tstring q = s.Substring(18,s.Length-18);\r\n//\t\t\tPrintInfo(q);\r\n\t\t\tif (q.StartsWith(\"37321:\")) { quest = \"A Yellow Brighter Than Gold\"; }\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPrintInfo(quest);\r\n\r\nif (quest.Equals(\"A Yellow Brighter Than Gold\"))\r\n{\r\n\tPrintInfo(\"Attempting to Interact with Jewelcrafter...\");\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"
                                },
                                {
                                  "$type": "ActionSequence",
                                  "Children": [
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "Comment",
                                            "Text": "Jewelcrafting Special Order; Out of Stock: Blackrock Ore"
                                          },
                                          {
                                            "$type": "If",
                                            "IsExtendedInEditor": false,
                                            "ActionsFalse": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Else",
                                              "GroupName": ""
                                            },
                                            "ActionsTrue": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Then",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "IsQuestObjectiveComplete",
                                              "QuestId": 37324,
                                              "ObjectiveIndex": 1
                                            },
                                            "IsNot": true
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "HasQuest",
                                        "QuestId": 37324
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "GroupName": "Out of Stock: Blackrock Ore"
                                },
                                {
                                  "$type": "ActionSequence",
                                  "Children": [
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "Comment",
                                            "Text": "Jewelcrafting Special Order; Out of Stock: True Iron Ore"
                                          },
                                          {
                                            "$type": "If",
                                            "IsExtendedInEditor": false,
                                            "ActionsFalse": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Else",
                                              "GroupName": ""
                                            },
                                            "ActionsTrue": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Then",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "IsQuestObjectiveComplete",
                                              "QuestId": 37325,
                                              "ObjectiveIndex": 1
                                            },
                                            "IsNot": true
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "HasQuest",
                                        "QuestId": 37325
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "GroupName": "Out of Stock: True Iron Ore"
                                },
                                {
                                  "$type": "ActionSequence",
                                  "Children": [
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "Comment",
                                            "Text": "Jewelcrafting Special Order; Wedding Bands"
                                          },
                                          {
                                            "$type": "If",
                                            "IsExtendedInEditor": false,
                                            "ActionsFalse": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Else",
                                              "GroupName": ""
                                            },
                                            "ActionsTrue": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter"
                                                },
                                                {
                                                  "$type": "ExecuteLua",
                                                  "LuaCode": "c=GetNumTradeSkills()\r\n--print(\"c\"..tostring(c))\r\ns=-1\r\nx=-1\r\nz=\"unknown\"\r\nif c > 6 then\r\n\tfor i=1,c do\r\n\t\tn,_,a = GetTradeSkillInfo(i)\r\n\t\t--print(tostring(i)..\"->\"..n..\"->\"..tostring(a))\r\n\t\tif strfind(n, \"Glowing Blackrock Band\") ~= nil then\r\n\t\t\ts=i\r\n\t\t\tx=a\r\n\t\t\tz=n\r\n\t\tend\r\n\tend\r\nend\r\nif s > 0 then\r\n\tif x < 2 then\r\n\t\tprint(\"need crafting mats for \"..z)\r\n\telse\r\n\t\tprint(\"attempting to craft \"..z)\r\n\t\tDoTradeSkill(s,2)\r\n\tend\r\nend"
                                                },
                                                {
                                                  "$type": "Wait",
                                                  "Delay": 8.0,
                                                  "DelayMax": 8.0
                                                },
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Then",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "IsQuestObjectiveComplete",
                                              "QuestId": 37319,
                                              "ObjectiveIndex": 1
                                            },
                                            "IsNot": true
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "HasQuest",
                                        "QuestId": 37319
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "GroupName": "Wedding Bands"
                                },
                                {
                                  "$type": "ActionSequence",
                                  "Children": [
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "Comment",
                                            "Text": "Jewelcrafting Special Order; A Fine Choker"
                                          },
                                          {
                                            "$type": "If",
                                            "IsExtendedInEditor": false,
                                            "ActionsFalse": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Else",
                                              "GroupName": ""
                                            },
                                            "ActionsTrue": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter"
                                                },
                                                {
                                                  "$type": "ExecuteLua",
                                                  "LuaCode": "c=GetNumTradeSkills()\r\n--print(\"c\"..tostring(c))\r\ns=-1\r\nx=-1\r\nz=\"unknown\"\r\nif c > 6 then\r\n\tfor i=1,c do\r\n\t\tn,_,a = GetTradeSkillInfo(i)\r\n\t\t--print(tostring(i)..\"->\"..n..\"->\"..tostring(a))\r\n\t\tif strfind(n, \"Whispering Iron Choker\") ~= nil then\r\n\t\t\ts=i\r\n\t\t\tx=a\r\n\t\t\tz=n\r\n\t\tend\r\n\tend\r\nend\r\nif s > 0 then\r\n\tif x < 1 then\r\n\t\tprint(\"need crafting mats for \"..z)\r\n\telse\r\n\t\tprint(\"attempting to craft \"..z)\r\n\t\tDoTradeSkill(s,1)\r\n\tend\r\nend"
                                                },
                                                {
                                                  "$type": "Wait",
                                                  "Delay": 5.0,
                                                  "DelayMax": 5.0
                                                },
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Then",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "IsQuestObjectiveComplete",
                                              "QuestId": 37320,
                                              "ObjectiveIndex": 1
                                            },
                                            "IsNot": true
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "HasQuest",
                                        "QuestId": 37320
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "GroupName": "A Fine Choker"
                                },
                                {
                                  "$type": "ActionSequence",
                                  "Children": [
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "Comment",
                                            "Text": "Jewelcrafting Special Order; Blue the Shade of Sky and Sea"
                                          },
                                          {
                                            "$type": "If",
                                            "IsExtendedInEditor": false,
                                            "ActionsFalse": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Else",
                                              "GroupName": ""
                                            },
                                            "ActionsTrue": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter"
                                                },
                                                {
                                                  "$type": "ExecuteLua",
                                                  "LuaCode": "c=GetNumTradeSkills()\r\n--print(\"c\"..tostring(c))\r\ns=-1\r\nx=-1\r\nz=\"unknown\"\r\nif c > 6 then\r\n\tfor i=1,c do\r\n\t\tn,_,a = GetTradeSkillInfo(i)\r\n\t\t--print(tostring(i)..\"->\"..n..\"->\"..tostring(a))\r\n\t\tif strfind(n, \"Haste Taladite\") ~= nil then\r\n\t\t\ts=i\r\n\t\t\tx=a\r\n\t\t\tz=n\r\n\t\tend\r\n\tend\r\nend\r\nif s > 0 then\r\n\tif x < 2 then\r\n\t\tprint(\"need crafting mats for \"..z)\r\n\telse\r\n\t\tprint(\"attempting to craft \"..z)\r\n\t\tDoTradeSkill(s,2)\r\n\tend\r\nend"
                                                },
                                                {
                                                  "$type": "Wait",
                                                  "Delay": 6.0,
                                                  "DelayMax": 6.0
                                                },
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Then",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "IsQuestObjectiveComplete",
                                              "QuestId": 37323,
                                              "ObjectiveIndex": 1
                                            },
                                            "IsNot": true
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "HasQuest",
                                        "QuestId": 37323
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "GroupName": "Blue the Shade of Sky and Sea"
                                },
                                {
                                  "$type": "ActionSequence",
                                  "Children": [
                                    {
                                      "$type": "If",
                                      "IsExtendedInEditor": false,
                                      "ActionsFalse": {
                                        "Children": [],
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Else",
                                        "GroupName": ""
                                      },
                                      "ActionsTrue": {
                                        "Children": [
                                          {
                                            "$type": "Comment",
                                            "Text": "Jewelcrafting Special Order; A Yellow Brighter Than Gold"
                                          },
                                          {
                                            "$type": "If",
                                            "IsExtendedInEditor": false,
                                            "ActionsFalse": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Else",
                                              "GroupName": ""
                                            },
                                            "ActionsTrue": {
                                              "Children": [
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter"
                                                },
                                                {
                                                  "$type": "ExecuteLua",
                                                  "LuaCode": "c=GetNumTradeSkills()\r\n--print(\"c\"..tostring(c))\r\ns=-1\r\nx=-1\r\nz=\"unknown\"\r\nif c > 6 then\r\n\tfor i=1,c do\r\n\t\tn,_,a = GetTradeSkillInfo(i)\r\n\t\t--print(tostring(i)..\"->\"..n..\"->\"..tostring(a))\r\n\t\tif strfind(n, \"Critical Strike Taladite\") ~= nil then\r\n\t\t\ts=i\r\n\t\t\tx=a\r\n\t\t\tz=n\r\n\t\tend\r\n\tend\r\nend\r\nif s > 0 then\r\n\tif x < 1 then\r\n\t\tprint(\"need crafting mats for \"..z)\r\n\telse\r\n\t\tprint(\"attempting to craft \"..z)\r\n\t\tDoTradeSkill(s,1)\r\n\tend\r\nend"
                                                },
                                                {
                                                  "$type": "Wait",
                                                  "Delay": 5.0,
                                                  "DelayMax": 5.0
                                                },
                                                {
                                                  "$type": "CallBlock",
                                                  "Target": "Interact with Jewelcrafter Follower"
                                                }
                                              ],
                                              "IsExtendedInEditor": false,
                                              "IsSpecialElement": true,
                                              "SpecialElementName": "Then",
                                              "GroupName": ""
                                            },
                                            "Condition": {
                                              "$type": "IsQuestObjectiveComplete",
                                              "QuestId": 37321,
                                              "ObjectiveIndex": 1
                                            },
                                            "IsNot": true
                                          }
                                        ],
                                        "IsExtendedInEditor": false,
                                        "IsSpecialElement": true,
                                        "SpecialElementName": "Then",
                                        "GroupName": ""
                                      },
                                      "Condition": {
                                        "$type": "HasQuest",
                                        "QuestId": 37321
                                      }
                                    }
                                  ],
                                  "IsExtendedInEditor": false,
                                  "GroupName": "A Yellow Brighter Than Gold"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Attempt the Jewelcrafter Daily Quest"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Jewel Crafting Daily"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Gem Boutique"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Trading Post Collect Shipment"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "No Trading Post?",
                                    "Color": "255, 128, 255"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Move To Trading Post"
                                  },
                                  {
                                    "$type": "CallBlock",
                                    "Target": "Collect Shipment"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//if we have a Trading Post...........................................................\r\nstring thisName = \"Trading Post\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Trading Post Collect Shipment"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Trading Post Quartermaster"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif ((e == 85427) || (e == 87015) || (e == 86698))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Trading Post Interact with Quartermaster"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Trading Post Worker"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "List<int> thisList = new List<int> (new int[] {87213, 87214, 87215, 87216, 87212, 87211, 87207, 87208, 87209, 87210, 87117, 87118, 87119, 87120, 87116, 87115, 87112, 87113, 87114, 86803});\r\nint maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif (thisList.Contains(e))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Trading Post Interact with Worker"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Move To Trading Post Trader"
                            },
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "List<int> thisList = new List<int> (new int[] {86776, 82731, 87260, 87200, 87265, 87291, 86779, 87290, 87263, 86778, 87201, 87202, 85968, 87289, 87203, 87288, 87204, 81253, 87287, 87262, 86777});\r\nint maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif (thisList.Contains(e))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "GroupName": "Trading Post Interact with Trader"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "While",
                              "IsExtendedInEditor": false,
                              "LoopActions": {
                                "Children": [
                                  {
                                    "$type": "CSharpAction",
                                    "CSharpCode": "string buy = \"/run BuyMerchantItem(27,1)\";\r\nExecuteMacro(buy);\r\nyield return 1000;\r\nstring cultureItemName = ExecuteLua<string>(\"return GetItemInfo(120146)\");\r\nExecuteLua<string>(\"UseItemByName(\\\"\"+ cultureItemName + \"\\\", \\\"\\\") \");\r\nyield return 400;\r\n\r\n"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Do",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "bool result = false;\r\nint maxResDefault = 7000;\r\nint maxRes = maxResDefault;\r\ntry { maxRes = (int)G[\"MaximumGarrisonResourcesBeforeLootingCacheOrCompletingMissions\"]; } catch { maxRes = maxResDefault; }\r\nint curRes = ExecuteLua<int>(\"_,amount,_,_,_,_,_ = GetCurrencyInfo(824) return amount\");\r\nif (curRes > maxRes) { result = true; }\r\nreturn result;"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Buy Smuggeld Gold Sacks"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "Trading Post Interact with Trader"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Buy Smuggeld Gold Sacks"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Exchange Resoucers for Gold via Smuggeld Gold Sacks"
                        }
                      ],
                      "GroupName": "Trading Post"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif ((e == 85514) || (e == 85783))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Herb Garden Interact with Worker"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Do Herb Garden"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Herb Garden not cleared (do quest Clearing the Herb Garden)",
                                    "Color": "255, 128, 255"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [
                                        {
                                          "$type": "Comment",
                                          "Text": "Herbing is turned off (G[\"GarrisonHerbingOff\"] is set to true)",
                                          "Color": "255, 128, 255"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Herb Garden"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Herb"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Move To Herb Garden Worker"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Submit Work Orders"
                                        },
                                        {
                                          "$type": "CallBlock",
                                          "Target": "Collect Shipment"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "CSharpCondition",
                                      "CSharpCode": "//herbing turned off.............................................................................\r\nbool result = true;\r\ntry { result = (bool)G[\"GarrisonHerbingOff\"]; } catch { result = true; }\r\nreturn result\r\n"
                                    },
                                    "IsNot": true
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//if the character has the Herb Garden Quest Prerequisites.......................................................\r\nbool result = false;\r\nif ((IsQuestCompleted(36404)) || (IsQuestCompleted(34193))) { result = true; }\r\nreturn result;"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Herb Garden Do"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Herbing"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "ActionSequence",
                                    "Children": [
                                      {
                                        "$type": "If",
                                        "IsExtendedInEditor": false,
                                        "ActionsFalse": {
                                          "Children": [],
                                          "IsSpecialElement": true,
                                          "SpecialElementName": "Else",
                                          "GroupName": ""
                                        },
                                        "ActionsTrue": {
                                          "Children": [
                                            {
                                              "$type": "CallBlock",
                                              "Target": "A Star Pathfinding Algorithm"
                                            },
                                            {
                                              "$type": "CallBlock",
                                              "Target": "Collect Herb"
                                            },
                                            {
                                              "$type": "CallBlock",
                                              "Target": "Herb Garden Collection Loop"
                                            }
                                          ],
                                          "IsExtendedInEditor": false,
                                          "IsSpecialElement": true,
                                          "SpecialElementName": "Then",
                                          "GroupName": ""
                                        },
                                        "Condition": {
                                          "$type": "CSharpCondition",
                                          "CSharpCode": "bool result = false;\r\nint maxDistance = 30; //20 yards max distance to search\r\nint minDistance = 5; //Interact Distance Minimum\r\nint i = 1;\r\nGameObject x = null;\r\nfloat z = 1000.0f;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tstring s = (string)\"\" + o.Name;\r\n\tint e = o.EntryID;\r\n\tfloat d = o.Distance;\r\n\tif ((s == \"Talador Orchid\") || (s == \"Nagrand Arrowbloom\") || (s == \"Gorgrond Flytrap\") || (s == \"Frostweed\") || (s == \"Fireweed\") || (s == \"Starflower\") || (e == 232541) || (e == 232542) || (e == 232543) || (e == 232544) || (e == 232545))\r\n\t{\r\nfloat oMin = o.Distance - minDistance;\r\nfloat oMax = o.Distance + minDistance;\r\nif ((d < maxDistance) && (o.Distance2D > oMin) && (o.Distance2D < oMax))\r\n{\r\n\r\n\t\tif (d < z) { x = o; z = d; }\r\n}\r\n\t}\r\n}\r\nif (object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = new Vector3(0f,0f,0f);\r\n\tresult = false;\r\n} else\r\n{\r\n\tPrintInfo(\"found...\"+x.Name);\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n\tresult = true;\r\n}\r\nreturn result;\r\n"
                                        }
                                      }
                                    ],
                                    "IsExtendedInEditor": false,
                                    "GroupName": "Herb Garden Collection Loop"
                                  },
                                  {
                                    "$type": "ActionSequence",
                                    "Children": [
                                      {
                                        "$type": "CallBlock"
                                      }
                                    ],
                                    "IsExtendedInEditor": false,
                                    "GroupName": ""
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "bool herbingOff = true;\r\ntry { herbingOff = (bool)G[\"GarrisonHerbingOff\"]; } catch { herbingOff = true; }\r\nreturn herbingOff"
                              },
                              "IsNot": true
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Herb"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Herb Garden"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "CSharpAction",
                              "CSharpCode": "int maxDistance = 50;\r\nint minDistance = 5;\r\nint maxTriesMoveTo = 99;\r\nint i = 1;\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tfloat d = u.Distance;\r\n\tif ((e == 77730) || (e == 81688))\r\n\t{\r\n\t\tif (d < z) { x = u; z = d; }\r\n\t}\r\n}\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tif (z < maxDistance)\r\n\t{\r\n\t\tPrintInfo(\"Found {0} distance of {1} yards.\", \"\" + x.Name, \"\" + (int)z);\r\n\t\twhile ((i < maxTriesMoveTo) && (z > minDistance)) \r\n\t\t{\r\n\t\t\tz = x.Distance;\r\n\t\t\ti++;\r\n\t\t\tCTM(x.Position);\r\n\t\t\t//PrintInfo(\"Found {0} distance of {1} yards.\", x.Name, \"\" + (int)z);\r\n\t\t\tyield return 100;\r\n\t\t}\r\n\t\tPrintInfo(\"Moved closer to {2} distance of {0} yards. ({1})\", \"\" + (int)z, \"\" + (int)i, x.Name);\r\n\t\tif (z <= minDistance) \r\n\t\t{\t\t\r\n\t\t\tMoveToStop();\t\r\n\t\t\tyield return 1000;\r\n\t\t\tx.Interact();\r\n\t\t\tyield return 1000;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n\t\t}\r\n\t}\r\n}\r\nelse \r\n{\r\n\tPrintInfo(\"Not close enough to Interact? Moving on...\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Mine Interact with Worker"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Do The Mine"
                            },
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [
                                  {
                                    "$type": "If",
                                    "IsExtendedInEditor": false,
                                    "ActionsFalse": {
                                      "Children": [
                                        {
                                          "$type": "If",
                                          "IsExtendedInEditor": false,
                                          "ActionsFalse": {
                                            "Children": [
                                              {
                                                "$type": "CallBlock",
                                                "Target": "Test Inside Mine"
                                              },
                                              {
                                                "$type": "If",
                                                "IsExtendedInEditor": false,
                                                "ActionsFalse": {
                                                  "Children": [
                                                    {
                                                      "$type": "CallBlock",
                                                      "Target": "Move To Mine"
                                                    }
                                                  ],
                                                  "IsExtendedInEditor": false,
                                                  "IsSpecialElement": true,
                                                  "SpecialElementName": "Else",
                                                  "GroupName": ""
                                                },
                                                "ActionsTrue": {
                                                  "Children": [
                                                    {
                                                      "$type": "Comment",
                                                      "Text": "Already inside the mine....",
                                                      "Color": "255, 128, 255"
                                                    }
                                                  ],
                                                  "IsExtendedInEditor": false,
                                                  "IsSpecialElement": true,
                                                  "SpecialElementName": "Then",
                                                  "GroupName": ""
                                                },
                                                "Condition": {
                                                  "$type": "CSharpCondition",
                                                  "CSharpCode": "//if character is in the mine (must 'callblock: Test Inside Mine' beforehand)\r\nbool result = false;\r\ntry { result = (bool)G[\"GarrisonMeInMine\"]; } catch { result = false; }\r\nreturn result;\r\n"
                                                }
                                              },
                                              {
                                                "$type": "If",
                                                "IsExtendedInEditor": false,
                                                "ActionsFalse": {
                                                  "Children": [
                                                    {
                                                      "$type": "CallBlock",
                                                      "Target": "Mine"
                                                    },
                                                    {
                                                      "$type": "CallBlock",
                                                      "Target": "Move To Mine Worker"
                                                    },
                                                    {
                                                      "$type": "CallBlock",
                                                      "Target": "Submit Work Orders"
                                                    },
                                                    {
                                                      "$type": "CallBlock",
                                                      "Target": "Collect Shipment"
                                                    },
                                                    {
                                                      "$type": "CallBlock",
                                                      "Target": "Draenor DoTradeSkills"
                                                    }
                                                  ],
                                                  "IsExtendedInEditor": false,
                                                  "IsSpecialElement": true,
                                                  "SpecialElementName": "Else",
                                                  "GroupName": ""
                                                },
                                                "ActionsTrue": {
                                                  "Children": [
                                                    {
                                                      "$type": "Comment",
                                                      "Text": "Character has already mined the mine (no nodes around)",
                                                      "Color": "255, 128, 255"
                                                    }
                                                  ],
                                                  "IsExtendedInEditor": false,
                                                  "IsSpecialElement": true,
                                                  "SpecialElementName": "Then",
                                                  "GroupName": ""
                                                },
                                                "Condition": {
                                                  "$type": "CSharpCondition",
                                                  "CSharpCode": "//there are nodes to mine here (not already mined out)....................................\r\nbool result = false;\r\nint nodeCount = 0;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tint e = o.EntryID;\r\n\tif ((e == 232541) || (e == 232542) || (e == 232543) || (e == 232544) || (e == 232545))\r\n\t{\r\n\t\tfloat d = Vector3.Distance(o.Position, Me.Position);\r\n\t\tif (d < 150) { nodeCount++; }\r\n\t}\r\n}\r\nif (nodeCount > 3) { result = true; }\r\nreturn result;"
                                                },
                                                "IsNot": true
                                              }
                                            ],
                                            "IsExtendedInEditor": false,
                                            "IsSpecialElement": true,
                                            "SpecialElementName": "Else",
                                            "GroupName": ""
                                          },
                                          "ActionsTrue": {
                                            "Children": [
                                              {
                                                "$type": "Comment",
                                                "Text": "Mining is turned off (G[\"GarrisonMiningOff\"] is set to true)",
                                                "Color": "255, 128, 255"
                                              }
                                            ],
                                            "IsExtendedInEditor": false,
                                            "IsSpecialElement": true,
                                            "SpecialElementName": "Then",
                                            "GroupName": ""
                                          },
                                          "Condition": {
                                            "$type": "CSharpCondition",
                                            "CSharpCode": "//mining turned off.............................................................................\r\nbool miningOff = true;\r\ntry { miningOff = (bool)G[\"GarrisonMiningOff\"]; } catch { miningOff = true; }\r\nreturn miningOff"
                                          }
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Else",
                                      "GroupName": ""
                                    },
                                    "ActionsTrue": {
                                      "Children": [
                                        {
                                          "$type": "Comment",
                                          "Text": "Mine not cleared (do quest Things Are Not Goren Our Way)",
                                          "Color": "255, 128, 255"
                                        }
                                      ],
                                      "IsExtendedInEditor": false,
                                      "IsSpecialElement": true,
                                      "SpecialElementName": "Then",
                                      "GroupName": ""
                                    },
                                    "Condition": {
                                      "$type": "CSharpCondition",
                                      "CSharpCode": "//if chararacter has the Mine Quest Prerequisites..................................................................\r\nbool result = false;\r\nif ((IsQuestCompleted(34192)) || (IsQuestCompleted(35154))) { result = true; }\r\nreturn result;\r\n  "
                                    },
                                    "IsNot": true
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Character has already mined the mine",
                                    "Color": "255, 128, 255"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "//character has already mined the mine.....................................................\r\nbool result = false;\r\ntry { result = (bool)G[\"GarrisonTheMineIsDone\"]; } catch { result = false; }\r\nreturn result;\r\n"
                              }
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "The Mine Do"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "If",
                              "IsExtendedInEditor": false,
                              "ActionsFalse": {
                                "Children": [],
                                "IsSpecialElement": true,
                                "SpecialElementName": "Else",
                                "GroupName": ""
                              },
                              "ActionsTrue": {
                                "Children": [
                                  {
                                    "$type": "Comment",
                                    "Text": "Mining"
                                  },
                                  {
                                    "$type": "CSharpAction",
                                    "CSharpCode": "//Mine The Line................................................................................................\r\nint lineTolerance = 2;\r\nint interactTolerance = 6;\r\nfloat lerp = 0.25f;\r\nint yieldForLoot = 1800;\r\nfloat j = 0f;\r\nint yieldTime = 100;\r\nVector3[] v = new Vector3[] { };\r\nstring thisGName = \"GarrisonMineChainVectors\";\r\nPrintInfo(\"Loading G[\\\"\" + thisGName + \"\\\"]\");\r\ntry { v = (Vector3[])G[thisGName]; }\r\ncatch { v = new Vector3[] { }; }\r\nif (v.Length > 0)\r\n{\r\n\tPrint(\"Vectors to visit = \" + v.Length);\r\n\tint jumpstart = 0;\r\n\tfor (int i = 0; i < v.Length; i++)\r\n\t{\r\n\t\tif (Me.DistanceTo(v[i]) < (lineTolerance * 2)) { jumpstart = i; break; }\r\n\t}\r\n\tif (jumpstart > (v.Length-9)) { jumpstart = 0; }\r\n\tstring mmzt = ExecuteLua<string>(\"return GetMinimapZoneText()\");\r\n\tif (object.ReferenceEquals(null, mmzt)) { mmzt = \"\"; }\r\n\t//PrintInfo(\"MinimapZoneText=\"+mmzt+\"; IndexOf(\\\"ine\\\") = \"+mmzt.IndexOf(\"ine\"));\r\n\tif (mmzt.IndexOf(Me.Name) >= 0) { jumpstart = 0; }\r\n\tint coffee2 = 0;\r\n\tGameObject[] w = new GameObject[v.Length];\r\n\tfor (int i = jumpstart; i < v.Length; i++)\r\n\t{\r\n\t\tif (jumpstart > 0) { PrintInfo(\"Jumpstarting Mine Line @\" + i); }\r\n\t\tstring thisClass = \"\" + Me.Class;\r\n\t\tif (thisClass.Equals(\"Rogue\"))\r\n\t\t{\r\n\t\t\tif (!Me.HasAura(137573)) { ExecuteLua<string>(\"CastSpellByName('Burst of Speed') return ''\"); }\r\n\t\t}\r\n\t\tif (thisClass.Equals(\"Hunter\"))\r\n\t\t{\r\n\t\t\tif (!Me.HasAura(5118)) { ExecuteLua<string>(\"CastSpellByName('Aspect of the Cheetah') return ''\"); }\r\n\t\t}\r\n\t\tif (thisClass.Equals(\"Priest\"))\r\n\t\t{\r\n\t\t\tif (!Me.HasAura(17)) { ExecuteLua<string>(\"CastSpellByName('Power Word: Shield') return ''\"); }\r\n\t\t}\r\n\t\tif ((!Me.HasAura(176049)) && (i < (v.Length/2))) \r\n\t\t{ \r\n\t\t\tcoffee2 = i;\r\n\t\t\tExecuteLua<string>(\"UseItemByName(\\\"Miner's Coffee\\\") return ''\"); \r\n\t\t\tyield return 50;\r\n\t\t}\r\n\t\telse \r\n\t\t{\t\r\n\t\t\tif ((coffee2+8) == i) \r\n\t\t\t{\r\n\t\t\t\tExecuteLua<string>(\"UseItemByName(\\\"Miner's Coffee\\\") return ''\"); \r\n\t\t\t\tyield return 1000;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!Me.HasAura(176061)) { ExecuteLua<string>(\"UseItemByName('Preserved Mining Pick') return ''\"); }\r\n\t\tint stuck = 0;\r\n\t\twhile (Me.DistanceTo(v[i]) > lineTolerance)\r\n\t\t{\r\n\t\t\tstuck++;\r\n\t\t\tj = Me.DistanceTo(v[i]);\r\n\t\t\t//PrintInfo(\"ctm distance=\" + j+\";i=\"+i+\";x=\"+v[i].X+\"; y=\"+v[i].Y+\"; z=\"+v[i].Z);\r\n\t\t\tCTM(v[i]);\r\n\t\t\tyieldTime = Convert.ToInt32(j * 25f);\r\n\t\t\tif (yieldTime < 50) { yieldTime = 50; }\r\n\t\t\t//Print(\"yieldTime=\" + yieldTime + \"; Distance=\" + j);\r\n\t\t\tyield return yieldTime;\r\n\t\t\tif (stuck > 99) \r\n\t\t\t{\r\n\t\t\t\tPrintInfo(\"we are stuck :'(... (need for user intervention)\");\r\n\t\t\t\tyield return 1000; \r\n\t\t\t}\r\n\t\t}\r\n\t\tforeach (GameObject o in GameObjects)\r\n\t\t{\r\n\t\t\tint e = o.EntryID;\r\n\t\t\tif ((e == 232541) || (e == 232542) || (e == 232543) || (e == 232544) || (e == 232545))\r\n\t\t\t{\r\n\t\t\t\tfloat z = 9999f;\r\n\t\t\t\tGameObject x = null;\r\n\t\t\t\tint y = -1;\r\n\t\t\t\tfor (int k = i; k < v.Length; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfloat d = Vector3.Distance(o.Position, v[k]);\r\n\t\t\t\t\tif (z > d) { x = o; z = d; y = k; if (d <= interactTolerance) { break; } }\r\n\t\t\t\t}\r\n\t\t\t\tif ((!object.ReferenceEquals(null, x)) && (y >= 0)) { w[y] = x; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tGameObject t = null;\r\n\t\ttry { t = (GameObject)w[i]; }\r\n\t\tcatch { t = null; }\r\n\t\tw[i] = null;\r\n\t\tfloat fx = 0f;\r\n\t\tfloat fy = 0f;\r\n\t\tfloat fz = 0f;\r\n\t\tif (!object.ReferenceEquals(null, t)) { fx = t.Position.X; fy = t.Position.Y; fz = t.Position.Z; } else { fx = 0f; fy = 0f; fz = 0f; }\r\n\t\tint persistantNode = 0;\r\n\t\twhile (!object.ReferenceEquals(null, t))\r\n\t\t{\r\n\t\t\tj = Me.DistanceTo(t.Position);\r\n\t\t\tif (!((j < 25) && (Me.Distance2DTo(t.Position) < 25)))\r\n\t\t\t{\r\n\t\t\t\tPrintInfo(\"Me.DistanceTo=\" + j + \"; Me.Distance2DTo=\" + Me.Distance2DTo(t.Position));\r\n\t\t\t\tt = null;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\twhile (j > interactTolerance)\r\n\t\t\t\t{\r\n\t\t\t\t\tj = Me.DistanceTo(t.Position);\r\n\t\t\t\t\t//PrintInfo(\"mine ctm distance=\" + j);\r\n\t\t\t\t\tCTM(Vector3.Lerp(Me.Position, t.Position, lerp));\r\n\t\t\t\t\tyieldTime = Convert.ToInt32(j * 25f);\r\n\t\t\t\t\tif (yieldTime < 50) { yieldTime = 50; }\r\n\t\t\t\t\t//Print(\"yieldTime=\" + yieldTime + \"; Distance=\" + j);\r\n\t\t\t\t\tyield return yieldTime;\r\n\t\t\t\t}\r\n\t\t\t\tint iLikeToMoveItMoveIt = 0;\r\n\t\t\t\twhile (Me.IsMoving) \r\n\t\t\t\t{\r\n\t\t\t\t\tPrintInfo(\"waiting for char to stop moving...\"); \r\n\t\t\t\t\tiLikeToMoveItMoveIt++;\r\n\t\t\t\t\tif (iLikeToMoveItMoveIt > 6) { MoveToStop(); }\r\n\t\t\t\t\tyield return 100; \r\n\t\t\t\t}\r\n\t\t\t\tt.Interact();\r\n\t\t\t\tyield return 800;\r\n\t\t\t\tint channelTime = -1;\r\n\t\t\t\tstring ct = ExecuteLua<string>(\"local spell, _, _, _, _, endTime = UnitCastingInfo('player') if endTime == nil then endTime = GetTime() end return(tostring(math.floor(tonumber((endTime/1000) - GetTime())*1000)))\");\r\n\t\t\t\t//PrintInfo(\"ct=\" + ct);\r\n\t\t\t\tif (!Int32.TryParse(ct, out channelTime)) { channelTime = 5000; }\r\n\t\t\t\tPrintInfo(\"waiting while mining... \" + channelTime+\" ms.\");\r\n\t\t\t\tyield return channelTime;\r\n\t\t\t\tPrintInfo(\"waiting while looting... \" + yieldForLoot+\" ms.\");\r\n\t\t\t\tyield return yieldForLoot;\r\n\t\t\t\tforeach (GameObject o in GameObjects)\r\n\t\t\t\t{\r\n\t\t\t\t\tint e = o.EntryID;\r\n\t\t\t\t\tif ((e == 232541) || (e == 232542) || (e == 232543) || (e == 232544) || (e == 232545))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfloat z = 9999f;\r\n\t\t\t\t\t\tGameObject x = null;\r\n\t\t\t\t\t\tint y = -1;\r\n\t\t\t\t\t\tfor (int k = 0; k < v.Length; k++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfloat d = Vector3.Distance(o.Position, v[k]);\r\n\t\t\t\t\t\t\tif (z > d) { x = o; z = d; y = k; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ((!object.ReferenceEquals(null, x)) && (y >= 0))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tw[y] = x;\r\n\t\t\t\t\t\t\tif (y == i) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//PrintInfo(\"found persistant node here; x=\"+t.Position.X+\"; y=\"+t.Position.Y+\"; z=\"+t.Position.Z+\" fx=\"+fx+\"; fy=\"+fy+\"; fz=\"+fz); \r\n\t\t\t\t\t\t\t\tpersistantNode++;\r\n\t\t\t\t\t\t\t\tif (persistantNode > 3) { w[y] = null; persistantNode = 0; }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tt = null;\r\n\t\t\t\ttry { t = (GameObject)w[i]; }\r\n\t\t\t\tcatch { t = null; }\r\n\t\t\t\tw[i] = null;\r\n\t\t\t\tif (!object.ReferenceEquals(null, t)) { fx = t.Position.X; fy = t.Position.Y; fz = t.Position.Z; } else { fx = 0f; fy = 0f; fz = 0f; }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nG[\"GarrisonTheMineIsDone\"] = true;\r\n"
                                  }
                                ],
                                "IsExtendedInEditor": false,
                                "IsSpecialElement": true,
                                "SpecialElementName": "Then",
                                "GroupName": ""
                              },
                              "Condition": {
                                "$type": "CSharpCondition",
                                "CSharpCode": "bool miningOff = true;\r\ntry { miningOff = (bool)G[\"GarrisonMiningOff\"]; } catch { miningOff = true; }\r\nreturn miningOff"
                              },
                              "IsNot": true
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "GroupName": "Mine"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "The Mine"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [],
                      "GroupName": "Fishing Shack"
                    }
                  ],
                  "GroupName": "Activities"
                }
              ],
              "GroupName": "Buildings (Activities)"
            }
          ],
          "GroupName": "Ancillary"
        },
        {
          "$type": "ActionSequence",
          "Children": [
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Command Table"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "CSharpAction",
                        "CSharpCode": "string thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nstring thisName = \"\"; try { thisName = (string)G[\"GarrisonMoveToByName\"] ; } catch { thisName = \"\"; }\r\nif (thisFaction.Equals(\"\"))\r\n{\r\n\tPrintInfo(\"Error... G[\\\"GarrisonFaction\\\"] could not be read?\");\r\n}\r\nelse\r\n{\r\n\tif (thisLevel.Equals(\"\"))\r\n\t{\r\n\t\tPrintInfo(\"Error... G[\\\"GarrisonLevel\\\"] could not be read?\");\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"Error: G[\\\"Garrison\"+thisName+\"Position\\\"] could not be read? It should be defined in Block named 'Detect Faction and Garrison Level' in the section starting with: if ((thisFaction == \\\"\"+thisFaction+\"\\\") && (thisLevel == \\\"\"+thisLevel+\"\\\")) {\");\t\r\n\t}\r\n}\r\n\r\n"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//If we can read the Position and set the Garrison MoveTo then............................\r\nstring MoveToByName = \"CommandTable\";\r\nbool result = true;\r\nVector3 v = new Vector3(0f,0f,0f);\r\nG[\"GarrisonMoveToByName\"] = MoveToByName;\r\ntry { v = (Vector3)G[\"Garrison\"+MoveToByName+\"Position\"]; } catch { result = false; }\r\nG[\"GarrisonMoveTo\"] = v;\r\nreturn result;\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Command Table"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Garrison Cache"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "CSharpAction",
                        "CSharpCode": "string thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nstring thisName = \"\"; try { thisName = (string)G[\"GarrisonMoveToByName\"] ; } catch { thisName = \"\"; }\r\nif (thisFaction.Equals(\"\"))\r\n{\r\n\tPrintInfo(\"Error... G[\\\"GarrisonFaction\\\"] could not be read?\");\r\n}\r\nelse\r\n{\r\n\tif (thisLevel.Equals(\"\"))\r\n\t{\r\n\t\tPrintInfo(\"Error... G[\\\"GarrisonLevel\\\"] could not be read?\");\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"Error: G[\\\"Garrison\"+thisName+\"Position\\\"] could not be read? It should be defined in Block named 'Detect Faction and Garrison Level' in the section starting with: if ((thisFaction == \\\"\"+thisFaction+\"\\\") && (thisLevel == \\\"\"+thisLevel+\"\\\")) {\");\t\r\n\t}\r\n}\r\n\r\n"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//If we can read the Position and set the Garrison MoveTo then............................\r\nstring MoveToByName = \"Cache\";\r\nbool result = true;\r\nVector3 v = new Vector3(0f,0f,0f);\r\nG[\"GarrisonMoveToByName\"] = MoveToByName;\r\ntry { v = (Vector3)G[\"Garrison\"+MoveToByName+\"Position\"]; } catch { result = false; }\r\nG[\"GarrisonMoveTo\"] = v;\r\nreturn result;\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Garrison Cache"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Mailbox"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "CSharpAction",
                        "CSharpCode": "string thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nstring thisName = \"\"; try { thisName = (string)G[\"GarrisonMoveToByName\"] ; } catch { thisName = \"\"; }\r\nif (thisFaction.Equals(\"\"))\r\n{\r\n\tPrintInfo(\"Error... G[\\\"GarrisonFaction\\\"] could not be read?\");\r\n}\r\nelse\r\n{\r\n\tif (thisLevel.Equals(\"\"))\r\n\t{\r\n\t\tPrintInfo(\"Error... G[\\\"GarrisonLevel\\\"] could not be read?\");\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"Error: G[\\\"Garrison\"+thisName+\"Position\\\"] could not be read? It should be defined in Block named 'Detect Faction and Garrison Level' in the section starting with: if ((thisFaction == \\\"\"+thisFaction+\"\\\") && (thisLevel == \\\"\"+thisLevel+\"\\\")) {\");\t\r\n\t}\r\n}\r\n\r\n"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//If we can read the Position and set the Garrison MoveTo then............................\r\nstring MoveToByName = \"Mailbox\";\r\nbool result = true;\r\nVector3 v = new Vector3(0f,0f,0f);\r\nG[\"GarrisonMoveToByName\"] = MoveToByName;\r\ntry { v = (Vector3)G[\"Garrison\"+MoveToByName+\"Position\"]; } catch { result = false; }\r\nG[\"GarrisonMoveTo\"] = v;\r\nreturn result;\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mailbox"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Mill"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Mill?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Mill"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Mill Position...................................\r\nstring thisName = \"Mill\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mill"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Arena"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Arena?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Arena"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Arena Position...................................\r\nstring thisName = \"Arena\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Arena"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Barn"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Barn?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Barn"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Barn Position...................................\r\nstring thisName = \"Barn\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Barn"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Inn"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Inn?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Inn"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Inn Position...................................\r\nstring thisName = \"Inn\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Inn"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Trading Post"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Trading Post?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "If",
                        "IsExtendedInEditor": false,
                        "ActionsFalse": {
                          "Children": [
                            {
                              "$type": "CallBlock",
                              "Target": "CTM Star Pathfinding Algorithm"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Finalize Plot"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "IsSpecialElement": true,
                          "SpecialElementName": "Else",
                          "GroupName": ""
                        },
                        "ActionsTrue": {
                          "Children": [
                            {
                              "$type": "Comment",
                              "Text": "Already at the Trading Post",
                              "Color": "255, 128, 255"
                            },
                            {
                              "$type": "CallBlock",
                              "Target": "Finalize Plot"
                            }
                          ],
                          "IsExtendedInEditor": false,
                          "IsSpecialElement": true,
                          "SpecialElementName": "Then",
                          "GroupName": ""
                        },
                        "Condition": {
                          "$type": "CSharpCondition",
                          "CSharpCode": "//if we are at the Trading Post......................................................................\r\nstring thisName = \"Trading Post\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                        }
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Trading Post"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we have a Trading Post...........................................................\r\nstring thisName = \"Trading Post\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Trading Post"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Trading Post"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Trading Post......................................................................\r\nstring thisName = \"Trading Post\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "List<int> thisList = new List<int> (new int[] {87213, 87214, 87215, 87216, 87212, 87211, 87207, 87208, 87209, 87210, 87117, 87118, 87119, 87120, 87116, 87115, 87112, 87113, 87114, 86803});\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif (thisList.Contains(e)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "CTM Star Pathfinding Algorithm"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Trading Post Trader"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Trading Post"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Trading Post......................................................................\r\nstring thisName = \"Trading Post\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "List<int> thisList = new List<int> (new int[] {86776, 82731, 87260, 87200, 87265, 87291, 86779, 87290, 87263, 86778, 87201, 87202, 85968, 87289, 87203, 87288, 87204, 81253, 87287, 87262, 86777});\r\nUnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif (thisList.Contains(e)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "CTM Star Pathfinding Algorithm"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Trading Post Worker"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Trading Post"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Trading Post......................................................................\r\nstring thisName = \"Trading Post\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "UnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif ((e == 85427) || (e == 87015) || (e == 86698)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "CTM Star Pathfinding Algorithm"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Trading Post Quartermaster"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To The Tannery"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No The Tannery?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at The Tannery"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the The Tannery Position...................................\r\nstring thisName = \"The Tannery\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To The Tannery"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To The Forge"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No The Forge?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at The Forge"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the The Forge Position...................................\r\nstring thisName = \"The Forge\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To The Forge"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Tailoring Emporium"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Tailoring Emporium?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Tailoring Emporium"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Tailoring Emporium Position...................................\r\nstring thisName = \"Tailoring Emporium\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Tailoring Emporium"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Storehouse"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Storehouse?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Storehouse"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Storehouse Position...................................\r\nstring thisName = \"Storehouse\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Storehouse"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Scribe Quarters"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Scribe Quarters?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Scribe Quarters"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Scribe Quarters Position...................................\r\nstring thisName = \"Scribe Quarters\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Scribe Quarters"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Salvage Yard"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Salvage Yard?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Salvage Yard"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Salvage Yard Position...................................\r\nstring thisName = \"Salvage Yard\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Salvage Yard"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Gem Boutique"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Gem Boutique?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Gem Boutique"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Gem Boutique Position...................................\r\nstring thisName = \"Gem Boutique\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Gem Boutique"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Engineering Works"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Engineering Works?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Engineering Works"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Engineering Works Position...................................\r\nstring thisName = \"Engineering Works\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Engineering Works"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Enchanter Study"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Enchanter Study?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Enchanter Study"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Enchanter Study Position...................................\r\nstring thisName = \"Enchanter Study\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Enchanter Study"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Alchemy Lab"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Alchemy Lab?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Alchemy Lab"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Alchemy Lab Position...................................\r\nstring thisName = \"Alchemy Lab\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Alchemy Lab"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Workshop"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Workshop?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Workshop"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Workshop Position...................................\r\nstring thisName = \"Workshop\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Workshop"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Mage Tower"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Mage Tower?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Mage Tower"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Mage Tower Position...................................\r\nstring thisName = \"Mage Tower\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mage Tower"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Stables"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Stables?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Stables"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Stables Position...................................\r\nstring thisName = \"Stables\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Stables"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Armory"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Armory?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Armory"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Armory Position...................................\r\nstring thisName = \"Armory\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Armory"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Armory"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Armory......................................................................\r\nstring thisName = \"Armory\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "G[\"GarrisonArmoryWorkerMoveLoopTimeOut\"] = (int)1;\r\n"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "UnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif ((e == 89065) || (e == 89066)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                    },
                    {
                      "$type": "CallBlock",
                      "Target": "CTM Star Pathfinding Algorithm"
                    },
                    {
                      "$type": "Wait",
                      "Delay": 0.4,
                      "DelayMax": 0.4
                    },
                    {
                      "$type": "If",
                      "IsExtendedInEditor": false,
                      "ActionsFalse": {
                        "Children": [],
                        "IsSpecialElement": true,
                        "SpecialElementName": "Else",
                        "GroupName": ""
                      },
                      "ActionsTrue": {
                        "Children": [
                          {
                            "$type": "CallBlock",
                            "Target": "Armory Worker Moves Loop (Follow until they are still)"
                          }
                        ],
                        "IsExtendedInEditor": false,
                        "IsSpecialElement": true,
                        "SpecialElementName": "Then",
                        "GroupName": ""
                      },
                      "Condition": {
                        "$type": "CSharpCondition",
                        "CSharpCode": "//while out of range of Armory Worker....................................................\r\nbool result = false;\r\nint timeOut = -1;\r\ntry { timeOut = (int)G[\"GarrisonArmoryWorkerMoveLoopTimeOut\"]; } catch { timeOut = -1; }\r\nif (timeOut >= 0)\r\n{\r\n\ttimeOut++;\r\n\tG[\"GarrisonArmoryWorkerMoveLoopTimeOut\"] = timeOut;\r\n\tif (timeOut < 9)\r\n\t{\r\n\t\tUnitObject x = null;\r\n\t\tfloat z = 9999f;\r\n\t\tforeach (UnitObject u in Units)\r\n\t\t{\r\n\t\t\tint e = u.EntryID;\r\n\t\t\tif ((e == 89065) || (e == 89066)) { x = u; }\r\n\t\t}\r\n\t\tif (!object.ReferenceEquals(null, x)) \r\n\t\t{\r\n\t\t\tif (Vector3.Distance(Me.Position, x.Position) > 4) { result = true; }\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult = false;\r\n\t\t}\r\n\t}\r\n}\r\nreturn result;\r\n"
                      }
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Armory Worker Moves Loop (Follow until they are still)"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Armory Worker"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Armory"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Armory......................................................................\r\nstring thisName = \"Armory\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "G[\"GarrisonArmoryQuartermasterMoveLoopTimeOut\"] = (int)1;\r\n"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "UnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif ((e == 77377) || (e == 79815)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                    },
                    {
                      "$type": "CallBlock",
                      "Target": "CTM Star Pathfinding Algorithm"
                    },
                    {
                      "$type": "Wait",
                      "Delay": 0.4,
                      "DelayMax": 0.4
                    },
                    {
                      "$type": "If",
                      "IsExtendedInEditor": false,
                      "ActionsFalse": {
                        "Children": [],
                        "IsSpecialElement": true,
                        "SpecialElementName": "Else",
                        "GroupName": ""
                      },
                      "ActionsTrue": {
                        "Children": [
                          {
                            "$type": "CallBlock",
                            "Target": "Armory Quartermaster Moves Loop (Follow until they are still)"
                          }
                        ],
                        "IsExtendedInEditor": false,
                        "IsSpecialElement": true,
                        "SpecialElementName": "Then",
                        "GroupName": ""
                      },
                      "Condition": {
                        "$type": "CSharpCondition",
                        "CSharpCode": "//while out of range of Armory Quartermaster....................................................\r\nbool result = false;\r\nint timeOut = -1;\r\ntry { timeOut = (int)G[\"GarrisonArmoryQuartermasterMoveLoopTimeOut\"]; } catch { timeOut = -1; }\r\nif (timeOut >= 0)\r\n{\r\n\ttimeOut++;\r\n\tG[\"GarrisonArmoryQuartermasterMoveLoopTimeOut\"] = timeOut;\r\n\tif (timeOut < 9)\r\n\t{\r\n\t\tUnitObject x = null;\r\n\t\tfloat z = 9999f;\r\n\t\tforeach (UnitObject u in Units)\r\n\t\t{\r\n\t\t\tint e = u.EntryID;\r\n\t\t\tif ((e == 77377) || (e == 79815)) { x = u; }\r\n\t\t}\r\n\t\tif (!object.ReferenceEquals(null, x)) \r\n\t\t{\r\n\t\t\tif (Vector3.Distance(Me.Position, x.Position) > 4) { result = true; }\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult = false;\r\n\t\t}\r\n\t}\r\n}\r\nreturn result;\r\n"
                      }
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Armory Quartermaster Moves Loop (Follow until they are still)"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Armory Quartermaster"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Barracks"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "Comment",
                        "Text": "No Barracks?",
                        "Color": "255, 128, 255"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      },
                      {
                        "$type": "Comment",
                        "Text": "Arrived at Barracks"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we know the Vector3 for the Barracks Position...................................\r\nstring thisName = \"Barracks\";\r\nbool result = true;\r\ntry { G[\"GarrisonMoveTo\"] = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { result = false; }\r\nif (result) { Print(\"Vector3 for \"+thisName+\" is known.\"); } else { Print(\"Vector3 for \"+thisName+\" is not currently known.\"); }\r\nreturn result;\r\n\r\n\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Barracks"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Herb Garden"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "CSharpAction",
                        "CSharpCode": "string thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nstring thisName = \"\"; try { thisName = (string)G[\"GarrisonMoveToByName\"] ; } catch { thisName = \"\"; }\r\nif (thisFaction.Equals(\"\"))\r\n{\r\n\tPrintInfo(\"Error... G[\\\"GarrisonFaction\\\"] could not be read?\");\r\n}\r\nelse\r\n{\r\n\tif (thisLevel.Equals(\"\"))\r\n\t{\r\n\t\tPrintInfo(\"Error... G[\\\"GarrisonLevel\\\"] could not be read?\");\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"Error: G[\\\"Garrison\"+thisName+\"Position\\\"] could not be read? It should be defined in Block named 'Detect Faction and Garrison Level' in the section starting with: if ((thisFaction == \\\"\"+thisFaction+\"\\\") && (thisLevel == \\\"\"+thisLevel+\"\\\")) {\");\t\r\n\t}\r\n}\r\n\r\n"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//If we can read the initialized variable and set the Garrison MoveTo then............................\r\nbool result = true;\r\nVector3 v = new Vector3(0f,0f,0f);\r\nstring MoveToByName = \"Farm\";\r\nG[\"GarrisonMoveToByName\"] = MoveToByName;\r\ntry { v = (Vector3)G[\"Garrison\"+MoveToByName+\"Position\"]; } catch { result = false; }\r\nG[\"GarrisonMoveTo\"] = v;\r\nreturn result;\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Herb Garden"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Herb Garden"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Herb Garden......................................................................\r\nstring thisName = \"Herb Garden\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "UnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif ((e == 85514) || (e == 85783)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "CTM Star Pathfinding Algorithm"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Herb Garden Worker"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Mine"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "CSharpAction",
                        "CSharpCode": "string thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nstring thisName = \"\"; try { thisName = (string)G[\"GarrisonMoveToByName\"] ; } catch { thisName = \"\"; }\r\nif (thisFaction.Equals(\"\"))\r\n{\r\n\tPrintInfo(\"Error... G[\\\"GarrisonFaction\\\"] could not be read?\");\r\n}\r\nelse\r\n{\r\n\tif (thisLevel.Equals(\"\"))\r\n\t{\r\n\t\tPrintInfo(\"Error... G[\\\"GarrisonLevel\\\"] could not be read?\");\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"Error: G[\\\"Garrison\"+thisName+\"Position\\\"] could not be read? It should be defined in Block named 'Detect Faction and Garrison Level' in the section starting with: if ((thisFaction == \\\"\"+thisFaction+\"\\\") && (thisLevel == \\\"\"+thisLevel+\"\\\")) {\");\t\r\n\t}\r\n}\r\n\r\n"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      },
                      {
                        "$type": "CallBlock",
                        "Target": "Finalize Plot"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//If we can read the initialized variable and set the Garrison MoveTo then............................\r\nbool result = true;\r\nVector3 v = new Vector3(0f,0f,0f);\r\nstring MoveToByName = \"Mine\";\r\nG[\"GarrisonMoveToByName\"] = MoveToByName;\r\ntry { v = (Vector3)G[\"Garrison\"+MoveToByName+\"Position\"]; } catch { result = false; }\r\nG[\"GarrisonMoveTo\"] = v;\r\nreturn result;\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mine"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [],
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "Move To Mine"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//if we are at the Mine......................................................................\r\nstring thisName = \"Mine\";\r\nbool result = false;\r\nVector3 v = new Vector3(0f,0f,0f);\r\ntry { v = (Vector3)G[\"Garrison\"+thisName.Replace(\" \",\"\")+\"Position\"]; } catch { v = new Vector3(0f,0f,0f); }\r\nif (Vector3.Distance(Me.Position, v) < 40) { result = true; }\r\nif (result) { Print(\"Character is near \"+thisName); } else { Print(\"Character is not near \"+thisName); }\r\nreturn result;\r\n"
                  },
                  "IsNot": true
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "UnitObject x = null;\r\nfloat z = 9999f;\r\nforeach (UnitObject u in Units)\r\n{\r\n\tint e = u.EntryID;\r\n\tif ((e == 77730) || (e == 81688)) { x = u; }\r\n}\r\nif (!object.ReferenceEquals(null, x)) \r\n{\r\n\tG[\"GarrisonMoveTo\"] = x.Position;\r\n}\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "CTM Star Pathfinding Algorithm"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mine Worker"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "\r\n//if Me.Position is inside of the Mine, Walk out of the Mine.......................................\r\nint ZoneId = 0;\r\ntry { ZoneId = Me.ZoneId; } catch { ZoneId = 0; }\r\nif ((ZoneId == 7004)  || (ZoneId == 7078))\r\n{\r\n\tstring mmzt = ExecuteLua<string>(\"return GetMinimapZoneText()\");\r\n\tif (object.ReferenceEquals(null, mmzt)) { mmzt = \"\"; }\r\n\t//PrintInfo(\"MinimapZoneText=\"+mmzt+\"; IndexOf(\\\"ine\\\") = \"+mmzt.IndexOf(\"ine\"));\r\n\tif (mmzt.IndexOf(Me.Name) < 0) \r\n\t{\r\n\t\tint exitStrategy = -1;\r\n\t\tfloat j = 0;\r\n\t\tint yieldTime = 0;\r\n\t\tVector3[] v = new Vector3[] { };\r\n\t\tstring thisGName = \"GarrisonMineChainVectors\";\r\n\t\t//PrintInfo(\"Loading G[\\\"\" + thisGName + \"\\\"]\");\r\n\t\ttry { v = (Vector3[])G[thisGName]; }\r\n\t\tcatch { v = new Vector3[] { }; }\r\n\t\tif (v.Length > 0)\r\n\t\t{\r\n\t\t\t//Print(\"Vectors to visit = \" + v.Length);\r\n\t\t\tfor (int t = v.Length-1; t >= 0; t--)\r\n\t\t\t{\r\n\t\t\t\tif (Me.Distance2DTo(v[t]) < 6) { exitStrategy = t; break; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (exitStrategy > 0)\r\n\t\t{\r\n\t\t\tfor (int i = exitStrategy; i < v.Length; i++)\r\n\t\t\t{\r\n\t\t\t\tint stuck = 0;\r\n\t\t\t\twhile (Me.DistanceTo(v[i]) > 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tstuck++;\r\n\t\t\t\t\tj = Me.DistanceTo(v[i]);\r\n\t\t\t\t\t//PrintInfo(\"ctm distance=\" + j+\";i=\"+i+\";x=\"+v[i].X+\"; y=\"+v[i].Y+\"; z=\"+v[i].Z);\r\n\t\t\t\t\tCTM(v[i]);\r\n\t\t\t\t\tyieldTime = Convert.ToInt32(j * 25f);\r\n\t\t\t\t\tif (yieldTime < 50) { yieldTime = 50; }\r\n\t\t\t\t\t//Print(\"yieldTime=\" + yieldTime + \"; Distance=\" + j);\r\n\t\t\t\t\tyield return yieldTime;\r\n\t\t\t\t\tif (stuck > 99) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tPrintInfo(\"we are stuck :'(... (need for user intervention)\");\r\n\t\t\t\t\t\tyield return 1000; \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mine Exit"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "DisableCombat = true;\r\nMe.PetPassive();\r\nbool nyub = true;\r\ndouble banTime = 99999999.9;\r\nfloat j = 0f;\r\nint yieldTime = 100;\r\nVector3[] v = new Vector3[] { };\r\nstring thisGName = \"GarrsionSafePointsMineQuest\";\r\nPrintInfo(\"Loading G[\\\"\" + thisGName + \"\\\"]\");\r\ntry { v = (Vector3[])G[thisGName]; }\r\ncatch { v = new Vector3[] { }; }\r\nif (v.Length > 3)\r\n{\r\n\tint resetCounter = 0;\r\n\tPrint(\"Vectors to visit = \" + v.Length);\r\n\tfor (int i = 0; i < v.Length; i++)\r\n\t{\r\n\r\nforeach(UnitObject u in Units)\r\n{\r\n\tif ((u.EntryID == 81389) || (u.EntryID == 81362))\r\n\t{\r\n\t\tBanFromCombat(u, banTime);\r\n\t}\r\n}\r\n\r\n\t\tif ((i > 0) && (i < 4))\r\n\t\t{\r\n\t\t\tfloat dv0 = Me.Distance2DTo(v[0]);\r\n\t\t\tfloat dv3 = Me.Distance2DTo(v[3]);\r\n\t\t\tif ((i > 3) && (dv0 < dv3) && (resetCounter < 9)) \r\n\t\t\t{\r\n\t\t\t\tPrintInfo(\"dv0=\"+dv0+\"; dv3=\"+dv3+\"; reseting to zero....\");\r\n\t\t\t\ti = 0;\r\n\t\t\t\tresetCounter++;\r\n\t\t\t}\r\n\t\t}\r\n//\t\tif ((i > v.Length/1.5) && (nyub)) { nyub = false; DisableCombat = false; Me.PetAssist(); yield return 8000; DisableCombat = true; }\r\n\t\tif ((i > v.Length/1.5) && (nyub)) \r\n\t\t{ DisableCombat = false; nyub = false; foreach(UnitObject u in Units) { if ((u.EntryID == 81389) || (u.EntryID == 81362)) { if (Me.DistanceTo(u.Position) < 20) { UnbanFromCombat(u); } } } yield return 15000; DisableCombat = true; }\r\n\t\tint stuck = 0;\r\n\t\twhile (Me.DistanceTo(v[i]) > 2)\r\n\t\t{\r\n\t\t\tstuck++;\r\n\t\t\tj = Me.DistanceTo(v[i]);\r\n\t\t\tPrintInfo(\"ctm distance=\" + j+\";i=\"+i+\";x=\"+v[i].X+\"; y=\"+v[i].Y+\"; z=\"+v[i].Z);\r\n\t\t\tCTM(v[i]);\r\n\t\t\tyieldTime = Convert.ToInt32(j * 25f);\r\n\t\t\tif (yieldTime < 50) { yieldTime = 50; }\r\n\t\t\t//Print(\"yieldTime=\" + yieldTime + \"; Distance=\" + j);\r\n\t\t\tyield return yieldTime;\r\n\t\t\tif (stuck > 99) \r\n\t\t\t{\r\n\t\t\t\tPrintInfo(\"we are stuck :'(... (need for user intervention)\");\r\n\t\t\t\tyield return 1000; \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nDisableCombat = false;\r\nyield return 12000;\r\nDisableCombat = true;\r\n\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Move To Mine (To Boss From Entrance)"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "float j = 0f;\r\nint yieldTime = 100;\r\nVector3[] v = new Vector3[] { };\r\nstring thisGName = \"GarrsionSafePointsMineQuest\";\r\nPrintInfo(\"Loading G[\\\"\" + thisGName + \"\\\"]\");\r\ntry { v = (Vector3[])G[thisGName]; }\r\ncatch { v = new Vector3[] { }; }\r\nif (v.Length > 0)\r\n{\r\n\tPrint(\"Vectors to visit = \" + v.Length);\r\n\tfor (int i = v.Length-1; i >= 0; i--)\r\n\t{\r\n\t\tint stuck = 0;\r\n\t\twhile (Me.DistanceTo(v[i]) > 2)\r\n\t\t{\r\n\t\t\tstuck++;\r\n\t\t\tj = Me.DistanceTo(v[i]);\r\n\t\t\tPrintInfo(\"ctm distance=\" + j+\";i=\"+i+\";x=\"+v[i].X+\"; y=\"+v[i].Y+\"; z=\"+v[i].Z);\r\n\t\t\tCTM(v[i]);\r\n\t\t\tyieldTime = Convert.ToInt32(j * 25f);\r\n\t\t\tif (yieldTime < 50) { yieldTime = 50; }\r\n\t\t\t//Print(\"yieldTime=\" + yieldTime + \"; Distance=\" + j);\r\n\t\t\tyield return yieldTime;\r\n\t\t\tif (stuck > 99) \r\n\t\t\t{\r\n\t\t\t\tPrintInfo(\"we are stuck :'(... (need for user intervention)\");\r\n\t\t\t\tyield return 1000; \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nDisableCombat = false;\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Move To Mine (To Entrance From Boss)"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Mine Boss"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "Comment",
                  "Text": "Move To Fishing Shack"
                },
                {
                  "$type": "Comment",
                  "IsInfo": false,
                  "Text": "Move from any reasonable unobstructed spot in the Garrison to any destination. (Vector3 postion)"
                },
                {
                  "$type": "If",
                  "IsExtendedInEditor": false,
                  "ActionsFalse": {
                    "Children": [
                      {
                        "$type": "CSharpAction",
                        "CSharpCode": "string thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nstring thisName = \"\"; try { thisName = (string)G[\"GarrisonMoveToByName\"] ; } catch { thisName = \"\"; }\r\nif (thisFaction.Equals(\"\"))\r\n{\r\n\tPrintInfo(\"Error... G[\\\"GarrisonFaction\\\"] could not be read?\");\r\n}\r\nelse\r\n{\r\n\tif (thisLevel.Equals(\"\"))\r\n\t{\r\n\t\tPrintInfo(\"Error... G[\\\"GarrisonLevel\\\"] could not be read?\");\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\tPrintInfo(\"Error: G[\\\"Garrison\"+thisName+\"Position\\\"] could not be read? It should be defined in Block named 'Detect Faction and Garrison Level' in the section starting with: if ((thisFaction == \\\"\"+thisFaction+\"\\\") && (thisLevel == \\\"\"+thisLevel+\"\\\")) {\");\t\r\n\t}\r\n}\r\n\r\n"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Else",
                    "GroupName": ""
                  },
                  "ActionsTrue": {
                    "Children": [
                      {
                        "$type": "CallBlock",
                        "Target": "CTM Star Pathfinding Algorithm"
                      }
                    ],
                    "IsExtendedInEditor": false,
                    "IsSpecialElement": true,
                    "SpecialElementName": "Then",
                    "GroupName": ""
                  },
                  "Condition": {
                    "$type": "CSharpCondition",
                    "CSharpCode": "//If we can read the initialized variable and set the Garrison MoveTo then............................\r\nbool result = true;\r\nVector3 v = new Vector3(0f,0f,0f);\r\nstring MoveToByName = \"FishingShack\";\r\nG[\"GarrisonMoveToByName\"] = MoveToByName;\r\ntry { v = (Vector3)G[\"Garrison\"+MoveToByName+\"Position\"]; } catch { result = false; }\r\nG[\"GarrisonMoveTo\"] = v;\r\nreturn result;\r\n"
                  }
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Move To Fishing Shack"
            }
          ],
          "IsExtendedInEditor": false,
          "GroupName": "Moves"
        },
        {
          "$type": "ActionSequence",
          "Children": [
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "GameObject x = null;\r\nfloat f = 9999f;\r\nforeach (GameObject o in GameObjects)\r\n{\r\n\tif (o.GameObjectType == WoWGameObjectType.GarrisonBuilding) \r\n\t{\r\n\t\tint e = o.EntryID;\r\n\t\tfloat d = o.Distance;\r\n\t\tif (f > d) { x = o; f = d; }\r\n\t}\r\n}\r\n\r\nif (!object.ReferenceEquals(null, x))\r\n{\r\n\tG[\"GarrisonClosestBuildingEntryID\"] = x.EntryID;\r\n}"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Find Closest Building EntryID"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Initialize"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Test For Moving Out Of Mining SubZone"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Trading Post Trader"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Herb Garden Do"
                },
                {
                  "$type": "EndScript"
                },
                {
                  "$type": "ExecuteLua",
                  "LuaCode": "print(GetMinimapZoneText())"
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "PrintInfo(\"\"+Me.ZoneId);\r\n"
                },
                {
                  "$type": "ExecuteLua",
                  "LuaCode": "local spell, _, _, _, _, endTime = UnitCastingInfo('player') if endTime == nil then endTime = GetTime() end print(tostring(math.floor(tonumber((endTime/1000) - GetTime())*1000)))"
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "double d = ExecuteLua<double>(\"return GetTime()\");\r\nPrintInfo(\"\"+d);\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Armory"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Trading Post"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Armory Quartermaster"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Mailbox"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Small Plot 1"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Armory Worker"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Garrison Cache"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Command Table"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Trader"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move Away From Trader"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Mine"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Herb Garden"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Medium Plot 2"
                },
                {
                  "$type": "CallBlock",
                  "Target": "Move To Fishing Shack"
                },
                {
                  "$type": "CSharpAction",
                  "CSharpCode": "Vector3 v = new Vector3(1867.579f,300.9058f,81.66039f);\r\nG[\"GarrisonMoveTo\"] = v;\r\n"
                },
                {
                  "$type": "CallBlock",
                  "Target": "CTM Star Pathfinding Algorithm"
                },
                {
                  "$type": "EndScript"
                },
                {
                  "$type": "CallBlock",
                  "Target": "A Star Pathfinding Algorithm"
                }
              ],
              "IsExtendedInEditor": false,
              "GroupName": "Alpha Codepath (Enabled When Developing)"
            },
            {
              "$type": "ActionSequence",
              "Children": [
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "LocalPlayer me = null;\r\ntry { me = Me; } catch { me = null; }\r\nif (!(object.ReferenceEquals(null, me)))\r\n{\r\n\t\t\tstring s = \"\";\r\n\t\t\ttry {s = me.Position.ToString(); } catch { s = \"\"; }\r\n\t\t\tif (!(s.Equals(\"\"))) \r\n\t\t\t{\r\n\t\t\t\ts = \"new Vector3\"+s.Replace(\"{\",\"(\").Replace(\"}\",\"f)\").Replace(\" \",\"f, \")+\";\";\r\n\t\t\t\tPrintInfo(s); \r\n\t\t\t}\r\n\r\n}\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Print Pathing Vector"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "LocalPlayer me = null;\r\ntry { me = Me; } catch { me = null; }\r\nif (!(object.ReferenceEquals(null, me)))\r\n{\r\n\tfloat od = 99999f;\r\n\tVector3 lastPosition = new Vector3(0f,0f,0f);\r\n\twhile (true)\r\n\t{\r\n\t\tif (Vector3.Distance(me.Position, lastPosition) > 3f)\r\n\t\t{\r\n\t\t\tstring s = \"\";\r\n\t\t\ttry {s = me.Position.ToString(); } catch { s = \"\"; }\r\n\t\t\tif (!(s.Equals(\"\"))) \r\n\t\t\t{\r\n\t\t\t\ts = \"new Vector3\"+s.Replace(\"{\",\"(\").Replace(\"}\",\"f)\").Replace(\" \",\"f, \")+\",\";\r\n\t\t\t\tlastPosition = me.Position;\r\n\t\t\t\tPrintInfo(s); \r\n\t\t\t}\r\n\t\t}\r\n\t\tyield return 100;\r\n\t}\r\n\t\r\n}\r\n\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "Print Pathing Vectors (Enable to run in log printing mode)"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Mine Quest......................................................................\r\nVector3[] a = new Vector3[] {new Vector3(1871.009f, 75.07013f, 75.94249f), new Vector3(1869.431f, 72.63181f, 74.6312f), new Vector3(1867.845f, 69.89822f, 73.05193f), new Vector3(1871.009f, 75.07013f, 75.94249f), new Vector3(1866.83f, 67.31984f, 71.74754f), new Vector3(1865.754f, 64.36681f, 70.37579f), new Vector3(1864.974f, 61.37049f, 69.05899f), new Vector3(1864.685f, 58.59255f, 67.64967f), new Vector3(1864.702f, 55.38694f, 65.7918f), new Vector3(1865.119f, 52.76088f, 64.35799f), new Vector3(1866.089f, 49.29193f, 63.90089f), new Vector3(1868.241f, 46.60238f, 63.68507f), new Vector3(1871.172f, 45.12229f, 62.99106f), new Vector3(1874.074f, 44.8251f, 61.3547f), new Vector3(1876.935f, 44.86893f, 59.50418f), new Vector3(1879.647f, 45.39782f, 57.70285f), new Vector3(1882.874f, 46.13826f, 56.05198f), new Vector3(1885.984f, 46.85907f, 54.58384f), new Vector3(1888.957f, 47.54827f, 52.9756f), new Vector3(1891.712f, 48.18688f, 51.51201f), new Vector3(1899.517f, 49.47209f, 49.06782f), new Vector3(1903.395f, 49.22329f, 49.75146f), new Vector3(1906.414f, 49.03922f, 49.75146f), new Vector3(1909.432f, 48.85516f, 49.74376f), new Vector3(1912.736f, 48.63679f, 49.51293f), new Vector3(1915.957f, 48.45294f, 47.02279f), new Vector3(1918.405f, 48.35482f, 45.0845f), new Vector3(1921.608f, 48.30601f, 44.74797f), new Vector3(1924.209f, 50.36054f, 44.8308f), new Vector3(1924.165f, 53.59408f, 44.81254f), new Vector3(1924.091f, 56.91125f, 43.31042f), new Vector3(1924.019f, 59.43721f, 41.34354f), new Vector3(1923.94f, 61.8649f, 39.44322f), new Vector3(1923.758f, 64.93226f, 38.14721f), new Vector3(1923.516f, 67.92554f, 38.18089f), new Vector3(1923.142f, 71.5038f, 37.4004f), new Vector3(1922.744f, 74.67088f, 34.93923f), new Vector3(1922.051f, 77.82185f, 32.64568f), new Vector3(1919.681f, 83.84158f, 31.21749f), new Vector3(1919.746f, 87.33355f, 30.13264f), new Vector3(1919.752f, 90.16853f, 29.08252f), new Vector3(1919.472f, 93.7401f, 28.07438f), new Vector3(1918.984f, 97.46429f, 27.26348f), new Vector3(1918.212f, 100.3881f, 26.86914f), new Vector3(1916.744f, 103.3807f, 26.79086f), new Vector3(1914.171f, 106.1313f, 26.60739f), new Vector3(1911.745f, 108.0964f, 26.55452f), new Vector3(1909.185f, 110.0302f, 25.8454f), new Vector3(1906.344f, 111.5167f, 25.35493f), new Vector3(1903.51f, 113.2114f, 24.89196f), new Vector3(1900.686f, 114.367f, 24.53609f), new Vector3(1897.791f, 115.2572f, 24.2494f), new Vector3(1893.877f, 115.8248f, 24.00558f), new Vector3(1890.538f, 116.0204f, 23.83034f), new Vector3(1887.319f, 116.0266f, 23.72423f), new Vector3(1870.126f, 122.3894f, 21.91365f), new Vector3(1870.414f, 119.3322f, 21.43641f)};\r\n\r\nVector3[] h = new Vector3[] {new Vector3(5471.771f, 4439.273f, 145.0394f), new Vector3(5470.059f, 4436.581f, 145.3903f), new Vector3(5468.055f, 4433.78f, 145.4367f), new Vector3(5466.041f, 4430.88f, 145.6613f), new Vector3(5464.121f, 4427.988f, 143.7879f), new Vector3(5462.27f, 4425.075f, 142.2501f), new Vector3(5460.421f, 4422.03f, 140.783f), new Vector3(5458.71f, 4419.089f, 139.0584f), new Vector3(5457.065f, 4415.952f, 137.3235f), new Vector3(5455.867f, 4412.735f, 135.7426f), new Vector3(5455.795f, 4409.203f, 134.1144f), new Vector3(5456.568f, 4405.771f, 132.5426f), new Vector3(5457.582f, 4402.516f, 131.0376f), new Vector3(5458.86f, 4399.222f, 129.3766f), new Vector3(5460.576f, 4396.152f, 127.4262f), new Vector3(5462.737f, 4393.368f, 125.7774f), new Vector3(5465.231f, 4391.066f, 125.0455f), new Vector3(5468.583f, 4390.125f, 124.6913f), new Vector3(5471.958f, 4391.054f, 123.5005f), new Vector3(5474.282f, 4392.229f, 121.7702f), new Vector3(5476.513f, 4393.625f, 119.8956f), new Vector3(5479.447f, 4395.534f, 117.9497f), new Vector3(5482.187f, 4397.657f, 116.454f), new Vector3(5484.235f, 4399.264f, 114.9531f), new Vector3(5486.3f, 4400.874f, 113.4399f), new Vector3(5489.089f, 4402.906f, 111.8867f), new Vector3(5491.953f, 4404.931f, 110.6589f), new Vector3(5494.942f, 4406.881f, 110.357f), new Vector3(5497.876f, 4408.67f, 110.7761f), new Vector3(5500.891f, 4410.392f, 110.7761f), new Vector3(5504.02f, 4412.006f, 110.7422f), new Vector3(5507.11f, 4413.574f, 109.2794f), new Vector3(5509.506f, 4414.792f, 107.1687f), new Vector3(5512.531f, 4416.395f, 105.7478f), new Vector3(5515.095f, 4418.415f, 105.7838f), new Vector3(5513.768f, 4421.66f, 105.869f), new Vector3(5512.022f, 4424.701f, 104.6713f), new Vector3(5510.647f, 4426.97f, 102.6104f), new Vector3(5509.277f, 4429.118f, 100.6157f), new Vector3(5507.889f, 4431.387f, 99.1536f), new Vector3(5506.039f, 4434.341f, 99.19443f), new Vector3(5504.153f, 4437.265f, 98.60703f), new Vector3(5502.684f, 4439.499f, 96.53793f), new Vector3(5501.166f, 4441.649f, 94.53558f), new Vector3(5499.146f, 4444.508f, 93.14561f), new Vector3(5497.131f, 4447.327f, 92.28147f), new Vector3(5495.022f, 4450.076f, 91.29391f), new Vector3(5493.255f, 4452.333f, 90.3987f), new Vector3(5491.232f, 4454.715f, 89.32126f), new Vector3(5489.186f, 4456.86f, 88.69811f), new Vector3(5486.935f, 4458.996f, 88.03901f), new Vector3(5484.567f, 4460.912f, 88.14787f), new Vector3(5482.136f, 4462.715f, 87.80112f), new Vector3(5479.419f, 4464.146f, 87.62045f), new Vector3(5476.553f, 4465.112f, 87.30737f), new Vector3(5473.481f, 4465.481f, 86.81715f), new Vector3(5470.443f, 4465.711f, 86.65769f), new Vector3(5467.399f, 4465.391f, 86.14542f), new Vector3(5464.426f, 4464.841f, 85.83947f), new Vector3(5461.484f, 4464.071f, 85.60744f), new Vector3(5458.58f, 4463.093f, 85.34512f), new Vector3(5455.675f, 4462.037f, 85.05613f), new Vector3(5452.801f, 4460.989f, 84.79993f), new Vector3(5449.931f, 4459.942f, 84.75921f), new Vector3(5447.053f, 4458.905f, 84.44816f), new Vector3(5444.176f, 4457.892f, 84.35523f), new Vector3(5441.335f, 4456.795f, 83.64896f), new Vector3(5438.541f, 4455.995f, 82.6573f), new Vector3(5435.12f, 4455.315f, 82.4638f), new Vector3(5431.601f, 4454.759f, 82.33651f), new Vector3(5428.18f, 4454.257f, 82.19381f), new Vector3(5424.636f, 4453.973f, 82.83025f), new Vector3(5421.218f, 4454.061f, 83.67375f), new Vector3(5417.779f, 4454.893f, 83.62673f), new Vector3(5414.62f, 4456.201f, 83.47842f), new Vector3(5411.563f, 4457.931f, 83.5236f), new Vector3(5408.684f, 4459.979f, 83.45634f), new Vector3(5406.109f, 4462.379f, 82.58272f), new Vector3(5403.948f, 4465.021f, 81.92673f), new Vector3(5401.751f, 4467.791f, 81.11318f), new Vector3(5399.559f, 4470.555f, 80.45723f)};\r\n\r\nif (Me.IsAlliance) { G[\"GarrsionSafePointsMineQuest\"] = a; }\r\nif (Me.IsHorde) { G[\"GarrsionSafePointsMineQuest\"] = h; }\r\n\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Horde Version 1 Mine......................................................................\r\nVector3[] v = new Vector3[] {new Vector3(5469.364f, 4435.782f, 145.4193f), new Vector3(5467.709f, 4433.21f, 145.4357f), new Vector3(5465.645f, 4430.269f, 145.464f), new Vector3(5463.985f, 4427.712f, 143.5858f), new Vector3(5462.197f, 4424.956f, 142.1937f), new Vector3(5460.479f, 4422.307f, 140.9217f), new Vector3(5458.494f, 4419.158f, 139.0769f), new Vector3(5457.035f, 4416.829f, 137.7521f), new Vector3(5455.939f, 4414.036f, 136.3518f), new Vector3(5455.46f, 4410.948f, 134.8612f), new Vector3(5455.609f, 4408.082f, 133.617f), new Vector3(5456.285f, 4404.876f, 132.2388f), new Vector3(5457.42f, 4401.544f, 130.7174f), new Vector3(5458.705f, 4398.74f, 129.235f), new Vector3(5460.272f, 4395.878f, 127.8811f), new Vector3(5461.832f, 4393.344f, 126.0612f), new Vector3(5463.86f, 4391.23f, 124.9245f), new Vector3(5466.985f, 4389.679f, 124.8996f), new Vector3(5470.427f, 4390.192f, 124.2437f), new Vector3(5473.245f, 4390.962f, 122.9193f), new Vector3(5475.792f, 4392.087f, 121.0756f), new Vector3(5478.198f, 4393.257f, 119.3956f), new Vector3(5480.559f, 4394.79f, 117.8552f), new Vector3(5483.48f, 4397.167f, 116.1685f), new Vector3(5486.083f, 4399.539f, 114.0537f), new Vector3(5488.616f, 4401.893f, 112.3737f), new Vector3(5491.44f, 4404.371f, 110.8523f), new Vector3(5494.13f, 4406.494f, 110.1245f), new Vector3(5497.39f, 4408.6f, 110.7757f), new Vector3(5500.892f, 4410.537f, 110.7757f), new Vector3(5504.092f, 4412.113f, 110.7403f), new Vector3(5506.775f, 4413.501f, 109.5336f), new Vector3(5509.423f, 4414.918f, 107.174f), new Vector3(5512.317f, 4416.471f, 105.7469f), new Vector3(5513.32f, 4419.627f, 105.8606f), new Vector3(5511.945f, 4422.65f, 105.7396f), new Vector3(5510.628f, 4425.207f, 103.7737f), new Vector3(5509.522f, 4427.35f, 101.9022f), new Vector3(5508.341f, 4429.68f, 99.86343f), new Vector3(5506.576f, 4432.653f, 99.17178f), new Vector3(5504.974f, 4435.374f, 99.20968f), new Vector3(5503.434f, 4438.12f, 97.75492f), new Vector3(5501.814f, 4440.988f, 95.21616f), new Vector3(5499.919f, 4443.978f, 93.33544f), new Vector3(5498.227f, 4446.877f, 92.48391f), new Vector3(5497.052f, 4449.923f, 91.93284f), new Vector3(5495.718f, 4452.77f, 90.68879f), new Vector3(5493.735f, 4455.504f, 89.6078f), new Vector3(5491.759f, 4458.259f, 88.85529f), new Vector3(5489.369f, 4460.641f, 88.57606f), new Vector3(5486.868f, 4462.672f, 88.32352f), new Vector3(5483.655f, 4464.312f, 87.89648f), new Vector3(5480.378f, 4465.576f, 87.55297f), new Vector3(5477.506f, 4466.728f, 87.48888f), new Vector3(5474.177f, 4467.629f, 86.94582f), new Vector3(5470.595f, 4468.093f, 86.41511f), new Vector3(5467.56f, 4468.429f, 85.69123f), new Vector3(5464.43f, 4468.769f, 85.37092f), new Vector3(5460.751f, 4469.944f, 85.0537f), new Vector3(5458.051f, 4471.593f, 84.79303f), new Vector3(5455.233f, 4469.664f, 84.61028f), new Vector3(5453.893f, 4466.174f, 84.60437f), new Vector3(5452.787f, 4463.384f, 84.716f), new Vector3(5450.124f, 4460.882f, 84.87463f), new Vector3(5447.4f, 4459.298f, 84.47734f), new Vector3(5444.582f, 4457.918f, 84.40874f), new Vector3(5440.923f, 4456.389f, 83.47507f), new Vector3(5438.052f, 4455.516f, 82.87453f), new Vector3(5434.789f, 4454.605f, 82.76022f), new Vector3(5430.867f, 4454.149f, 82.31117f), new Vector3(5427.805f, 4453.995f, 82.19368f), new Vector3(5424.784f, 4453.938f, 82.76484f), new Vector3(5421.701f, 4454.185f, 83.7401f), new Vector3(5418.341f, 4455.05f, 83.75278f), new Vector3(5415.581f, 4456.36f, 83.79276f), new Vector3(5412.161f, 4458.457f, 83.64718f), new Vector3(5409.401f, 4460.583f, 83.31355f), new Vector3(5407.051f, 4462.538f, 82.84441f), new Vector3(5404.594f, 4464.786f, 82.30341f), new Vector3(5402.333f, 4467.264f, 81.43182f), new Vector3(5401.066f, 4470.12f, 81.07198f), new Vector3(5401.459f, 4474.152f, 80.56437f), new Vector3(5402.718f, 4477.905f, 79.73697f), new Vector3(5404.194f, 4480.707f, 78.81098f), new Vector3(5405.607f, 4483.47f, 77.68137f), new Vector3(5406.897f, 4486.202f, 76.33192f), new Vector3(5408.008f, 4489.29f, 75.11727f), new Vector3(5408.818f, 4492.341f, 74.10199f), new Vector3(5409.548f, 4495.304f, 73.4203f), new Vector3(5410.594f, 4499.545f, 72.22742f), new Vector3(5411.297f, 4502.511f, 71.46159f), new Vector3(5410.721f, 4499.532f, 72.20403f), new Vector3(5409.951f, 4496.46f, 73.11559f), new Vector3(5409.14f, 4493.561f, 73.9259f), new Vector3(5408.167f, 4490.701f, 74.83209f), new Vector3(5407.191f, 4487.87f, 75.75459f), new Vector3(5406.098f, 4484.646f, 76.97831f), new Vector3(5405.034f, 4481.778f, 78.19462f), new Vector3(5403.822f, 4479.262f, 79.31793f), new Vector3(5401.835f, 4476.38f, 80.04203f), new Vector3(5399.472f, 4474.45f, 80.09151f), new Vector3(5396.406f, 4474.201f, 79.39851f), new Vector3(5393.938f, 4475.795f, 78.57623f), new Vector3(5390.935f, 4477.617f, 78.95421f), new Vector3(5388.143f, 4479.65f, 78.23627f), new Vector3(5385.949f, 4481.815f, 77.57465f), new Vector3(5384.294f, 4484.372f, 76.92227f), new Vector3(5382.923f, 4487.105f, 76.12717f), new Vector3(5381.513f, 4489.95f, 75.28896f), new Vector3(5379.306f, 4493.309f, 74.28341f), new Vector3(5380.819f, 4490.247f, 75.22263f), new Vector3(5382.508f, 4487.282f, 76.13231f), new Vector3(5384.058f, 4484.699f, 76.83491f), new Vector3(5385.787f, 4482.053f, 77.50412f), new Vector3(5387.541f, 4479.616f, 78.19969f), new Vector3(5389.572f, 4477.419f, 78.96889f), new Vector3(5392.011f, 4474.916f, 79.21821f), new Vector3(5394.068f, 4472.463f, 79.70779f), new Vector3(5395.859f, 4469.646f, 80.43811f), new Vector3(5396.149f, 4466.648f, 81.33925f), new Vector3(5394.933f, 4463.184f, 82.68077f), new Vector3(5392.309f, 4461.02f, 83.14581f), new Vector3(5395.628f, 4460.475f, 83.08728f), new Vector3(5399.475f, 4459.446f, 82.66637f), new Vector3(5402.53f, 4457.635f, 83.23559f), new Vector3(5403.314f, 4453.823f, 83.69943f), new Vector3(5402.147f, 4451.041f, 83.68664f), new Vector3(5401.659f, 4447.993f, 83.70567f), new Vector3(5402.814f, 4445.186f, 83.82084f), new Vector3(5405.633f, 4444.103f, 84.02017f), new Vector3(5408.792f, 4443.283f, 83.78538f), new Vector3(5411.852f, 4442.911f, 83.63396f), new Vector3(5415.857f, 4443.621f, 83.24052f), new Vector3(5418.987f, 4444.586f, 83.26141f), new Vector3(5422.214f, 4444.979f, 83.23689f), new Vector3(5425.883f, 4445.915f, 83.08497f), new Vector3(5428.912f, 4447.498f, 82.93971f), new Vector3(5431.67f, 4449.174f, 82.94823f), new Vector3(5434.472f, 4450.481f, 82.91502f), new Vector3(5437.417f, 4451.484f, 82.91784f), new Vector3(5440.254f, 4452.714f, 82.81775f), new Vector3(5443.037f, 4454.002f, 83.38954f), new Vector3(5445.779f, 4455.433f, 84.24443f), new Vector3(5448.499f, 4456.889f, 84.501f), new Vector3(5451.229f, 4458.287f, 84.72447f), new Vector3(5453.943f, 4459.652f, 84.86319f), new Vector3(5456.837f, 4460.744f, 85.0649f), new Vector3(5459.743f, 4461.628f, 85.25499f), new Vector3(5463.198f, 4461.761f, 85.65852f), new Vector3(5467.115f, 4461.605f, 86.2245f), new Vector3(5470.196f, 4461.749f, 86.58337f), new Vector3(5473.403f, 4461.924f, 87.12613f), new Vector3(5476.814f, 4461.907f, 87.69234f), new Vector3(5479.694f, 4460.932f, 87.78501f), new Vector3(5482.295f, 4459.148f, 87.50218f), new Vector3(5484.599f, 4457.026f, 88.07658f), new Vector3(5486.316f, 4454.498f, 88.45576f), new Vector3(5488.172f, 4451.797f, 89.27305f), new Vector3(5489.587f, 4449.287f, 90.33655f), new Vector3(5490.466f, 4446.25f, 91.55642f), new Vector3(5490.867f, 4443.023f, 92.38792f), new Vector3(5490.822f, 4439.938f, 92.87186f), new Vector3(5490.719f, 4436.892f, 93.19073f), new Vector3(5490.61f, 4433.836f, 93.48006f), new Vector3(5490.639f, 4430.652f, 93.96362f), new Vector3(5491.014f, 4427.621f, 94.5075f), new Vector3(5491.729f, 4424.518f, 94.81775f), new Vector3(5492.579f, 4421.439f, 94.78901f), new Vector3(5493.824f, 4418.209f, 94.80991f), new Vector3(5496.259f, 4415.33f, 94.05483f), new Vector3(5499.511f, 4414.863f, 93.70451f), new Vector3(5502.169f, 4416.604f, 93.58234f), new Vector3(5502.546f, 4419.683f, 93.51254f), new Vector3(5502.041f, 4422.672f, 93.66695f), new Vector3(5500.929f, 4425.595f, 93.78679f), new Vector3(5499.376f, 4428.506f, 94.04181f), new Vector3(5497.708f, 4431.176f, 94.3998f), new Vector3(5495.775f, 4434.653f, 94.29411f), new Vector3(5495.148f, 4438.428f, 94.02412f), new Vector3(5495.077f, 4441.415f, 93.52511f), new Vector3(5495.856f, 4444.737f, 92.78287f), new Vector3(5497.266f, 4447.681f, 92.41935f), new Vector3(5499.623f, 4445.841f, 92.86488f), new Vector3(5501.683f, 4443.544f, 93.59764f), new Vector3(5503.912f, 4441.126f, 95.93789f), new Vector3(5505f, 4438.993f, 97.79068f), new Vector3(5506.076f, 4436.552f, 99.25153f), new Vector3(5507.357f, 4433.736f, 99.18584f), new Vector3(5508.887f, 4430.559f, 99.49563f), new Vector3(5510.439f, 4427.408f, 102.23f), new Vector3(5511.912f, 4424.502f, 104.7556f), new Vector3(5513.123f, 4421.659f, 105.8424f), new Vector3(5514.161f, 4418.754f, 105.8159f), new Vector3(5512.74f, 4415.499f, 105.7462f), new Vector3(5510.133f, 4413.715f, 107.185f), new Vector3(5507.511f, 4412.234f, 109.5288f), new Vector3(5504.731f, 4410.993f, 110.7482f), new Vector3(5501.912f, 4409.857f, 110.7738f), new Vector3(5499.015f, 4408.695f, 110.7738f), new Vector3(5496.119f, 4407.606f, 110.5556f), new Vector3(5493.408f, 4406.238f, 110.2175f), new Vector3(5490.811f, 4404.697f, 110.8989f), new Vector3(5488.34f, 4402.943f, 111.9405f), new Vector3(5485.92f, 4401.104f, 113.5214f), new Vector3(5483.359f, 4399.033f, 115.5464f), new Vector3(5481.17f, 4397.154f, 117.0128f), new Vector3(5478.66f, 4395.468f, 118.503f), new Vector3(5475.984f, 4393.797f, 120.2734f), new Vector3(5473.294f, 4392.345f, 122.4039f), new Vector3(5470.465f, 4391.345f, 124.2431f), new Vector3(5467.324f, 4391.233f, 124.8316f), new Vector3(5464.368f, 4392.147f, 124.9779f), new Vector3(5461.678f, 4394.105f, 126.2334f), new Vector3(5459.545f, 4396.859f, 127.9619f), new Vector3(5458.107f, 4399.189f, 129.4462f), new Vector3(5456.944f, 4402.069f, 131.0015f), new Vector3(5456.315f, 4404.874f, 132.2371f), new Vector3(5456.009f, 4408.031f, 133.591f), new Vector3(5456.146f, 4411.019f, 134.9231f), new Vector3(5456.584f, 4414.016f, 136.3123f), new Vector3(5457.549f, 4416.886f, 137.8177f), new Vector3(5459.116f, 4419.705f, 139.4328f), new Vector3(5461.849f, 4424.134f, 141.8057f), new Vector3(5463.612f, 4426.584f, 142.9562f), new Vector3(5465.704f, 4429.475f, 145.1875f), new Vector3(5467.398f, 4431.954f, 145.6339f), new Vector3(5469.417f, 4435.177f, 145.4347f), new Vector3(5470.953f, 4437.778f, 145.348f), new Vector3(5472.348f, 4440.407f, 144.7376f), new Vector3(5473.819f, 4443.565f, 144.6765f)};\r\n\r\nG[\"GarrsionSafePointsHordeV1Plot59Mine\"] = v;\r\n\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Horde Version 2 Mine......................................................................\r\nVector3[] v = new Vector3[] {new Vector3(5469.416f, 4435.311f, 145.4286f), new Vector3(5467.422f, 4432.7f, 145.585f), new Vector3(5465.425f, 4430f, 145.3153f), new Vector3(5463.722f, 4427.563f, 143.4983f), new Vector3(5462.218f, 4425.198f, 142.3085f), new Vector3(5460.625f, 4422.685f, 141.093f), new Vector3(5458.848f, 4419.375f, 139.236f), new Vector3(5457.707f, 4416.715f, 137.7136f), new Vector3(5456.543f, 4414.006f, 136.3133f), new Vector3(5455.886f, 4410.665f, 134.7724f), new Vector3(5455.859f, 4407.479f, 133.3598f), new Vector3(5456.391f, 4404.11f, 131.9092f), new Vector3(5457.342f, 4401.338f, 130.6492f), new Vector3(5458.79f, 4398.54f, 129.1304f), new Vector3(5460.813f, 4395.493f, 127.0639f), new Vector3(5463.104f, 4392.561f, 125.4937f), new Vector3(5465.655f, 4390.093f, 124.9253f), new Vector3(5469.162f, 4389.652f, 124.6381f), new Vector3(5472.724f, 4390.841f, 123.2219f), new Vector3(5475.518f, 4392.059f, 121.2412f), new Vector3(5478.047f, 4393.423f, 119.3913f), new Vector3(5480.392f, 4394.893f, 117.838f), new Vector3(5483.336f, 4397.177f, 116.2006f), new Vector3(5485.517f, 4399.066f, 114.5293f), new Vector3(5487.666f, 4401.029f, 112.8642f), new Vector3(5489.881f, 4403.097f, 111.661f), new Vector3(5492.453f, 4404.983f, 110.3188f), new Vector3(5495.277f, 4406.746f, 110.5524f), new Vector3(5498.234f, 4408.469f, 110.7754f), new Vector3(5500.964f, 4410.018f, 110.7754f), new Vector3(5503.871f, 4411.488f, 110.7482f), new Vector3(5507.309f, 4413.115f, 109.3161f), new Vector3(5509.738f, 4414.257f, 107.2445f), new Vector3(5512.293f, 4415.515f, 105.7426f), new Vector3(5514.223f, 4417.936f, 105.7721f), new Vector3(5512.838f, 4421.423f, 105.8413f), new Vector3(5511.161f, 4424.664f, 104.3466f), new Vector3(5510.006f, 4426.863f, 102.429f), new Vector3(5508.792f, 4429.206f, 100.382f), new Vector3(5507.46f, 4431.786f, 99.15892f), new Vector3(5505.944f, 4434.701f, 99.19977f), new Vector3(5503.82f, 4436.847f, 98.75289f), new Vector3(5501.976f, 4439.405f, 96.3358f), new Vector3(5500.635f, 4441.551f, 94.42944f), new Vector3(5499.115f, 4444.033f, 93.25452f), new Vector3(5497.669f, 4447.196f, 92.40575f), new Vector3(5496.671f, 4450.383f, 91.70192f), new Vector3(5495.929f, 4453.456f, 90.54745f), new Vector3(5495.877f, 4456.489f, 89.79498f), new Vector3(5496.094f, 4459.527f, 89.3416f), new Vector3(5496.643f, 4462.773f, 89.12293f), new Vector3(5497.559f, 4465.8f, 88.73232f), new Vector3(5498.255f, 4468.703f, 88.36996f), new Vector3(5498.92f, 4471.612f, 88.03326f), new Vector3(5499.614f, 4474.646f, 87.66782f), new Vector3(5500.312f, 4477.697f, 87.2803f), new Vector3(5500.893f, 4480.94f, 86.8445f), new Vector3(5501.223f, 4483.933f, 86.51086f), new Vector3(5501.532f, 4487.477f, 85.70294f), new Vector3(5501.905f, 4490.428f, 85.11934f), new Vector3(5502.371f, 4493.468f, 84.67484f), new Vector3(5503.027f, 4496.334f, 83.63389f), new Vector3(5504.888f, 4498.932f, 83.07285f), new Vector3(5507.732f, 4501.769f, 82.21923f), new Vector3(5510.205f, 4503.803f, 81.5068f), new Vector3(5512.79f, 4505.45f, 80.75327f), new Vector3(5515.422f, 4506.968f, 80.44078f), new Vector3(5518.28f, 4508.373f, 80.34424f), new Vector3(5521.687f, 4509.478f, 80.03202f), new Vector3(5524.708f, 4509.558f, 80.03208f), new Vector3(5527.65f, 4508.983f, 79.72667f), new Vector3(5531.417f, 4507.629f, 80.12988f), new Vector3(5534.13f, 4506.037f, 80.34692f), new Vector3(5536.677f, 4503.038f, 80.50925f), new Vector3(5538.169f, 4500.266f, 80.83057f), new Vector3(5537.394f, 4496.976f, 81.63081f), new Vector3(5536.157f, 4494.183f, 81.22652f), new Vector3(5534.733f, 4491.479f, 80.64721f), new Vector3(5533.192f, 4487.719f, 79.84647f), new Vector3(5532.23f, 4484.838f, 79.12604f), new Vector3(5531.785f, 4481.828f, 78.20265f), new Vector3(5532.032f, 4478.657f, 77.38756f), new Vector3(5532.761f, 4475.563f, 76.40813f), new Vector3(5533.865f, 4472.582f, 75.31886f), new Vector3(5535.418f, 4469.991f, 75.3287f), new Vector3(5537.607f, 4467.331f, 75.14629f), new Vector3(5540.031f, 4465.055f, 75.11241f), new Vector3(5543.618f, 4463.055f, 75.05981f), new Vector3(5546.603f, 4462.477f, 75.10442f), new Vector3(5549.748f, 4462.828f, 75.30168f), new Vector3(5552.699f, 4463.816f, 75.70535f), new Vector3(5555.465f, 4465.128f, 75.86998f), new Vector3(5557.925f, 4467.048f, 75.75741f), new Vector3(5560.074f, 4469.26f, 75.94112f), new Vector3(5561.846f, 4471.828f, 76.33551f), new Vector3(5563.489f, 4474.629f, 76.23425f), new Vector3(5565.792f, 4477.831f, 76.23034f), new Vector3(5568.628f, 4479.429f, 75.56921f), new Vector3(5571.781f, 4479.313f, 74.88395f), new Vector3(5574.889f, 4479.25f, 74.20845f), new Vector3(5578.424f, 4480.223f, 73.41543f), new Vector3(5581.424f, 4481.378f, 72.87032f), new Vector3(5582.549f, 4484.576f, 72.73306f), new Vector3(5581.313f, 4487.336f, 73.11726f), new Vector3(5578.856f, 4489.18f, 73.81293f), new Vector3(5575.724f, 4490.14f, 74.26698f), new Vector3(5572.83f, 4490.583f, 75.02007f), new Vector3(5569.626f, 4490.81f, 76.21062f), new Vector3(5565.7f, 4490.975f, 77.61517f), new Vector3(5562.725f, 4491.784f, 78.94883f), new Vector3(5559.979f, 4493.129f, 79.55703f), new Vector3(5557.344f, 4494.677f, 80.22604f), new Vector3(5554.686f, 4496.526f, 80.28243f), new Vector3(5551.516f, 4498.822f, 80.51958f), new Vector3(5548.346f, 4500.752f, 80.73961f), new Vector3(5545.434f, 4502.827f, 80.64719f), new Vector3(5542.569f, 4504.993f, 80.57257f), new Vector3(5540.42f, 4507.488f, 80.45883f), new Vector3(5540.059f, 4511.454f, 81.41396f), new Vector3(5540.118f, 4514.504f, 82.021f), new Vector3(5540.197f, 4517.63f, 82.4406f), new Vector3(5538.922f, 4520.303f, 81.60064f), new Vector3(5536.439f, 4522.07f, 80.94954f), new Vector3(5533.388f, 4522.101f, 80.59744f), new Vector3(5530.594f, 4520.954f, 81.32868f), new Vector3(5528.082f, 4519.229f, 81.48254f), new Vector3(5525.654f, 4517.176f, 81.18861f), new Vector3(5522.706f, 4514.617f, 80.77339f), new Vector3(5520.314f, 4512.728f, 80.0863f), new Vector3(5517.633f, 4510.767f, 80.11921f), new Vector3(5514.849f, 4508.776f, 80.3916f), new Vector3(5512.282f, 4506.994f, 80.5635f), new Vector3(5509.832f, 4505.291f, 81.25688f), new Vector3(5507.383f, 4503.553f, 82.07338f), new Vector3(5504.873f, 4501.683f, 82.70061f), new Vector3(5502.408f, 4499.695f, 83.14446f), new Vector3(5499.678f, 4497.696f, 83.75909f), new Vector3(5496.307f, 4495.617f, 83.96149f), new Vector3(5493.033f, 4493.556f, 84.1988f), new Vector3(5490.844f, 4491.175f, 84.60814f), new Vector3(5489.645f, 4487.607f, 84.70306f), new Vector3(5489.354f, 4483.695f, 85.19831f), new Vector3(5489.027f, 4480.616f, 86.27168f), new Vector3(5489.041f, 4477.585f, 86.98792f), new Vector3(5487.188f, 4475.234f, 87.41551f), new Vector3(5484.036f, 4473.95f, 86.5484f), new Vector3(5480.124f, 4473.869f, 86.74041f), new Vector3(5477.239f, 4473.054f, 86.58311f), new Vector3(5474.553f, 4471.638f, 86.17093f), new Vector3(5471.709f, 4470.491f, 85.90144f), new Vector3(5468.497f, 4469.703f, 85.65146f), new Vector3(5465.469f, 4469.528f, 85.49294f), new Vector3(5461.533f, 4470.153f, 85.25736f), new Vector3(5458.553f, 4471.325f, 84.87138f), new Vector3(5455.989f, 4472.921f, 84.59062f), new Vector3(5455.045f, 4470.055f, 84.58399f), new Vector3(5453.97f, 4467.225f, 84.57526f), new Vector3(5452.396f, 4464.348f, 84.63355f), new Vector3(5450.131f, 4461.805f, 84.69565f), new Vector3(5447.487f, 4460.064f, 84.49628f), new Vector3(5444.723f, 4458.452f, 84.35384f), new Vector3(5441.663f, 4457.115f, 83.74608f), new Vector3(5438.127f, 4455.714f, 82.73796f), new Vector3(5435.071f, 4454.902f, 82.51677f), new Vector3(5431.232f, 4454.467f, 82.31926f), new Vector3(5428.204f, 4454.328f, 82.19248f), new Vector3(5424.772f, 4454.371f, 82.97849f), new Vector3(5421.658f, 4454.833f, 83.70017f), new Vector3(5418.758f, 4455.669f, 83.7195f), new Vector3(5416.014f, 4456.899f, 83.92225f), new Vector3(5413.431f, 4458.483f, 84.01146f), new Vector3(5410.984f, 4460.252f, 83.66499f), new Vector3(5408.606f, 4462.115f, 83.34882f), new Vector3(5406.357f, 4464.286f, 82.98438f), new Vector3(5404.343f, 4466.892f, 82.07638f), new Vector3(5402.167f, 4470.219f, 81.38911f), new Vector3(5401.102f, 4472.983f, 80.82449f), new Vector3(5401.108f, 4476.178f, 80.02376f), new Vector3(5402.166f, 4478.907f, 79.32463f), new Vector3(5404.126f, 4481.161f, 78.63837f), new Vector3(5405.952f, 4483.697f, 77.57102f), new Vector3(5407.442f, 4486.444f, 76.30735f), new Vector3(5408.504f, 4489.33f, 75.02045f), new Vector3(5409.491f, 4492.099f, 74.12578f), new Vector3(5410.505f, 4495.022f, 73.30132f), new Vector3(5411.453f, 4497.794f, 72.48929f), new Vector3(5411.618f, 4501.603f, 71.56126f), new Vector3(5410.268f, 4498.618f, 72.51595f), new Vector3(5409.432f, 4495.838f, 73.33582f), new Vector3(5408.679f, 4492.611f, 74.06865f), new Vector3(5408.075f, 4489.762f, 75.05685f), new Vector3(5407.313f, 4486.678f, 76.28635f), new Vector3(5406.284f, 4483.811f, 77.48896f), new Vector3(5404.941f, 4481.078f, 78.5403f), new Vector3(5403.174f, 4478.782f, 79.44656f), new Vector3(5400.555f, 4476.942f, 79.77853f), new Vector3(5396.844f, 4475.486f, 79.31709f), new Vector3(5392.957f, 4476.364f, 78.55987f), new Vector3(5390.181f, 4478.083f, 78.86912f), new Vector3(5387.791f, 4480.106f, 78.08019f), new Vector3(5385.728f, 4482.333f, 77.41292f), new Vector3(5383.342f, 4485.492f, 76.62143f), new Vector3(5381.66f, 4487.99f, 76.03527f), new Vector3(5380.111f, 4490.741f, 75.07542f), new Vector3(5378.569f, 4493.63f, 74.27983f), new Vector3(5377.172f, 4496.299f, 73.29742f), new Vector3(5379.434f, 4493.19f, 74.31374f), new Vector3(5381.289f, 4489.59f, 75.43127f), new Vector3(5382.825f, 4486.957f, 76.18826f), new Vector3(5384.416f, 4484.188f, 76.97182f), new Vector3(5385.929f, 4481.583f, 77.6566f), new Vector3(5387.717f, 4479.155f, 78.34669f), new Vector3(5389.839f, 4476.792f, 79.16017f), new Vector3(5391.834f, 4474.561f, 79.39651f), new Vector3(5393.875f, 4472.139f, 79.91106f), new Vector3(5395.494f, 4469.415f, 80.63394f), new Vector3(5395.077f, 4466.469f, 81.66801f), new Vector3(5393.815f, 4463.638f, 82.73602f), new Vector3(5396.971f, 4461.73f, 82.52598f), new Vector3(5399.604f, 4460.029f, 82.52019f), new Vector3(5402.39f, 4457.625f, 83.2047f), new Vector3(5403.729f, 4454.976f, 83.70896f), new Vector3(5403.87f, 4451.864f, 83.84702f), new Vector3(5403.205f, 4448.834f, 83.87593f), new Vector3(5403.646f, 4445.85f, 83.87264f), new Vector3(5406.139f, 4443.703f, 84.02737f), new Vector3(5409.662f, 4441.955f, 83.64239f), new Vector3(5412.82f, 4441.637f, 83.49149f), new Vector3(5415.743f, 4442.585f, 83.30977f), new Vector3(5419.153f, 4444.681f, 83.26405f), new Vector3(5422.311f, 4445.8f, 83.2562f), new Vector3(5426.181f, 4446.86f, 83.05194f), new Vector3(5429.277f, 4447.646f, 82.94011f), new Vector3(5433.192f, 4449.059f, 83.00554f), new Vector3(5436.051f, 4450.483f, 83.03465f), new Vector3(5438.803f, 4451.75f, 83.00399f), new Vector3(5441.849f, 4452.615f, 83.1809f), new Vector3(5444.847f, 4453.703f, 83.90686f), new Vector3(5447.577f, 4455.341f, 84.48742f), new Vector3(5450.149f, 4456.96f, 84.61792f), new Vector3(5453.532f, 4458.839f, 84.84963f), new Vector3(5456.431f, 4460.065f, 85.16937f), new Vector3(5460.247f, 4461.271f, 85.3905f), new Vector3(5464.045f, 4461.848f, 85.79806f), new Vector3(5467.327f, 4461.822f, 86.24172f), new Vector3(5471.409f, 4461.652f, 86.74014f), new Vector3(5474.408f, 4461.487f, 87.25029f), new Vector3(5477.53f, 4461.138f, 87.67654f), new Vector3(5481.343f, 4460.052f, 87.51165f), new Vector3(5484.317f, 4457.66f, 88.019f), new Vector3(5486.347f, 4455.205f, 88.36422f), new Vector3(5488.155f, 4452.923f, 89.15649f), new Vector3(5489.777f, 4450.189f, 90.40487f), new Vector3(5490.785f, 4447.317f, 91.21501f), new Vector3(5491.313f, 4443.452f, 92.16611f), new Vector3(5491.364f, 4440.416f, 92.67181f), new Vector3(5491.31f, 4437.377f, 93.26935f), new Vector3(5491.212f, 4434.197f, 93.61863f), new Vector3(5491.003f, 4430.178f, 94.22404f), new Vector3(5490.859f, 4426.853f, 94.46703f), new Vector3(5491.339f, 4423.871f, 94.81665f), new Vector3(5492.167f, 4420.828f, 94.78072f), new Vector3(5493.312f, 4418.019f, 94.80215f), new Vector3(5495.063f, 4415.342f, 94.32435f), new Vector3(5497.861f, 4413.852f, 93.79199f), new Vector3(5501.982f, 4413.769f, 93.69653f), new Vector3(5504.624f, 4415.897f, 93.51376f), new Vector3(5504.054f, 4419.788f, 93.4609f), new Vector3(5502.419f, 4423.004f, 93.62675f), new Vector3(5500.487f, 4425.604f, 93.84756f), new Vector3(5498.091f, 4428.921f, 94.19376f), new Vector3(5496.69f, 4431.565f, 94.44231f), new Vector3(5495.321f, 4435.389f, 94.22154f), new Vector3(5494.675f, 4439.439f, 94.14275f), new Vector3(5494.573f, 4442.548f, 93.20216f), new Vector3(5495.076f, 4445.452f, 92.53848f), new Vector3(5497.105f, 4447.673f, 92.27818f), new Vector3(5500.375f, 4445.57f, 92.99299f), new Vector3(5503.08f, 4443.198f, 94.27704f), new Vector3(5504.864f, 4440.597f, 96.66814f), new Vector3(5505.908f, 4438.193f, 98.68233f), new Vector3(5506.729f, 4434.998f, 99.20398f), new Vector3(5507.75f, 4432.165f, 99.16496f), new Vector3(5509.447f, 4428.537f, 101.0903f), new Vector3(5510.813f, 4425.812f, 103.4426f), new Vector3(5512.196f, 4423.113f, 105.6754f), new Vector3(5513.531f, 4420.395f, 105.8737f), new Vector3(5514.022f, 4416.658f, 105.7656f), new Vector3(5511.916f, 4414.393f, 105.7582f), new Vector3(5508.894f, 4413.488f, 108.1109f), new Vector3(5506.086f, 4412.403f, 110.4128f), new Vector3(5503.18f, 4411.216f, 110.7595f), new Vector3(5500.123f, 4410.012f, 110.7735f), new Vector3(5497.351f, 4408.843f, 110.7735f), new Vector3(5494.688f, 4407.399f, 110.1452f), new Vector3(5491.982f, 4405.685f, 110.4709f), new Vector3(5489.407f, 4404.037f, 111.3117f), new Vector3(5486.959f, 4402.225f, 112.7069f), new Vector3(5484.427f, 4400.264f, 114.6252f), new Vector3(5482.122f, 4398.485f, 116.3475f), new Vector3(5479.52f, 4396.649f, 117.8402f), new Vector3(5477.139f, 4395.021f, 119.4505f), new Vector3(5474.57f, 4393.379f, 121.3034f), new Vector3(5471.658f, 4392.068f, 123.7084f), new Vector3(5468.696f, 4391.582f, 124.7303f), new Vector3(5465.703f, 4392.091f, 124.9965f), new Vector3(5463.083f, 4393.842f, 125.6404f), new Vector3(5460.984f, 4396.142f, 127.2114f), new Vector3(5459.245f, 4398.783f, 129.0365f), new Vector3(5457.81f, 4401.295f, 130.5126f), new Vector3(5456.425f, 4404.58f, 132.1085f), new Vector3(5455.936f, 4407.451f, 133.3514f), new Vector3(5456.146f, 4410.72f, 134.7755f), new Vector3(5456.904f, 4413.604f, 136.1119f), new Vector3(5458.028f, 4416.373f, 137.5811f), new Vector3(5459.681f, 4419.084f, 139.0863f), new Vector3(5461.222f, 4421.45f, 140.4701f), new Vector3(5463.041f, 4424.272f, 142.1079f), new Vector3(5464.655f, 4426.869f, 143.4628f), new Vector3(5466.224f, 4429.301f, 145.3568f), new Vector3(5467.871f, 4431.844f, 145.6201f), new Vector3(5470.009f, 4435.422f, 145.419f), new Vector3(5472.013f, 4438.962f, 145.0684f), new Vector3(5473.657f, 4442.43f, 144.7044f)};\r\n\r\nG[\"GarrsionSafePointsHordeV2Plot59Mine\"] = v;\r\n\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Horde Version 3 Mine......................................................................\r\nVector3[] v = new Vector3[] {new Vector3(5467.643f, 4433.323f, 145.5132f), new Vector3(5465.685f, 4430.153f, 145.4899f), new Vector3(5464.171f, 4427.701f, 143.6384f), new Vector3(5462.437f, 4424.893f, 142.2412f), new Vector3(5460.885f, 4422.375f, 141.0155f), new Vector3(5459.123f, 4419.495f, 139.373f), new Vector3(5457.616f, 4416.619f, 137.7402f), new Vector3(5456.386f, 4414.033f, 136.421f), new Vector3(5455.613f, 4411.253f, 135.1111f), new Vector3(5455.588f, 4407.655f, 133.4861f), new Vector3(5456.116f, 4404.432f, 132.0736f), new Vector3(5457.098f, 4401.697f, 130.9074f), new Vector3(5458.352f, 4398.965f, 129.4897f), new Vector3(5459.622f, 4396.426f, 128.3878f), new Vector3(5460.971f, 4394.114f, 126.3373f), new Vector3(5463.035f, 4391.767f, 125.1803f), new Vector3(5465.58f, 4389.868f, 125.0023f), new Vector3(5468.92f, 4389.495f, 124.7635f), new Vector3(5472.074f, 4390.629f, 123.6998f), new Vector3(5474.907f, 4391.864f, 121.7441f), new Vector3(5477.211f, 4393.091f, 120.0051f), new Vector3(5479.849f, 4394.987f, 117.9499f), new Vector3(5482.431f, 4397.017f, 116.5619f), new Vector3(5484.457f, 4398.758f, 115.0713f), new Vector3(5486.989f, 4401.176f, 113.1485f), new Vector3(5489.033f, 4403.065f, 111.8848f), new Vector3(5491.636f, 4404.88f, 110.8284f), new Vector3(5494.622f, 4406.508f, 110.4414f), new Vector3(5497.686f, 4407.982f, 110.8532f), new Vector3(5500.535f, 4409.385f, 110.8532f), new Vector3(5503.708f, 4411.003f, 110.8322f), new Vector3(5506.947f, 4412.694f, 109.8036f), new Vector3(5509.27f, 4413.926f, 107.7658f), new Vector3(5511.564f, 4415.157f, 105.8214f), new Vector3(5514.372f, 4416.727f, 105.8461f), new Vector3(5514.084f, 4419.842f, 105.9456f), new Vector3(5512.492f, 4422.647f, 105.8454f), new Vector3(5511.245f, 4424.924f, 104.2839f), new Vector3(5509.617f, 4427.668f, 101.8109f), new Vector3(5507.868f, 4430.478f, 99.22079f), new Vector3(5506.277f, 4433.087f, 99.25603f), new Vector3(5504.631f, 4435.812f, 99.29481f), new Vector3(5503.226f, 4438.083f, 97.7813f), new Vector3(5501.913f, 4440.205f, 95.85543f), new Vector3(5500.644f, 4442.254f, 94.01682f), new Vector3(5499.118f, 4444.758f, 93.16012f), new Vector3(5497.488f, 4447.733f, 92.50557f), new Vector3(5496.092f, 4450.854f, 91.33354f), new Vector3(5495.143f, 4453.861f, 90.42559f), new Vector3(5494.678f, 4456.982f, 89.48574f), new Vector3(5494.799f, 4460.327f, 89.32511f), new Vector3(5495.654f, 4463.554f, 89.07856f), new Vector3(5496.73f, 4466.709f, 88.68693f), new Vector3(5497.639f, 4470.057f, 88.30865f), new Vector3(5498.421f, 4472.978f, 87.95808f), new Vector3(5499.163f, 4476.356f, 87.54285f), new Vector3(5499.342f, 4479.606f, 87.13582f), new Vector3(5499.342f, 4482.596f, 86.66975f), new Vector3(5499.166f, 4486.271f, 85.7602f), new Vector3(5499.112f, 4489.569f, 85.00362f), new Vector3(5499.965f, 4492.722f, 84.61248f), new Vector3(5501.54f, 4496.036f, 83.77361f), new Vector3(5503.411f, 4498.689f, 83.50465f), new Vector3(5505.915f, 4501.268f, 82.83241f), new Vector3(5508.627f, 4503.399f, 81.86114f), new Vector3(5511.602f, 4505.234f, 80.84686f), new Vector3(5514.743f, 4506.963f, 80.48048f), new Vector3(5517.621f, 4507.932f, 80.45895f), new Vector3(5520.544f, 4508.634f, 80.33321f), new Vector3(5523.988f, 4509.099f, 80.03038f), new Vector3(5526.996f, 4509.072f, 79.84612f), new Vector3(5529.943f, 4508.424f, 79.74241f), new Vector3(5533.387f, 4507.137f, 80.29353f), new Vector3(5536.344f, 4505.356f, 80.42929f), new Vector3(5538.88f, 4503.68f, 80.54798f), new Vector3(5538.568f, 4500.534f, 80.84398f), new Vector3(5537.267f, 4497.021f, 81.71536f), new Vector3(5536.139f, 4493.875f, 81.25449f), new Vector3(5535.171f, 4491.026f, 80.63476f), new Vector3(5534.104f, 4487.84f, 80.02544f), new Vector3(5533.189f, 4484.993f, 79.22428f), new Vector3(5532.488f, 4482.154f, 78.33891f), new Vector3(5532.297f, 4478.708f, 77.4699f), new Vector3(5532.87f, 4475.794f, 76.55991f), new Vector3(5534.127f, 4472.828f, 75.46941f), new Vector3(5535.79f, 4469.802f, 75.20024f), new Vector3(5537.875f, 4466.849f, 75.21309f), new Vector3(5540.522f, 4464.764f, 75.18085f), new Vector3(5543.548f, 4463.692f, 75.18303f), new Vector3(5546.615f, 4463.437f, 75.24083f), new Vector3(5550.331f, 4463.923f, 75.40797f), new Vector3(5553.621f, 4465.192f, 75.6586f), new Vector3(5556.294f, 4467.327f, 75.68136f), new Vector3(5558.8f, 4470.062f, 75.97884f), new Vector3(5560.722f, 4472.406f, 76.12362f), new Vector3(5562.725f, 4474.826f, 76.2723f), new Vector3(5564.811f, 4477.057f, 76.41197f), new Vector3(5567.62f, 4478.925f, 75.88304f), new Vector3(5570.866f, 4479.845f, 75.16444f), new Vector3(5573.966f, 4481.147f, 74.38989f), new Vector3(5577.574f, 4481.884f, 73.46184f), new Vector3(5577.135f, 4485.242f, 73.60363f), new Vector3(5574.496f, 4486.648f, 73.97842f), new Vector3(5571.523f, 4487.464f, 74.70924f), new Vector3(5567.971f, 4488.453f, 76.11884f), new Vector3(5565.027f, 4489.599f, 77.30476f), new Vector3(5562.602f, 4490.934f, 78.5788f), new Vector3(5559.55f, 4492.848f, 79.67107f), new Vector3(5556.93f, 4494.582f, 80.09045f), new Vector3(5554.274f, 4496.338f, 80.26993f), new Vector3(5551.697f, 4498.088f, 80.47609f), new Vector3(5548.733f, 4500.007f, 80.74324f), new Vector3(5546.12f, 4501.497f, 80.63406f), new Vector3(5543.444f, 4503.126f, 80.51773f), new Vector3(5540.622f, 4505.366f, 80.54649f), new Vector3(5538.869f, 4508.374f, 80.52027f), new Vector3(5538.788f, 4511.264f, 81.35777f), new Vector3(5539.525f, 4514.308f, 82.06041f), new Vector3(5539.926f, 4517.993f, 82.48009f), new Vector3(5539.341f, 4521.004f, 81.65185f), new Vector3(5536.748f, 4522.66f, 80.69096f), new Vector3(5533.203f, 4522.439f, 80.67249f), new Vector3(5530.376f, 4521.409f, 81.40182f), new Vector3(5527.467f, 4519.151f, 81.39613f), new Vector3(5525.205f, 4517.021f, 81.24061f), new Vector3(5522.916f, 4514.809f, 80.92241f), new Vector3(5520.045f, 4512.237f, 80.16454f), new Vector3(5517.163f, 4509.78f, 80.41011f), new Vector3(5514.062f, 4507.508f, 80.32785f), new Vector3(5510.804f, 4505.355f, 81.01867f), new Vector3(5508.363f, 4503.717f, 81.89805f), new Vector3(5505.408f, 4501.654f, 82.68179f), new Vector3(5502.301f, 4499.398f, 83.262f), new Vector3(5499.528f, 4497.196f, 83.68916f), new Vector3(5496.978f, 4495.229f, 83.92771f), new Vector3(5493.916f, 4492.957f, 84.06828f), new Vector3(5491.028f, 4490.788f, 84.43404f), new Vector3(5488.222f, 4487.965f, 85.14121f), new Vector3(5486.03f, 4484.835f, 85.59762f), new Vector3(5484.275f, 4482.3f, 85.50568f), new Vector3(5482.217f, 4479.262f, 85.87741f), new Vector3(5479.477f, 4476.623f, 86.06532f), new Vector3(5476.959f, 4474.906f, 86.33105f), new Vector3(5473.794f, 4473.08f, 86.52698f), new Vector3(5470.55f, 4471.329f, 86.04446f), new Vector3(5466.952f, 4469.749f, 85.74318f), new Vector3(5463.788f, 4468.847f, 85.3875f), new Vector3(5459.898f, 4468.271f, 85.11284f), new Vector3(5456.253f, 4469.788f, 85.01048f), new Vector3(5453.547f, 4472.44f, 84.46928f), new Vector3(5451.241f, 4475.188f, 84.33253f), new Vector3(5449.336f, 4478.116f, 84.49513f), new Vector3(5447.886f, 4480.911f, 84.11427f), new Vector3(5446.611f, 4484.296f, 84.32633f), new Vector3(5445.65f, 4488.041f, 84.17922f), new Vector3(5445.934f, 4491.883f, 84.6093f), new Vector3(5447.729f, 4494.904f, 84.94229f), new Vector3(5448.149f, 4497.912f, 85.19514f), new Vector3(5446.25f, 4500.544f, 84.99741f), new Vector3(5443.904f, 4503.408f, 84.50668f), new Vector3(5441.589f, 4506.508f, 84.11708f), new Vector3(5440.125f, 4509.761f, 83.56529f), new Vector3(5438.98f, 4512.506f, 83.0599f), new Vector3(5437.874f, 4516.016f, 82.46882f), new Vector3(5437.59f, 4519.727f, 82.48573f), new Vector3(5437.334f, 4523.221f, 82.04275f), new Vector3(5437.174f, 4526.998f, 81.51508f), new Vector3(5437.121f, 4530.019f, 81.06442f), new Vector3(5437.772f, 4533.217f, 80.95817f), new Vector3(5439.131f, 4536.623f, 81.33012f), new Vector3(5440.523f, 4539.916f, 81.44381f), new Vector3(5441.737f, 4543.567f, 81.26133f), new Vector3(5442.997f, 4547.122f, 81.09863f), new Vector3(5444.428f, 4550.414f, 81.21627f), new Vector3(5446.75f, 4553.595f, 81.69317f), new Vector3(5448.7f, 4556.793f, 81.85049f), new Vector3(5449.65f, 4560.304f, 81.85683f), new Vector3(5449.315f, 4563.988f, 81.84245f), new Vector3(5449.001f, 4567.753f, 81.74648f), new Vector3(5449.024f, 4571.569f, 81.69052f), new Vector3(5449.419f, 4575.532f, 81.6782f), new Vector3(5449.733f, 4578.928f, 81.66402f), new Vector3(5450.444f, 4582.039f, 81.61475f), new Vector3(5452.265f, 4585.212f, 81.54905f), new Vector3(5454.683f, 4588.139f, 80.27735f), new Vector3(5456.795f, 4590.023f, 78.48001f), new Vector3(5459.894f, 4589.812f, 77.97661f), new Vector3(5461.303f, 4587.105f, 78.08591f), new Vector3(5462.716f, 4584.224f, 78.39519f), new Vector3(5465.015f, 4581.956f, 78.85612f), new Vector3(5467.55f, 4579.863f, 79.35073f), new Vector3(5469.689f, 4577.102f, 79.60085f), new Vector3(5470.214f, 4573.958f, 79.54051f), new Vector3(5471.164f, 4570.854f, 79.60085f), new Vector3(5472.078f, 4567.833f, 79.60083f), new Vector3(5472.7f, 4564.414f, 79.60085f), new Vector3(5473.112f, 4561.283f, 79.59879f), new Vector3(5472.961f, 4557.94f, 79.60081f), new Vector3(5472.085f, 4554.932f, 79.6008f), new Vector3(5469.534f, 4552.924f, 79.60085f), new Vector3(5466.339f, 4551.58f, 79.59985f), new Vector3(5463.087f, 4550.213f, 79.60052f), new Vector3(5461.202f, 4549.482f, 81.87122f), new Vector3(5458.552f, 4548.923f, 83.36571f), new Vector3(5455.521f, 4547.704f, 82.18665f), new Vector3(5452.284f, 4546.044f, 82.17433f), new Vector3(5449.234f, 4545.179f, 82.10656f), new Vector3(5446.438f, 4544.079f, 81.86945f), new Vector3(5443.362f, 4542.136f, 81.41623f), new Vector3(5440.918f, 4540.001f, 81.55688f), new Vector3(5438.846f, 4537.377f, 81.12263f), new Vector3(5437.238f, 4534.769f, 80.98558f), new Vector3(5436.074f, 4531.794f, 81.09307f), new Vector3(5435.495f, 4528.79f, 81.24404f), new Vector3(5434.854f, 4525.627f, 81.60107f), new Vector3(5434.483f, 4522.381f, 81.90389f), new Vector3(5433.132f, 4519.427f, 82.67785f), new Vector3(5435.012f, 4516.488f, 82.78276f), new Vector3(5436.938f, 4514.087f, 82.88281f), new Vector3(5438.003f, 4510.867f, 83.20039f), new Vector3(5438.504f, 4507.829f, 83.69897f), new Vector3(5438.588f, 4504.681f, 83.87188f), new Vector3(5439.603f, 4501.696f, 84.20161f), new Vector3(5440.618f, 4498.614f, 84.4698f), new Vector3(5441.103f, 4495.643f, 84.82404f), new Vector3(5442.107f, 4492.771f, 84.64987f), new Vector3(5443.47f, 4489.696f, 84.18318f), new Vector3(5444.586f, 4486.638f, 84.25403f), new Vector3(5445.669f, 4483.747f, 84.04056f), new Vector3(5447.117f, 4480.991f, 84.07057f), new Vector3(5448.847f, 4478.36f, 84.3671f), new Vector3(5450.563f, 4475.521f, 84.30973f), new Vector3(5451.868f, 4472.616f, 84.55341f), new Vector3(5452.713f, 4469.641f, 84.47688f), new Vector3(5453.088f, 4466.448f, 84.80872f), new Vector3(5452.407f, 4463.471f, 84.77383f), new Vector3(5450.511f, 4460.802f, 85.0142f), new Vector3(5448.043f, 4459.023f, 84.59641f), new Vector3(5445.153f, 4457.893f, 84.4621f), new Vector3(5442.063f, 4456.868f, 83.95518f), new Vector3(5439.112f, 4455.94f, 83.00764f), new Vector3(5436.014f, 4455.144f, 82.67622f), new Vector3(5432.675f, 4454.489f, 82.45048f), new Vector3(5429.634f, 4454.015f, 82.33596f), new Vector3(5426.312f, 4453.925f, 82.45531f), new Vector3(5423.268f, 4454.391f, 83.59585f), new Vector3(5420.269f, 4455.325f, 83.76225f), new Vector3(5417.374f, 4456.549f, 83.89875f), new Vector3(5414.278f, 4457.879f, 84.12832f), new Vector3(5411.678f, 4459.712f, 83.83627f), new Vector3(5409.173f, 4461.757f, 83.51441f), new Vector3(5406.782f, 4464.125f, 83.12448f), new Vector3(5404.738f, 4466.564f, 82.2991f), new Vector3(5403.143f, 4469.177f, 81.71447f), new Vector3(5402.316f, 4472.177f, 81.24432f), new Vector3(5402.082f, 4475.17f, 80.4472f), new Vector3(5402.369f, 4478.665f, 79.5084f), new Vector3(5403.492f, 4481.686f, 78.47463f), new Vector3(5405.071f, 4484.538f, 77.38061f), new Vector3(5406.687f, 4487.193f, 76.34752f), new Vector3(5408.125f, 4490.112f, 75.09201f), new Vector3(5409.202f, 4493.036f, 74.00999f), new Vector3(5410.257f, 4495.958f, 73.23612f), new Vector3(5411.053f, 4498.974f, 72.34865f), new Vector3(5408.155f, 4498.127f, 73.14339f), new Vector3(5407.634f, 4495.032f, 73.9101f), new Vector3(5407.399f, 4491.834f, 74.72124f), new Vector3(5406.852f, 4488.734f, 75.57385f), new Vector3(5405.836f, 4485.689f, 76.75977f), new Vector3(5404.539f, 4482.745f, 77.91116f), new Vector3(5402.958f, 4480.113f, 79.01583f), new Vector3(5401.053f, 4477.7f, 79.71458f), new Vector3(5398.582f, 4475.977f, 79.51843f), new Vector3(5395.547f, 4475.589f, 78.96701f), new Vector3(5392.373f, 4476.057f, 78.90431f), new Vector3(5389.745f, 4477.617f, 79.01637f), new Vector3(5387.377f, 4479.801f, 78.229f), new Vector3(5385.483f, 4482.376f, 77.49807f), new Vector3(5383.593f, 4485.638f, 76.60238f), new Vector3(5382.091f, 4488.471f, 75.89455f), new Vector3(5383.29f, 4485.705f, 76.61536f), new Vector3(5385.107f, 4482.91f, 77.34274f), new Vector3(5386.954f, 4480.465f, 78.03328f), new Vector3(5388.943f, 4478.147f, 78.78886f), new Vector3(5391.11f, 4475.775f, 79.28965f), new Vector3(5393.237f, 4473.441f, 79.59518f), new Vector3(5395.192f, 4470.89f, 80.15734f), new Vector3(5396.031f, 4468.023f, 80.97647f), new Vector3(5394.62f, 4465.429f, 82.17653f), new Vector3(5393.914f, 4462.506f, 83.0715f), new Vector3(5396.454f, 4460.638f, 82.94336f), new Vector3(5399.378f, 4459.243f, 82.8005f), new Vector3(5401.866f, 4457.436f, 83.20464f), new Vector3(5403.789f, 4455.09f, 83.79102f), new Vector3(5403.445f, 4452.082f, 83.86384f), new Vector3(5402.714f, 4448.82f, 83.89151f), new Vector3(5403.836f, 4445.879f, 83.97383f), new Vector3(5406.349f, 4444.021f, 84.08123f), new Vector3(5409.533f, 4443.594f, 83.83743f), new Vector3(5412.704f, 4443.755f, 83.42164f), new Vector3(5416.104f, 4444.272f, 83.33292f), new Vector3(5419.292f, 4444.395f, 83.3354f), new Vector3(5422.328f, 4444.943f, 83.31179f), new Vector3(5425.09f, 4446.191f, 83.19427f), new Vector3(5427.928f, 4447.475f, 83.01207f), new Vector3(5430.722f, 4448.738f, 83.01527f), new Vector3(5433.573f, 4450.027f, 83.05289f), new Vector3(5436.409f, 4451.227f, 82.95232f), new Vector3(5439.228f, 4452.321f, 82.90611f), new Vector3(5442.142f, 4453.556f, 83.18221f), new Vector3(5445.092f, 4454.845f, 84.08476f), new Vector3(5448.006f, 4456.131f, 84.52664f), new Vector3(5450.838f, 4457.412f, 84.75291f), new Vector3(5453.771f, 4458.705f, 84.94835f), new Vector3(5456.628f, 4459.855f, 85.44532f), new Vector3(5459.597f, 4460.705f, 85.67763f), new Vector3(5462.72f, 4461.03f, 85.88102f), new Vector3(5465.8f, 4461.14f, 86.19793f), new Vector3(5468.866f, 4461.159f, 86.53085f), new Vector3(5472.07f, 4461.161f, 86.98624f), new Vector3(5475.459f, 4461.086f, 87.46606f), new Vector3(5478.669f, 4460.625f, 87.77383f), new Vector3(5481.477f, 4459.496f, 87.62006f), new Vector3(5483.942f, 4457.782f, 88.11008f), new Vector3(5486.24f, 4455.447f, 88.4044f), new Vector3(5488.111f, 4452.906f, 89.214f), new Vector3(5489.616f, 4450.013f, 90.38951f), new Vector3(5490.895f, 4447.064f, 91.37936f), new Vector3(5491.483f, 4444.017f, 92.04436f), new Vector3(5491.437f, 4440.78f, 92.69099f), new Vector3(5491.084f, 4437.297f, 93.24202f), new Vector3(5490.797f, 4434.294f, 93.51949f), new Vector3(5490.537f, 4431.112f, 93.91244f), new Vector3(5490.43f, 4427.883f, 94.43031f), new Vector3(5490.882f, 4424.889f, 94.77235f), new Vector3(5491.774f, 4421.929f, 94.87122f), new Vector3(5493.041f, 4419.046f, 94.85377f), new Vector3(5494.702f, 4416.452f, 94.73765f), new Vector3(5497.369f, 4414.573f, 93.91051f), new Vector3(5500.65f, 4414.419f, 93.75702f), new Vector3(5503.396f, 4416.227f, 93.62663f), new Vector3(5503.324f, 4419.414f, 93.56915f), new Vector3(5502.041f, 4422.866f, 93.74618f), new Vector3(5500.621f, 4425.748f, 93.91058f), new Vector3(5499.215f, 4428.574f, 94.14081f), new Vector3(5497.846f, 4431.435f, 94.48472f), new Vector3(5496.648f, 4434.421f, 94.44918f), new Vector3(5495.97f, 4437.716f, 94.1756f), new Vector3(5495.767f, 4440.942f, 93.97207f), new Vector3(5495.684f, 4444.093f, 93.00311f), new Vector3(5496.148f, 4447.151f, 92.29836f), new Vector3(5499.41f, 4446.411f, 92.78973f), new Vector3(5501.06f, 4443.868f, 93.54272f), new Vector3(5502.492f, 4441.142f, 95.4599f), new Vector3(5503.813f, 4438.43f, 97.77317f), new Vector3(5505.277f, 4435.682f, 99.29387f), new Vector3(5506.884f, 4432.827f, 99.25384f), new Vector3(5508.504f, 4429.956f, 99.8506f), new Vector3(5509.642f, 4427.849f, 101.701f), new Vector3(5510.88f, 4425.534f, 103.7316f), new Vector3(5512.023f, 4423.399f, 105.607f), new Vector3(5513.524f, 4420.614f, 105.9506f), new Vector3(5513.756f, 4417.396f, 105.8444f), new Vector3(5511.682f, 4415.024f, 105.8227f), new Vector3(5509.04f, 4413.285f, 108.1723f), new Vector3(5506.431f, 4411.878f, 110.4942f), new Vector3(5503.472f, 4410.875f, 110.8365f), new Vector3(5500.454f, 4409.949f, 110.8527f), new Vector3(5497.504f, 4408.734f, 110.8527f), new Vector3(5494.652f, 4407.122f, 110.2285f), new Vector3(5491.963f, 4405.487f, 110.6397f), new Vector3(5489.326f, 4403.856f, 111.4754f), new Vector3(5486.588f, 4402.108f, 112.974f), new Vector3(5484.037f, 4400.397f, 114.6418f), new Vector3(5481.602f, 4398.454f, 116.5572f), new Vector3(5479.237f, 4396.512f, 118.069f), new Vector3(5476.707f, 4394.497f, 119.892f), new Vector3(5474.05f, 4392.785f, 121.8425f), new Vector3(5471.182f, 4391.542f, 124.1184f), new Vector3(5468.077f, 4391.343f, 124.8916f), new Vector3(5465.187f, 4392.491f, 125.0816f), new Vector3(5462.638f, 4394.775f, 126.0294f), new Vector3(5460.707f, 4397.1f, 127.769f), new Vector3(5459.139f, 4399.748f, 129.4669f), new Vector3(5457.658f, 4402.693f, 131.1522f), new Vector3(5456.713f, 4405.758f, 132.5871f), new Vector3(5456.398f, 4408.813f, 133.9506f), new Vector3(5456.657f, 4411.859f, 135.3557f), new Vector3(5457.422f, 4414.822f, 136.8598f), new Vector3(5458.524f, 4417.742f, 138.3466f), new Vector3(5460.119f, 4420.568f, 139.9357f), new Vector3(5461.873f, 4423.352f, 141.5014f), new Vector3(5463.738f, 4426.198f, 142.9273f), new Vector3(5465.38f, 4428.678f, 144.7859f), new Vector3(5467.233f, 4431.404f, 145.7475f), new Vector3(5469.166f, 4433.961f, 145.516f), new Vector3(5471.132f, 4436.547f, 145.4534f), new Vector3(5472.693f, 4439.446f, 144.9427f), new Vector3(5474.103f, 4442.357f, 144.6972f), new Vector3(5475.45f, 4445.165f, 144.573f)};\r\n\r\nG[\"GarrsionSafePointsHordeV3Plot59Mine\"] = v;\r\n\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Alliance Version 1 Mine......................................................................\r\nVector3[] v = new Vector3[] {new Vector3(1892.35f, 86.14146f, 84.38787f), new Vector3(1889.023f, 84.77321f, 84.41282f), new Vector3(1886.106f, 83.49379f, 84.41282f), new Vector3(1883.133f, 82.08762f, 82.3009f), new Vector3(1880.36f, 80.56412f, 80.9386f), new Vector3(1877.642f, 79.02788f, 79.5957f), new Vector3(1874.991f, 77.4745f, 78.14107f), new Vector3(1872.296f, 76.01277f, 76.69607f), new Vector3(1869.469f, 74.53172f, 75.20023f), new Vector3(1867.125f, 72.28871f, 73.65472f), new Vector3(1865.525f, 69.68721f, 72.28593f), new Vector3(1864.68f, 66.54816f, 70.89653f), new Vector3(1864.123f, 63.6076f, 69.72837f), new Vector3(1863.998f, 60.48392f, 68.57259f), new Vector3(1864.176f, 57.248f, 66.75706f), new Vector3(1864.599f, 54.25726f, 65.18053f), new Vector3(1865.409f, 51.14258f, 63.90071f), new Vector3(1866.956f, 47.72229f, 63.90071f), new Vector3(1870.15f, 45.63616f, 63.20309f), new Vector3(1873.193f, 45.16032f, 61.91338f), new Vector3(1876.506f, 45.14412f, 59.79583f), new Vector3(1879.704f, 45.36261f, 57.6649f), new Vector3(1882.662f, 45.60221f, 56.18277f), new Vector3(1885.819f, 46.0726f, 54.7592f), new Vector3(1888.817f, 46.67857f, 53.15543f), new Vector3(1891.886f, 47.47304f, 51.51654f), new Vector3(1894.856f, 48.28654f, 50.08385f), new Vector3(1897.922f, 49.00855f, 49.03194f), new Vector3(1901.052f, 49.39854f, 49.1815f), new Vector3(1904.02f, 49.33207f, 49.75171f), new Vector3(1907.224f, 49.24087f, 49.75171f), new Vector3(1910.397f, 49.07429f, 49.72741f), new Vector3(1913.447f, 48.83646f, 48.96162f), new Vector3(1915.857f, 48.68074f, 47.09355f), new Vector3(1918.261f, 48.54178f, 45.19229f), new Vector3(1921.51f, 48.42058f, 44.74632f), new Vector3(1923.341f, 50.83051f, 44.83077f), new Vector3(1923.428f, 54.04932f, 44.77762f), new Vector3(1923.446f, 57.19207f, 43.06179f), new Vector3(1923.408f, 59.65578f, 41.14677f), new Vector3(1923.359f, 62.8614f, 38.64227f), new Vector3(1923.304f, 65.94783f, 38.15144f), new Vector3(1923.105f, 69.14764f, 38.18928f), new Vector3(1922.966f, 72.24546f, 36.82065f), new Vector3(1922.948f, 75.45481f, 34.34731f), new Vector3(1923.117f, 78.5407f, 32.43709f), new Vector3(1922.934f, 81.53107f, 31.70273f), new Vector3(1922.858f, 84.8058f, 31.06333f), new Vector3(1923.023f, 87.84956f, 29.8548f), new Vector3(1923.877f, 90.67586f, 29.07489f), new Vector3(1924.458f, 93.76945f, 28.26152f), new Vector3(1923.721f, 97.58494f, 27.89774f), new Vector3(1922.122f, 100.4985f, 27.57984f), new Vector3(1920.087f, 103.962f, 27.31649f), new Vector3(1918.401f, 106.5311f, 26.87432f), new Vector3(1915.958f, 109.5324f, 26.2316f), new Vector3(1913.539f, 111.8437f, 25.84123f), new Vector3(1910.94f, 113.9545f, 25.26438f), new Vector3(1908.431f, 115.7653f, 24.82421f), new Vector3(1905.802f, 117.563f, 24.63235f), new Vector3(1903.147f, 118.9269f, 24.31659f), new Vector3(1901.065f, 121.2026f, 24.42918f), new Vector3(1899.566f, 123.8727f, 24.13763f), new Vector3(1896.723f, 125.026f, 23.54002f), new Vector3(1894.214f, 123.089f, 23.50595f), new Vector3(1892.026f, 120.9519f, 23.607f), new Vector3(1889.301f, 119.2533f, 23.62627f), new Vector3(1886.428f, 118.1277f, 23.65877f), new Vector3(1883.265f, 117.5565f, 23.42601f), new Vector3(1880.07f, 117.5963f, 23.11835f), new Vector3(1876.857f, 118.1152f, 22.32289f), new Vector3(1873.775f, 118.7269f, 21.55467f), new Vector3(1870.838f, 119.556f, 21.43661f), new Vector3(1867.732f, 120.6184f, 21.32197f), new Vector3(1864.795f, 121.8796f, 21.20273f), new Vector3(1861.845f, 123.7287f, 21.63738f), new Vector3(1859.553f, 125.828f, 22.63635f), new Vector3(1857.576f, 128.2882f, 22.64677f), new Vector3(1855.742f, 130.6929f, 22.85103f), new Vector3(1854.02f, 133.2948f, 23.00461f), new Vector3(1852.524f, 135.9461f, 22.69405f), new Vector3(1851.219f, 138.8084f, 22.38069f), new Vector3(1850.374f, 141.9289f, 21.9026f), new Vector3(1849.909f, 145.0057f, 21.06313f), new Vector3(1849.862f, 148.3353f, 20.4461f), new Vector3(1850.425f, 151.2858f, 19.95482f), new Vector3(1852.387f, 153.9186f, 19.14335f), new Vector3(1854.896f, 155.722f, 18.63572f), new Vector3(1857.657f, 157.1323f, 17.18044f), new Vector3(1860.406f, 158.7924f, 16.23911f), new Vector3(1862.977f, 160.6791f, 14.90828f), new Vector3(1865.345f, 162.9379f, 13.67438f), new Vector3(1867.591f, 165.3132f, 12.53116f), new Vector3(1869.731f, 167.6434f, 11.82342f), new Vector3(1871.823f, 170.0257f, 10.90431f), new Vector3(1873.819f, 172.4957f, 10.11813f), new Vector3(1872.037f, 169.7908f, 10.86811f), new Vector3(1869.881f, 167.3741f, 11.81295f), new Vector3(1867.615f, 165.2485f, 12.54579f), new Vector3(1865.188f, 163.2854f, 13.67057f), new Vector3(1862.776f, 161.474f, 14.73522f), new Vector3(1860.023f, 159.6366f, 15.80581f), new Vector3(1857.444f, 158.143f, 16.92583f), new Vector3(1854.663f, 156.7722f, 18.35767f), new Vector3(1851.675f, 155.6053f, 18.71946f), new Vector3(1848.567f, 154.969f, 18.56948f), new Vector3(1845.512f, 155.8679f, 18.07312f), new Vector3(1843.069f, 157.673f, 17.96441f), new Vector3(1841.44f, 160.247f, 18.22163f), new Vector3(1840.538f, 163.4172f, 17.42895f), new Vector3(1840.094f, 166.457f, 16.73241f), new Vector3(1839.899f, 169.5866f, 16.0916f), new Vector3(1839.767f, 172.979f, 15.24287f), new Vector3(1839.712f, 176.1282f, 14.4498f), new Vector3(1839.757f, 179.1939f, 13.52658f), new Vector3(1839.858f, 182.4613f, 12.62684f), new Vector3(1839.674f, 179.2648f, 13.52312f), new Vector3(1839.768f, 175.9342f, 14.4979f), new Vector3(1839.906f, 172.7036f, 15.26054f), new Vector3(1840.267f, 169.3912f, 16.01094f), new Vector3(1840.734f, 166.0714f, 16.67466f), new Vector3(1841.336f, 163.016f, 17.45079f), new Vector3(1842.118f, 159.9793f, 18.15833f), new Vector3(1842.875f, 156.9439f, 18.24058f), new Vector3(1843.24f, 153.7464f, 18.87287f), new Vector3(1842.407f, 150.8083f, 19.90528f), new Vector3(1839.871f, 148.7105f, 21.0998f), new Vector3(1839.822f, 145.5834f, 21.60407f), new Vector3(1841.757f, 143.0349f, 21.30878f), new Vector3(1843.189f, 139.7351f, 21.51742f), new Vector3(1843.461f, 136.5797f, 22.47635f), new Vector3(1842.01f, 133.1803f, 22.71679f), new Vector3(1840.053f, 130.6507f, 22.87895f), new Vector3(1838.854f, 127.762f, 22.83843f), new Vector3(1839.82f, 124.0498f, 23.00961f), new Vector3(1842.096f, 121.8789f, 22.74585f), new Vector3(1844.799f, 120.2478f, 22.60929f), new Vector3(1847.869f, 119.5188f, 22.22155f), new Vector3(1850.903f, 118.9518f, 22.24215f), new Vector3(1853.884f, 118.4424f, 22.25541f), new Vector3(1856.928f, 117.766f, 22.14018f), new Vector3(1859.815f, 116.9202f, 21.95543f), new Vector3(1863.035f, 116.5222f, 21.89919f), new Vector3(1866.049f, 116.2837f, 21.93388f), new Vector3(1869.259f, 116.0297f, 21.86612f), new Vector3(1872.388f, 115.8108f, 21.73056f), new Vector3(1875.593f, 115.5952f, 21.87519f), new Vector3(1878.883f, 115.3738f, 22.80556f), new Vector3(1882.081f, 115.1586f, 23.37511f), new Vector3(1885.252f, 114.9453f, 23.60696f), new Vector3(1888.248f, 114.7437f, 23.76832f), new Vector3(1891.338f, 114.4841f, 23.96472f), new Vector3(1894.394f, 113.9613f, 24.1643f), new Vector3(1897.854f, 112.9461f, 24.40681f), new Vector3(1900.551f, 111.549f, 24.96776f), new Vector3(1903.27f, 110.0858f, 25.30548f), new Vector3(1906.092f, 108.3876f, 25.75441f), new Vector3(1908.799f, 106.5166f, 26.29059f), new Vector3(1911.105f, 104.5302f, 26.63129f), new Vector3(1912.744f, 101.5947f, 26.63832f), new Vector3(1913.816f, 98.7076f, 26.62757f), new Vector3(1914.645f, 95.7505f, 27.18189f), new Vector3(1915.159f, 92.67195f, 27.84089f), new Vector3(1915.347f, 89.52161f, 29.04874f), new Vector3(1915.08f, 86.29979f, 30.28253f), new Vector3(1913.992f, 83.37599f, 31.01634f), new Vector3(1912.62f, 80.70493f, 31.55463f), new Vector3(1911.101f, 78.00285f, 31.98036f), new Vector3(1909.453f, 75.24437f, 32.38439f), new Vector3(1907.975f, 72.60696f, 32.75837f), new Vector3(1906.635f, 69.80387f, 33.41182f), new Vector3(1905.464f, 66.82801f, 33.41798f), new Vector3(1904.725f, 63.74246f, 33.80282f), new Vector3(1904.681f, 59.82082f, 33.77956f), new Vector3(1905.644f, 56.81439f, 32.99257f), new Vector3(1907.791f, 54.44451f, 32.74617f), new Vector3(1910.336f, 52.75591f, 32.60263f), new Vector3(1913.535f, 53.02599f, 32.47989f), new Vector3(1914.641f, 55.93854f, 32.43612f), new Vector3(1914.879f, 59.07422f, 32.56527f), new Vector3(1914.351f, 62.22431f, 32.77718f), new Vector3(1914.358f, 65.58215f, 33.01457f), new Vector3(1914.737f, 68.7427f, 33.27498f), new Vector3(1915.469f, 71.90676f, 33.39715f), new Vector3(1916.378f, 75.01595f, 33.11163f), new Vector3(1917.549f, 77.8991f, 32.91407f), new Vector3(1919.015f, 80.5577f, 32.08884f), new Vector3(1922.063f, 79.08732f, 32.32445f), new Vector3(1923.911f, 76.50122f, 33.59082f), new Vector3(1924.561f, 73.90827f, 35.57947f), new Vector3(1924.392f, 71.36892f, 37.5415f), new Vector3(1924.046f, 68.30855f, 38.19757f), new Vector3(1923.733f, 65.13192f, 38.15057f), new Vector3(1923.557f, 62.05002f, 39.2835f), new Vector3(1923.389f, 59.63391f, 41.16312f), new Vector3(1923.143f, 56.52164f, 43.57306f), new Vector3(1922.77f, 53.34776f, 44.83272f), new Vector3(1921.354f, 50.65598f, 44.79728f), new Vector3(1918.642f, 49.29344f, 44.86258f), new Vector3(1916.267f, 49.04937f, 46.76969f), new Vector3(1913.636f, 49.13311f, 48.81553f), new Vector3(1910.468f, 49.36584f, 49.7257f), new Vector3(1907.292f, 49.67726f, 49.75042f), new Vector3(1904.151f, 49.76913f, 49.75042f), new Vector3(1900.85f, 49.52305f, 49.14265f), new Vector3(1897.67f, 49.17367f, 49.03186f), new Vector3(1894.642f, 48.79249f, 50.10346f), new Vector3(1891.701f, 48.39857f, 51.48626f), new Vector3(1888.44f, 47.96191f, 53.19333f), new Vector3(1885.387f, 47.55313f, 54.80527f), new Vector3(1882.209f, 47.12762f, 56.30101f), new Vector3(1879.156f, 46.71884f, 58.01748f), new Vector3(1876.63f, 46.38437f, 59.7179f), new Vector3(1873.464f, 46.4732f, 61.76744f), new Vector3(1870.557f, 47.48742f, 63.13355f), new Vector3(1867.839f, 49.06232f, 63.79391f), new Vector3(1866.227f, 51.65471f, 63.8825f), new Vector3(1865.414f, 54.50624f, 65.37548f), new Vector3(1865.058f, 57.11552f, 66.86575f), new Vector3(1865.18f, 60.26911f, 68.61308f), new Vector3(1865.458f, 63.4132f, 69.93024f), new Vector3(1866.278f, 66.56625f, 71.34974f), new Vector3(1867.745f, 69.24464f, 72.71436f), new Vector3(1869.793f, 71.81563f, 74.41428f), new Vector3(1871.901f, 73.98358f, 75.95185f), new Vector3(1874.306f, 75.98135f, 77.49348f), new Vector3(1876.922f, 77.88213f, 79.02062f), new Vector3(1879.66f, 79.62953f, 80.4722f), new Vector3(1882.382f, 81.15691f, 81.82475f), new Vector3(1884.937f, 82.53941f, 83.32137f), new Vector3(1887.65f, 83.95265f, 84.41313f), new Vector3(1890.472f, 85.45864f, 84.41313f), new Vector3(1893.338f, 87.05975f, 84.34918f), new Vector3(1896.168f, 88.66874f, 83.85063f), new Vector3(1898.79f, 90.20235f, 83.52689f), new Vector3(1901.423f, 91.76048f, 83.52689f), new Vector3(1904.139f, 93.40968f, 83.52689f)};\r\n\r\nG[\"GarrsionSafePointsAllianceV1Plot59Mine\"] = v;\r\n\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Alliance Version 2 Mine......................................................................\r\nVector3[] v = new Vector3[] {new Vector3(1891.183f, 86.11242f, 84.41322f), new Vector3(1888.072f, 84.69537f, 84.41322f), new Vector3(1884.928f, 83.16558f, 83.56426f), new Vector3(1882.565f, 81.98725f, 82.05995f), new Vector3(1879.468f, 80.39861f, 80.56647f), new Vector3(1876.498f, 78.84994f, 79.09102f), new Vector3(1873.489f, 77.16399f, 77.46352f), new Vector3(1870.61f, 75.26592f, 75.83192f), new Vector3(1868.005f, 72.86561f, 74.15277f), new Vector3(1866.173f, 69.95837f, 72.60223f), new Vector3(1864.908f, 66.74372f, 71.03661f), new Vector3(1864.243f, 63.4947f, 69.71001f), new Vector3(1864.063f, 60.07711f, 68.33854f), new Vector3(1864.229f, 56.73946f, 66.45949f), new Vector3(1864.719f, 53.22649f, 64.60434f), new Vector3(1865.615f, 49.95559f, 63.90087f), new Vector3(1867.287f, 46.90689f, 63.88322f), new Vector3(1870.057f, 45.1481f, 63.22217f), new Vector3(1873.47f, 44.44744f, 61.73759f), new Vector3(1876.049f, 44.40674f, 60.08356f), new Vector3(1879.48f, 44.50551f, 57.82564f), new Vector3(1882.288f, 44.88774f, 56.399f), new Vector3(1885.527f, 45.40147f, 54.97066f), new Vector3(1888.837f, 46.12197f, 53.21578f), new Vector3(1892.215f, 46.99073f, 51.4133f), new Vector3(1895.607f, 47.89952f, 49.89544f), new Vector3(1899.015f, 48.59964f, 49.2222f), new Vector3(1902.35f, 49.03797f, 49.68107f), new Vector3(1905.694f, 48.89718f, 49.75173f), new Vector3(1909.15f, 48.64871f, 49.74839f), new Vector3(1912.61f, 48.48019f, 49.59589f), new Vector3(1915.196f, 48.4006f, 47.61387f), new Vector3(1917.66f, 48.43075f, 45.67535f), new Vector3(1920.985f, 48.49709f, 44.73869f), new Vector3(1924.416f, 48.64791f, 44.78865f), new Vector3(1923.979f, 51.81342f, 44.86345f), new Vector3(1923.637f, 55.07491f, 44.64158f), new Vector3(1923.426f, 57.60718f, 42.73965f), new Vector3(1923.229f, 60.04008f, 40.84124f), new Vector3(1923.042f, 62.73627f, 38.73086f), new Vector3(1922.914f, 66.15266f, 38.14957f), new Vector3(1922.794f, 69.49232f, 38.18989f), new Vector3(1922.672f, 73.11694f, 36.14295f), new Vector3(1922.616f, 75.84985f, 34.03721f), new Vector3(1922.606f, 78.70627f, 32.40785f), new Vector3(1922.804f, 82.06504f, 31.57599f), new Vector3(1923.118f, 85.39178f, 30.95141f), new Vector3(1923.576f, 88.94879f, 29.56304f), new Vector3(1924.295f, 92.22732f, 28.64493f), new Vector3(1925.632f, 95.41953f, 28.23099f), new Vector3(1928.098f, 97.98029f, 28.04593f), new Vector3(1930.953f, 99.67846f, 27.68394f), new Vector3(1934.205f, 99.70834f, 27.60625f), new Vector3(1935.191f, 102.9749f, 27.11984f), new Vector3(1937.168f, 106.047f, 26.65491f), new Vector3(1939.105f, 108.579f, 26.25289f), new Vector3(1941.348f, 111.4731f, 25.78485f), new Vector3(1942.89f, 114.6002f, 25.23435f), new Vector3(1944.406f, 117.7369f, 24.38165f), new Vector3(1946.282f, 120.5346f, 23.79463f), new Vector3(1948.678f, 122.8967f, 23.28281f), new Vector3(1951.678f, 124.9139f, 22.26521f), new Vector3(1954.991f, 126.3097f, 21.55676f), new Vector3(1958.37f, 127.1027f, 20.80203f), new Vector3(1961.934f, 127.4285f, 19.78137f), new Vector3(1965.512f, 127.5536f, 19.13617f), new Vector3(1968.928f, 127.1441f, 19.05531f), new Vector3(1972.403f, 125.9048f, 18.98554f), new Vector3(1975.294f, 124.0458f, 18.84232f), new Vector3(1977.918f, 122.028f, 18.81504f), new Vector3(1980.669f, 119.6198f, 19.32021f), new Vector3(1982.929f, 116.9632f, 19.24862f), new Vector3(1983.039f, 113.5546f, 19.48488f), new Vector3(1981.999f, 110.1033f, 20.02073f), new Vector3(1979.873f, 107.3096f, 20.49024f), new Vector3(1977.269f, 105.102f, 20.0957f), new Vector3(1974.313f, 103.2041f, 19.33861f), new Vector3(1971.606f, 101.3316f, 18.54655f), new Vector3(1969.285f, 98.8978f, 17.62906f), new Vector3(1967.569f, 96.11497f, 16.81328f), new Vector3(1966.071f, 92.67233f, 15.85933f), new Vector3(1965.057f, 89.21838f, 14.77608f), new Vector3(1965.031f, 85.84896f, 14.28785f), new Vector3(1965.545f, 82.41592f, 14.04377f), new Vector3(1966.746f, 79.27666f, 14.04377f), new Vector3(1968.948f, 76.44947f, 14.21906f), new Vector3(1971.45f, 74.26353f, 14.11694f), new Vector3(1974.388f, 72.43782f, 14.22074f), new Vector3(1977.619f, 71.55392f, 14.46669f), new Vector3(1981.254f, 70.95181f, 14.69269f), new Vector3(1984.521f, 71.73882f, 14.74307f), new Vector3(1987.811f, 73.14657f, 14.88927f), new Vector3(1991.015f, 74.63683f, 15.10051f), new Vector3(1994.376f, 75.8298f, 15.37009f), new Vector3(1997.746f, 75.76137f, 14.8076f), new Vector3(2000.784f, 74.21916f, 13.64822f), new Vector3(2003.515f, 72.35126f, 13.13495f), new Vector3(2006.912f, 71.06051f, 12.57268f), new Vector3(2009.964f, 72.17997f, 12.00815f), new Vector3(2012.011f, 74.83961f, 11.94235f), new Vector3(2012.505f, 78.06395f, 12.07097f), new Vector3(2010.602f, 81.06544f, 12.43886f), new Vector3(2008.193f, 83.24415f, 12.98792f), new Vector3(2005.56f, 85.35184f, 14.33669f), new Vector3(2002.958f, 87.4584f, 15.68237f), new Vector3(2000.551f, 89.96992f, 17.40203f), new Vector3(1998.651f, 92.87611f, 18.47966f), new Vector3(1996.94f, 95.8695f, 19.07802f), new Vector3(1995.568f, 99.14251f, 19.17588f), new Vector3(1994.566f, 102.5474f, 19.64151f), new Vector3(1993.031f, 105.8674f, 19.74152f), new Vector3(1991.442f, 109.0284f, 19.76393f), new Vector3(1990.184f, 111.9636f, 19.82196f), new Vector3(1988.705f, 115.4306f, 19.44759f), new Vector3(1988.709f, 118.7967f, 19.9868f), new Vector3(1991.053f, 121.3444f, 20.958f), new Vector3(1993.379f, 123.765f, 21.12597f), new Vector3(1993.804f, 127.1687f, 20.69873f), new Vector3(1991.334f, 129.0554f, 19.96696f), new Vector3(1987.903f, 130.4949f, 20.32906f), new Vector3(1984.419f, 131.2864f, 20.29962f), new Vector3(1980.806f, 131.837f, 20.24682f), new Vector3(1977.38f, 131.4521f, 20.09578f), new Vector3(1974.038f, 130.5709f, 19.45378f), new Vector3(1970.783f, 129.6913f, 19.09744f), new Vector3(1967.369f, 129.0343f, 19.10889f), new Vector3(1964.052f, 128.7019f, 19.1915f), new Vector3(1960.604f, 128.3607f, 20.13593f), new Vector3(1957.312f, 128.0064f, 21.10046f), new Vector3(1953.922f, 127.373f, 21.74619f), new Vector3(1950.521f, 126.6687f, 22.17761f), new Vector3(1947.192f, 125.9282f, 22.47471f), new Vector3(1943.719f, 125.0592f, 22.74121f), new Vector3(1940.328f, 125.0416f, 22.98356f), new Vector3(1936.864f, 124.3015f, 23.36356f), new Vector3(1933.968f, 122.089f, 23.72931f), new Vector3(1931.928f, 119.1656f, 24.03892f), new Vector3(1929.808f, 116.2277f, 25.37126f), new Vector3(1926.729f, 114.5988f, 25.33288f), new Vector3(1923.208f, 114.5514f, 25.1301f), new Vector3(1919.906f, 114.9503f, 25.66715f), new Vector3(1916.46f, 114.9507f, 25.48655f), new Vector3(1913.039f, 115.3019f, 25.17393f), new Vector3(1909.558f, 115.9952f, 24.8364f), new Vector3(1906.081f, 116.7475f, 24.58804f), new Vector3(1903.077f, 118.0358f, 24.32093f), new Vector3(1900.562f, 120.3478f, 24.04756f), new Vector3(1898.613f, 123.7284f, 23.73368f), new Vector3(1895.122f, 123.3848f, 23.54212f), new Vector3(1892.782f, 120.897f, 23.56549f), new Vector3(1889.917f, 118.9326f, 23.64638f), new Vector3(1886.642f, 118.0767f, 23.67693f), new Vector3(1883.272f, 117.7831f, 23.42317f), new Vector3(1879.916f, 118.0308f, 23.0844f), new Vector3(1876.338f, 118.5059f, 22.18256f), new Vector3(1873.031f, 119.1276f, 21.52657f), new Vector3(1869.536f, 120.0039f, 21.38855f), new Vector3(1866.176f, 121.0543f, 21.26859f), new Vector3(1862.935f, 122.2722f, 21.29151f), new Vector3(1860.207f, 124.3965f, 22.1727f), new Vector3(1857.704f, 126.8007f, 22.66941f), new Vector3(1855.557f, 129.5839f, 22.82704f), new Vector3(1853.507f, 132.9064f, 22.99605f), new Vector3(1851.748f, 136.3952f, 22.53127f), new Vector3(1850.604f, 139.377f, 22.15882f), new Vector3(1849.838f, 142.7204f, 21.70554f), new Vector3(1849.655f, 146.3544f, 20.76686f), new Vector3(1849.938f, 149.7299f, 20.21967f), new Vector3(1851.178f, 153.0845f, 19.40795f), new Vector3(1853.444f, 155.5864f, 18.72268f), new Vector3(1856.642f, 156.9691f, 17.61807f), new Vector3(1859.632f, 158.5004f, 16.41567f), new Vector3(1862.235f, 160.5145f, 15.14474f), new Vector3(1864.652f, 163.0506f, 13.82587f), new Vector3(1867.145f, 165.664f, 12.61213f), new Vector3(1869.672f, 168.2431f, 11.76372f), new Vector3(1871.807f, 170.9774f, 10.8013f), new Vector3(1873.479f, 173.4809f, 10.18236f), new Vector3(1871.523f, 170.6543f, 10.92104f), new Vector3(1869.359f, 167.85f, 11.90746f), new Vector3(1866.969f, 165.2486f, 12.71159f), new Vector3(1864.399f, 162.8109f, 13.87909f), new Vector3(1861.773f, 160.4232f, 15.11441f), new Vector3(1859.083f, 158.3142f, 16.57763f), new Vector3(1856.351f, 156.5011f, 17.88277f), new Vector3(1853.196f, 154.8931f, 18.85553f), new Vector3(1850.02f, 153.6368f, 19.30154f), new Vector3(1846.529f, 153.472f, 18.78281f), new Vector3(1844.346f, 155.6517f, 18.09342f), new Vector3(1842.425f, 158.7553f, 18.09784f), new Vector3(1841.354f, 161.9268f, 17.75463f), new Vector3(1840.668f, 165.3703f, 16.87774f), new Vector3(1840.021f, 168.6724f, 16.24183f), new Vector3(1839.561f, 172.0571f, 15.49435f), new Vector3(1839.638f, 175.643f, 14.61707f), new Vector3(1839.917f, 179.0114f, 13.54385f), new Vector3(1840.321f, 182.3363f, 12.59913f), new Vector3(1840.594f, 179.2475f, 13.37746f), new Vector3(1840.883f, 175.8273f, 14.28916f), new Vector3(1841.062f, 172.3669f, 15.00194f), new Vector3(1841.222f, 168.8209f, 15.83297f), new Vector3(1841.485f, 165.1597f, 16.84885f), new Vector3(1842.08f, 161.6683f, 17.80929f), new Vector3(1842.641f, 158.0635f, 18.06964f), new Vector3(1842.788f, 154.7427f, 18.83724f), new Vector3(1842.008f, 151.7261f, 19.96953f), new Vector3(1839.761f, 149.0415f, 21.03561f), new Vector3(1836.779f, 146.9934f, 21.99905f), new Vector3(1837.916f, 144.0322f, 22.15247f), new Vector3(1840.455f, 141.6641f, 21.79398f), new Vector3(1842.68f, 138.9993f, 21.71145f), new Vector3(1843.109f, 135.7185f, 22.57508f), new Vector3(1841.666f, 132.7709f, 22.72325f), new Vector3(1839.838f, 129.8556f, 22.90696f), new Vector3(1839.278f, 126.6277f, 22.90613f), new Vector3(1840.745f, 123.3457f, 22.91659f), new Vector3(1843.279f, 120.9671f, 22.66836f), new Vector3(1846.313f, 119.7117f, 22.36393f), new Vector3(1850.05f, 119.0922f, 22.23591f), new Vector3(1853.262f, 118.3018f, 22.24817f), new Vector3(1856.517f, 116.8763f, 22.12866f), new Vector3(1859.933f, 115.9413f, 21.95418f), new Vector3(1863.318f, 115.6345f, 21.95391f), new Vector3(1866.613f, 115.6359f, 21.97635f), new Vector3(1870.224f, 115.5638f, 21.99265f), new Vector3(1873.733f, 115.1807f, 21.89949f), new Vector3(1877.175f, 114.7962f, 22.31453f), new Vector3(1880.643f, 114.6205f, 23.27837f), new Vector3(1884.119f, 114.5767f, 23.52732f), new Vector3(1887.498f, 114.817f, 23.74107f), new Vector3(1891.092f, 115.0582f, 23.91753f), new Vector3(1894.424f, 114.8674f, 24.10423f), new Vector3(1897.867f, 113.9704f, 24.33812f), new Vector3(1901.066f, 112.7202f, 24.72867f), new Vector3(1904.378f, 111.2146f, 25.2555f), new Vector3(1907.398f, 109.2669f, 25.78657f), new Vector3(1909.951f, 106.9216f, 26.54566f), new Vector3(1911.823f, 103.9935f, 26.6749f), new Vector3(1913.141f, 101.2023f, 26.64124f), new Vector3(1914.47f, 97.51672f, 26.82175f), new Vector3(1915.237f, 94.30704f, 27.48206f), new Vector3(1915.464f, 90.73789f, 28.54273f), new Vector3(1915.262f, 87.25027f, 29.90844f), new Vector3(1914.566f, 83.92747f, 30.86201f), new Vector3(1913.028f, 80.90818f, 31.52481f), new Vector3(1911.157f, 77.88219f, 31.99551f), new Vector3(1909.256f, 74.80352f, 32.44591f), new Vector3(1907.579f, 71.75409f, 32.8769f), new Vector3(1906.135f, 68.40315f, 33.47076f), new Vector3(1905.151f, 65.0332f, 33.80475f), new Vector3(1904.449f, 61.61261f, 33.78925f), new Vector3(1904.604f, 58.12858f, 33.44852f), new Vector3(1905.902f, 55.1196f, 32.84672f), new Vector3(1908.955f, 53.29808f, 32.65554f), new Vector3(1912.728f, 52.94323f, 32.51105f), new Vector3(1914.059f, 55.81333f, 32.45954f), new Vector3(1914.787f, 59.04518f, 32.571f), new Vector3(1915.006f, 62.60419f, 32.73477f), new Vector3(1915.044f, 65.93038f, 32.9631f), new Vector3(1915.131f, 69.44713f, 33.35851f), new Vector3(1915.626f, 72.83685f, 33.32662f), new Vector3(1916.619f, 76.3531f, 32.98792f), new Vector3(1918.069f, 79.44849f, 32.40163f), new Vector3(1920.537f, 82.39777f, 31.54851f), new Vector3(1923.198f, 80.72643f, 31.89078f), new Vector3(1924.114f, 77.82686f, 32.59793f), new Vector3(1924.972f, 74.66851f, 35.00384f), new Vector3(1924.914f, 72.01739f, 37.05576f), new Vector3(1924.252f, 68.69606f, 38.20652f), new Vector3(1923.903f, 65.21799f, 38.15525f), new Vector3(1923.732f, 62.09715f, 39.25378f), new Vector3(1923.806f, 59.09574f, 41.60165f), new Vector3(1923.758f, 56.46439f, 43.64018f), new Vector3(1923.197f, 53.19218f, 44.83868f), new Vector3(1921.244f, 50.24854f, 44.78373f), new Vector3(1918.365f, 48.4713f, 45.11229f), new Vector3(1915.757f, 48.36394f, 47.17935f), new Vector3(1913.24f, 48.29925f, 49.13116f), new Vector3(1909.878f, 48.36372f, 49.73402f), new Vector3(1906.454f, 48.78753f, 49.75057f), new Vector3(1903.168f, 49.18965f, 49.75057f), new Vector3(1899.603f, 49.28069f, 49.08519f), new Vector3(1896.112f, 49.09613f, 49.58295f), new Vector3(1893.203f, 48.87108f, 50.65421f), new Vector3(1889.819f, 48.44389f, 52.42844f), new Vector3(1886.32f, 48.00032f, 54.31581f), new Vector3(1882.952f, 47.56541f, 55.99038f), new Vector3(1879.608f, 47.12806f, 57.75532f), new Vector3(1876.256f, 46.78201f, 59.97652f), new Vector3(1873.593f, 46.94793f, 61.70329f), new Vector3(1870.286f, 47.92962f, 63.28754f), new Vector3(1867.334f, 50.12136f, 63.81305f), new Vector3(1865.733f, 53.18319f, 64.62581f), new Vector3(1865.271f, 56.48239f, 66.50706f), new Vector3(1865.293f, 59.2994f, 68.09712f), new Vector3(1865.924f, 62.79878f, 69.6799f), new Vector3(1866.892f, 66.08384f, 71.19659f), new Vector3(1867.948f, 68.6702f, 72.49307f), new Vector3(1869.614f, 71.36631f, 74.14145f), new Vector3(1871.521f, 73.23305f, 75.53757f), new Vector3(1874.239f, 75.28828f, 77.27188f), new Vector3(1877.027f, 77.03094f, 78.83341f), new Vector3(1880.028f, 78.89835f, 80.49807f), new Vector3(1883.047f, 80.80925f, 82.04805f), new Vector3(1885.913f, 82.63005f, 84.06789f), new Vector3(1888.864f, 84.50414f, 84.41321f), new Vector3(1891.919f, 86.41484f, 84.39463f), new Vector3(1894.918f, 88.28442f, 84.1935f), new Vector3(1898.016f, 90.20098f, 83.52687f), new Vector3(1901.086f, 92.10216f, 83.52687f), new Vector3(1903.901f, 94.05242f, 83.52687f)};\r\n\r\nG[\"GarrsionSafePointsAllianceV2Plot59Mine\"] = v;\r\n\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//Alliance Version 3 Mine......................................................................\r\nVector3[] v = new Vector3[] {new Vector3(1892.245f, 86.6359f, 84.36042f), new Vector3(1889.512f, 85.25196f, 84.3921f), new Vector3(1886.019f, 83.50536f, 84.3921f), new Vector3(1883.368f, 82.18017f, 82.38971f), new Vector3(1880.776f, 80.88451f, 81.1365f), new Vector3(1877.532f, 79.25033f, 79.58551f), new Vector3(1875.058f, 77.80527f, 78.22979f), new Vector3(1872.708f, 76.33215f, 76.92073f), new Vector3(1870.364f, 74.47176f, 75.51144f), new Vector3(1868.406f, 71.91218f, 74.00636f), new Vector3(1867.143f, 69.37364f, 72.64636f), new Vector3(1865.929f, 66.48073f, 71.22607f), new Vector3(1864.978f, 62.90469f, 69.61352f), new Vector3(1864.675f, 60.07269f, 68.53632f), new Vector3(1864.526f, 57.26311f, 66.81978f), new Vector3(1864.702f, 54.57189f, 65.34858f), new Vector3(1865.245f, 51.785f, 63.87959f), new Vector3(1866.793f, 48.33289f, 63.87959f), new Vector3(1869.85f, 46.1878f, 63.28338f), new Vector3(1873.406f, 45.2534f, 61.75356f), new Vector3(1876.35f, 45.3924f, 59.88087f), new Vector3(1879.248f, 45.45108f, 57.9505f), new Vector3(1881.901f, 45.59327f, 56.51464f), new Vector3(1885.547f, 46.14642f, 54.86079f), new Vector3(1888.6f, 46.93309f, 53.2112f), new Vector3(1891.447f, 47.69678f, 51.6866f), new Vector3(1894.16f, 48.38397f, 50.26045f), new Vector3(1897.461f, 49.27173f, 49.03088f), new Vector3(1900.835f, 49.80143f, 49.10256f), new Vector3(1903.905f, 49.51823f, 49.72993f), new Vector3(1907.369f, 49.16058f, 49.72993f), new Vector3(1910.95f, 48.74369f, 49.69628f), new Vector3(1913.928f, 48.48715f, 48.57272f), new Vector3(1916.568f, 48.39616f, 46.52498f), new Vector3(1919.209f, 48.36326f, 44.69801f), new Vector3(1922.938f, 48.56727f, 44.74562f), new Vector3(1922.768f, 52.01773f, 44.82635f), new Vector3(1922.926f, 55.8371f, 44.07678f), new Vector3(1923.096f, 59.10211f, 41.55095f), new Vector3(1923.192f, 62.48553f, 38.90818f), new Vector3(1923.197f, 66.25778f, 38.13329f), new Vector3(1923.101f, 69.43496f, 38.17279f), new Vector3(1922.937f, 72.99773f, 36.2162f), new Vector3(1922.805f, 75.39661f, 34.3648f), new Vector3(1922.658f, 78.5469f, 32.42564f), new Vector3(1922.566f, 82.02977f, 31.57057f), new Vector3(1922.542f, 85.16705f, 31.06741f), new Vector3(1922.689f, 88.40524f, 29.65499f), new Vector3(1923.348f, 91.36606f, 28.82637f), new Vector3(1924.919f, 94.4766f, 28.18119f), new Vector3(1927.238f, 96.81651f, 28.12656f), new Vector3(1929.773f, 98.97192f, 27.81304f), new Vector3(1932.379f, 101.2214f, 27.41222f), new Vector3(1935.1f, 103.6525f, 27.03579f), new Vector3(1937.368f, 105.7359f, 26.65789f), new Vector3(1939.928f, 108.3084f, 26.19572f), new Vector3(1942.125f, 111.5301f, 25.73534f), new Vector3(1943.386f, 114.6516f, 25.19854f), new Vector3(1944.858f, 118.0916f, 24.27194f), new Vector3(1946.701f, 120.9684f, 23.69633f), new Vector3(1949.135f, 123.7859f, 22.65477f), new Vector3(1952.252f, 125.6731f, 22.07144f), new Vector3(1955.834f, 126.7471f, 21.2961f), new Vector3(1958.77f, 127.3806f, 20.66927f), new Vector3(1962.363f, 127.6921f, 19.62848f), new Vector3(1966.041f, 127.8799f, 19.10408f), new Vector3(1969.706f, 127.8271f, 19.04275f), new Vector3(1972.698f, 126.8872f, 18.98341f), new Vector3(1975.776f, 124.876f, 18.86297f), new Vector3(1978.571f, 122.1881f, 18.60542f), new Vector3(1981.226f, 119.2469f, 19.27692f), new Vector3(1982.984f, 116.2183f, 19.28487f), new Vector3(1983.291f, 112.7821f, 19.46046f), new Vector3(1982.207f, 109.9311f, 20.00099f), new Vector3(1979.918f, 107.0829f, 20.4509f), new Vector3(1977.014f, 104.4968f, 19.96781f), new Vector3(1974.314f, 101.9966f, 19.00643f), new Vector3(1971.656f, 99.40022f, 18.07518f), new Vector3(1969.219f, 96.66928f, 17.07475f), new Vector3(1967.586f, 93.43861f, 16.15106f), new Vector3(1966.477f, 90.11199f, 15.0233f), new Vector3(1965.948f, 86.83783f, 14.04687f), new Vector3(1966.181f, 83.14169f, 14.0953f), new Vector3(1967.174f, 79.6621f, 14.07281f), new Vector3(1968.944f, 76.26412f, 14.17415f), new Vector3(1971.557f, 73.60156f, 14.04315f), new Vector3(1974.905f, 72.1086f, 14.23294f), new Vector3(1978.629f, 71.46971f, 14.68803f), new Vector3(1982.446f, 71.52559f, 14.98517f), new Vector3(1986.179f, 72.50898f, 14.79535f), new Vector3(1989.889f, 73.8939f, 15.33441f), new Vector3(1993.195f, 75.47517f, 15.2613f), new Vector3(1997.005f, 76.11489f, 14.96883f), new Vector3(2000.61f, 75.53849f, 13.8903f), new Vector3(2003.675f, 73.70725f, 13.35667f), new Vector3(2007.161f, 72.54838f, 12.56366f), new Vector3(2010.727f, 72.95476f, 11.95017f), new Vector3(2013.487f, 75.11418f, 11.78141f), new Vector3(2013.778f, 78.77141f, 12.06524f), new Vector3(2012.458f, 81.63791f, 12.77855f), new Vector3(2009.681f, 84.14451f, 13.26538f), new Vector3(2006.836f, 86.3758f, 14.75923f), new Vector3(2004.435f, 88.14123f, 15.90523f), new Vector3(2002.201f, 89.8191f, 17.06414f), new Vector3(2000.248f, 91.87099f, 18.08135f), new Vector3(1998.242f, 94.94807f, 18.78945f), new Vector3(1996.5f, 98.10688f, 19.12306f), new Vector3(1994.871f, 101.4461f, 19.5168f), new Vector3(1993.204f, 104.9413f, 19.63107f), new Vector3(1991.26f, 108.2308f, 19.65997f), new Vector3(1989.662f, 111.5799f, 19.60913f), new Vector3(1988.585f, 114.6824f, 19.43163f), new Vector3(1987.602f, 118.4187f, 19.26718f), new Vector3(1987.022f, 122.1548f, 20.16886f), new Vector3(1987.5f, 125.9434f, 20.36588f), new Vector3(1988.219f, 129.0245f, 20.3265f), new Vector3(1985.398f, 130.349f, 20.30569f), new Vector3(1981.741f, 131.0418f, 20.2357f), new Vector3(1978.675f, 131.011f, 20.08142f), new Vector3(1975.075f, 130.7093f, 19.48199f), new Vector3(1971.464f, 130.0347f, 19.16903f), new Vector3(1968.314f, 129.4963f, 19.09168f), new Vector3(1964.56f, 128.9212f, 19.16044f), new Vector3(1960.768f, 128.4456f, 20.06498f), new Vector3(1957.9f, 128.0896f, 20.96459f), new Vector3(1954.232f, 127.6103f, 21.68506f), new Vector3(1950.579f, 127.0894f, 22.2056f), new Vector3(1947.581f, 126.6504f, 22.4853f), new Vector3(1943.792f, 126.1422f, 22.78103f), new Vector3(1939.933f, 125.7606f, 23.02167f), new Vector3(1936.349f, 125.1693f, 23.4088f), new Vector3(1932.635f, 123.827f, 23.84872f), new Vector3(1929.183f, 122.2052f, 24.29792f), new Vector3(1926.036f, 120.6916f, 24.35812f), new Vector3(1922.738f, 119.9586f, 24.65303f), new Vector3(1919.107f, 118.9917f, 24.55288f), new Vector3(1915.675f, 117.5648f, 25.42053f), new Vector3(1912.597f, 117.4229f, 25.35254f), new Vector3(1908.93f, 117.9056f, 25.12214f), new Vector3(1905.382f, 118.4601f, 24.83333f), new Vector3(1901.777f, 119.6547f, 24.13025f), new Vector3(1898.534f, 121.4873f, 23.84125f), new Vector3(1896.42f, 124.2948f, 23.54635f), new Vector3(1894.979f, 127.8065f, 23.21851f), new Vector3(1894.361f, 131.2595f, 23.31781f), new Vector3(1894.236f, 134.2613f, 23.3086f), new Vector3(1894.285f, 137.9837f, 22.97046f), new Vector3(1894.698f, 141.6322f, 22.96682f), new Vector3(1895.597f, 145.3187f, 23.0781f), new Vector3(1897.009f, 148.6601f, 23.27609f), new Vector3(1898.647f, 152.1308f, 23.5275f), new Vector3(1899.65f, 155.5846f, 23.47811f), new Vector3(1899.986f, 158.6249f, 23.27167f), new Vector3(1900.254f, 162.231f, 22.75303f), new Vector3(1900.493f, 166.0539f, 22.0572f), new Vector3(1900.651f, 169.1045f, 21.62539f), new Vector3(1901.024f, 172.9659f, 21.34837f), new Vector3(1901.918f, 175.881f, 21.0531f), new Vector3(1903.627f, 179.2245f, 20.58417f), new Vector3(1905.917f, 182.2855f, 20.22865f), new Vector3(1908.333f, 185.2797f, 19.87377f), new Vector3(1910.985f, 188.0143f, 19.79922f), new Vector3(1914.075f, 190.1356f, 20.00487f), new Vector3(1916.581f, 191.7944f, 20.15493f), new Vector3(1920.005f, 193.4968f, 20.14274f), new Vector3(1922.788f, 195.5326f, 20.16307f), new Vector3(1925.141f, 198.3335f, 20.22203f), new Vector3(1927.065f, 200.6288f, 20.4508f), new Vector3(1929.816f, 202.6512f, 20.60198f), new Vector3(1932.793f, 204.7503f, 20.73272f), new Vector3(1934.572f, 208.1496f, 20.71867f), new Vector3(1936f, 211.5921f, 20.6665f), new Vector3(1937.682f, 214.6245f, 20.5871f), new Vector3(1939.529f, 217.6131f, 20.58037f), new Vector3(1941.75f, 220.6629f, 20.56465f), new Vector3(1944.076f, 223.5235f, 20.51226f), new Vector3(1946.76f, 225.9659f, 20.45172f), new Vector3(1949.348f, 227.4919f, 20.35506f), new Vector3(1952.773f, 228.8792f, 18.33427f), new Vector3(1955.624f, 229.815f, 17.74436f), new Vector3(1958.774f, 230.2356f, 17.72376f), new Vector3(1959.039f, 227.1758f, 17.81556f), new Vector3(1957.294f, 224.357f, 17.97395f), new Vector3(1956.323f, 221.2797f, 18.17123f), new Vector3(1957.199f, 218.264f, 18.47803f), new Vector3(1958.177f, 215.1534f, 18.47799f), new Vector3(1958.316f, 212.032f, 18.47791f), new Vector3(1957.86f, 208.8466f, 18.47803f), new Vector3(1957.397f, 205.8042f, 18.4784f), new Vector3(1956.105f, 202.8638f, 18.47801f), new Vector3(1954.671f, 199.9577f, 18.47845f), new Vector3(1954.008f, 196.7513f, 18.47863f), new Vector3(1952.991f, 193.7178f, 18.47804f), new Vector3(1951.509f, 190.9729f, 18.47804f), new Vector3(1949.306f, 188.7778f, 18.47804f), new Vector3(1946.217f, 189.0018f, 18.47799f), new Vector3(1943.177f, 189.7117f, 18.47804f), new Vector3(1939.756f, 190.5231f, 19.31696f), new Vector3(1937.078f, 191.2117f, 20.78058f), new Vector3(1933.459f, 191.723f, 21.03575f), new Vector3(1929.712f, 192.5164f, 21.08353f), new Vector3(1926.158f, 193.2674f, 21.01031f), new Vector3(1922.462f, 193.5136f, 20.51216f), new Vector3(1918.767f, 192.8871f, 20.17409f), new Vector3(1915.648f, 191.4181f, 20.1037f), new Vector3(1913.073f, 189.8679f, 19.94324f), new Vector3(1909.837f, 187.7299f, 19.76064f), new Vector3(1907.173f, 185.2083f, 19.99843f), new Vector3(1905.062f, 182.0116f, 20.3243f), new Vector3(1903.414f, 178.6019f, 20.65163f), new Vector3(1902.121f, 175.2247f, 21.06615f), new Vector3(1900.797f, 171.5685f, 21.45435f), new Vector3(1899.822f, 168.3383f, 21.75448f), new Vector3(1898.926f, 164.5796f, 22.19409f), new Vector3(1898.047f, 161.0291f, 22.66701f), new Vector3(1897.108f, 157.247f, 23.24607f), new Vector3(1896.432f, 154.2854f, 23.42262f), new Vector3(1895.69f, 150.7713f, 23.31409f), new Vector3(1895.028f, 147.0486f, 23.10367f), new Vector3(1894.433f, 143.4817f, 22.94102f), new Vector3(1893.992f, 139.8511f, 22.9261f), new Vector3(1893.657f, 136.0195f, 22.9715f), new Vector3(1893.581f, 132.2308f, 23.28531f), new Vector3(1893.524f, 128.7142f, 23.06123f), new Vector3(1893.338f, 124.7971f, 23.31991f), new Vector3(1892.972f, 121.0596f, 23.54491f), new Vector3(1891f, 117.867f, 23.73506f), new Vector3(1887.547f, 116.4932f, 23.7047f), new Vector3(1883.942f, 116.2517f, 23.46886f), new Vector3(1880.178f, 116.7953f, 23.12003f), new Vector3(1876.79f, 118.0125f, 22.26783f), new Vector3(1873.33f, 119.5662f, 21.51433f), new Vector3(1869.991f, 121.2338f, 21.65013f), new Vector3(1866.631f, 123.0033f, 21.76163f), new Vector3(1863.343f, 124.6784f, 21.79075f), new Vector3(1860.134f, 126.3099f, 22.54716f), new Vector3(1857.007f, 128.6761f, 22.67701f), new Vector3(1855.034f, 131.5977f, 22.90802f), new Vector3(1853.251f, 134.8723f, 22.7935f), new Vector3(1851.875f, 137.8271f, 22.46955f), new Vector3(1851.131f, 140.9872f, 22.06187f), new Vector3(1850.654f, 144.6621f, 21.17894f), new Vector3(1850.694f, 148.5876f, 20.39271f), new Vector3(1851.352f, 152.352f, 19.57547f), new Vector3(1853.106f, 155.6886f, 18.66077f), new Vector3(1855.852f, 158.0718f, 17.5127f), new Vector3(1859.108f, 159.8206f, 16.0605f), new Vector3(1862.333f, 161.43f, 14.73803f), new Vector3(1865.439f, 163.6638f, 13.51639f), new Vector3(1868.148f, 166.237f, 12.37509f), new Vector3(1870.759f, 169.085f, 11.27427f), new Vector3(1872.732f, 171.2412f, 10.51742f), new Vector3(1870.426f, 169.4609f, 11.33809f), new Vector3(1867.702f, 166.9314f, 12.3999f), new Vector3(1865.078f, 164.35f, 13.52065f), new Vector3(1862.929f, 162.4177f, 14.40706f), new Vector3(1860.167f, 160.0461f, 15.70289f), new Vector3(1857.073f, 157.747f, 17.17705f), new Vector3(1854.688f, 156.4369f, 18.44139f), new Vector3(1850.89f, 155.3103f, 18.80425f), new Vector3(1847.377f, 155.5826f, 18.19199f), new Vector3(1844.261f, 157.5443f, 17.51976f), new Vector3(1842.203f, 160.5358f, 18.0977f), new Vector3(1840.716f, 164.0697f, 17.19013f), new Vector3(1839.971f, 167.5346f, 16.45572f), new Vector3(1839.896f, 171.2647f, 15.58863f), new Vector3(1840.052f, 174.927f, 14.72993f), new Vector3(1840.244f, 177.9253f, 13.7352f), new Vector3(1840.63f, 181.5699f, 12.77415f), new Vector3(1840.851f, 184.4263f, 11.84509f), new Vector3(1840.991f, 181.0094f, 12.90337f), new Vector3(1840.921f, 177.4186f, 13.75182f), new Vector3(1840.892f, 174.3703f, 14.61036f), new Vector3(1841.049f, 170.7675f, 15.35485f), new Vector3(1841.413f, 166.9208f, 16.33752f), new Vector3(1841.769f, 163.2807f, 17.34525f), new Vector3(1842.123f, 160.3046f, 18.1275f), new Vector3(1842.505f, 156.7215f, 18.45149f), new Vector3(1842.468f, 153.172f, 19.36427f), new Vector3(1841.926f, 149.4731f, 20.31659f), new Vector3(1840.9f, 146.282f, 21.13454f), new Vector3(1840.525f, 143.2788f, 21.54176f), new Vector3(1841.968f, 139.8647f, 21.66615f), new Vector3(1842.979f, 136.3328f, 22.4566f), new Vector3(1844.212f, 132.812f, 22.8742f), new Vector3(1845.807f, 129.3139f, 23.0144f), new Vector3(1846.166f, 125.5597f, 22.72845f), new Vector3(1846.004f, 121.6148f, 22.22195f), new Vector3(1848.143f, 119.1449f, 22.1959f), new Vector3(1851.589f, 118.1188f, 22.21159f), new Vector3(1855.2f, 117.2844f, 22.19276f), new Vector3(1858.812f, 116.4894f, 21.97124f), new Vector3(1862.506f, 115.8579f, 21.91383f), new Vector3(1866.064f, 115.3687f, 21.9672f), new Vector3(1869.799f, 114.971f, 22.01358f), new Vector3(1872.919f, 114.6393f, 22.06226f), new Vector3(1876.141f, 114.0412f, 22.34171f), new Vector3(1879.648f, 113.4809f, 23.3105f), new Vector3(1883.627f, 113.7279f, 23.67899f), new Vector3(1887.282f, 114.0143f, 23.73168f), new Vector3(1890.879f, 114.0804f, 24.00903f), new Vector3(1894.717f, 113.7248f, 24.2031f), new Vector3(1898.109f, 112.4549f, 24.56007f), new Vector3(1900.837f, 109.9804f, 25.15081f), new Vector3(1903.995f, 108.6947f, 25.52905f), new Vector3(1907.083f, 108.467f, 25.94575f), new Vector3(1910.711f, 107.8625f, 26.70721f), new Vector3(1913.168f, 105.9486f, 26.63705f), new Vector3(1914.969f, 102.6282f, 26.55802f), new Vector3(1916.317f, 99.40427f, 26.83562f), new Vector3(1916.755f, 96.36476f, 27.16923f), new Vector3(1916.998f, 92.84161f, 27.78712f), new Vector3(1916.782f, 89.03429f, 29.05352f), new Vector3(1916.329f, 86.06466f, 30.17637f), new Vector3(1915.307f, 82.95033f, 30.94498f), new Vector3(1913.645f, 80.02097f, 31.63437f), new Vector3(1911.792f, 76.88729f, 32.11144f), new Vector3(1909.607f, 73.62501f, 32.54435f), new Vector3(1907.576f, 70.52456f, 33.09482f), new Vector3(1905.875f, 67.0784f, 33.3955f), new Vector3(1904.79f, 63.54763f, 33.78063f), new Vector3(1904.591f, 60.00851f, 33.75351f), new Vector3(1905.455f, 56.40319f, 32.92832f), new Vector3(1907.792f, 53.58801f, 32.67837f), new Vector3(1911.389f, 53.01913f, 32.54106f), new Vector3(1913.586f, 55.39594f, 32.45557f), new Vector3(1914.46f, 59.03347f, 32.57629f), new Vector3(1914.779f, 62.15372f, 32.7118f), new Vector3(1915.016f, 65.19104f, 32.89497f), new Vector3(1915.254f, 68.7449f, 33.25856f), new Vector3(1915.556f, 71.75884f, 33.39175f), new Vector3(1919.602f, 82.06069f, 31.64295f), new Vector3(1923.871f, 71.20907f, 37.62627f), new Vector3(1923.609f, 66.63962f, 38.14627f), new Vector3(1923.406f, 62.88241f, 38.6067f), new Vector3(1923.334f, 59.47569f, 41.26349f), new Vector3(1923.267f, 56.54264f, 43.53822f), new Vector3(1923.159f, 53.61082f, 44.79684f), new Vector3(1922.812f, 49.88514f, 44.77588f), new Vector3(1919.808f, 48.44373f, 44.70179f), new Vector3(1916.973f, 47.76309f, 46.22689f), new Vector3(1913.688f, 47.67679f, 48.78247f), new Vector3(1910.084f, 47.82965f, 49.70843f), new Vector3(1906.464f, 48.13425f, 49.73088f), new Vector3(1902.734f, 48.22718f, 49.73088f), new Vector3(1899.013f, 48.10588f, 49.52762f), new Vector3(1895.193f, 48.0513f, 49.98343f), new Vector3(1892.313f, 48.14399f, 51.19238f), new Vector3(1889.532f, 47.93769f, 52.61552f), new Vector3(1886.819f, 47.67878f, 54.03818f), new Vector3(1883.997f, 47.46129f, 55.43317f), new Vector3(1880.34f, 47.10886f, 57.22602f), new Vector3(1877.383f, 46.7322f, 59.1916f), new Vector3(1874.791f, 46.4439f, 60.93044f), new Vector3(1872.071f, 46.59715f, 62.61472f), new Vector3(1868.531f, 47.83152f, 63.659f), new Vector3(1865.589f, 49.80004f, 63.87868f), new Vector3(1863.529f, 52.86948f, 64.45979f), new Vector3(1863.125f, 55.58234f, 65.9453f), new Vector3(1863.42f, 58.43097f, 67.26191f), new Vector3(1864.121f, 61.28033f, 68.88474f), new Vector3(1865.233f, 64.10777f, 70.16817f), new Vector3(1866.391f, 66.66319f, 71.37778f), new Vector3(1867.985f, 69.11812f, 72.69576f), new Vector3(1869.795f, 71.30322f, 74.15836f), new Vector3(1871.926f, 73.32275f, 75.68129f), new Vector3(1874.265f, 75.11228f, 77.20978f), new Vector3(1876.808f, 76.71345f, 78.63737f), new Vector3(1879.192f, 78.13141f, 80.01581f), new Vector3(1882.375f, 79.9827f, 81.62569f), new Vector3(1885.483f, 81.86359f, 83.53117f), new Vector3(1888.562f, 83.72781f, 84.39182f), new Vector3(1891.289f, 85.25987f, 84.39182f), new Vector3(1894.709f, 86.83277f, 84.29716f), new Vector3(1897.9f, 88.25271f, 83.52677f), new Vector3(1900.688f, 89.61458f, 83.52677f), new Vector3(1903.682f, 91.56628f, 83.52677f)};\r\n\r\nG[\"GarrsionSafePointsAllianceV3Plot59Mine\"] = v;\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Mine Vectors"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "Comment",
                          "Text": "Define Star Points"
                        },
                        {
                          "$type": "Comment",
                          "IsInfo": false,
                          "Text": "Star points are a string of closely related points about 3 yards apart or less."
                        },
                        {
                          "$type": "Comment",
                          "IsInfo": false,
                          "Text": "Star points define \"the roads\", \"doorways\" (basically an unobstructed chain of points to travel"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] spH1 = new Vector3[] {new Vector3(5561.244f, 4508.848f, 132.6943f),new Vector3(5564.736f, 4510.294f, 133.1499f),new Vector3(5567.958f, 4511.583f, 132.3537f),new Vector3(5570f, 4509.31f, 131.8075f),new Vector3(5571.334f, 4505.865f, 131.6374f),new Vector3(5572.593f, 4502.434f, 131.0415f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel1\"] = spH1;\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] spH2 = new Vector3[] {new Vector3(5562.194f, 4597.709f, 140.9073f), new Vector3(5564.955f, 4595.146f, 140.9073f), new Vector3(5567.617f, 4592.479f, 140.9074f), new Vector3(5570.371f, 4589.548f, 140.9074f), new Vector3(5573.173f, 4586.587f, 141.1926f), new Vector3(5575.292f, 4584.433f, 141.246f), new Vector3(5577.735f, 4582.063f, 141.209f), new Vector3(5579.926f, 4579.996f, 141.1692f), new Vector3(5582.138f, 4577.925f, 139.5676f), new Vector3(5584.45f, 4575.734f, 137.208f), new Vector3(5586.728f, 4573.56f, 136.5751f), new Vector3(5588.897f, 4571.316f, 136.476f), new Vector3(5591.633f, 4573.505f, 136.4727f), new Vector3(5592.155f, 4576.649f, 136.5608f), new Vector3(5592.641f, 4580.578f, 136.5863f), new Vector3(5592.815f, 4583.83f, 136.5863f), new Vector3(5592.611f, 4586.933f, 136.5863f), new Vector3(5592.157f, 4590.875f, 136.5863f), new Vector3(5589.7f, 4570.205f, 136.3527f), new Vector3(5587.572f, 4567.152f, 136.1155f), new Vector3(5584.942f, 4563.803f, 135.8368f), new Vector3(5583.299f, 4561.279f, 135.728f), new Vector3(5580.97f, 4557.827f, 135.77f), new Vector3(5578.924f, 4555.414f, 135.817f), new Vector3(5576.313f, 4553.576f, 135.9897f), new Vector3(5573.445f, 4551.956f, 136.174f), new Vector3(5570.701f, 4550.412f, 136.2131f), new Vector3(5567.997f, 4548.798f, 136.0489f), new Vector3(5565.566f, 4547.005f, 135.7784f), new Vector3(5562.489f, 4544.348f, 135.2405f), new Vector3(5560.126f, 4541.99f, 133.6329f), new Vector3(5558.143f, 4539.857f, 132.3979f), new Vector3(5556.011f, 4537.479f, 131.8225f), new Vector3(5554.115f, 4535.093f, 131.4396f), new Vector3(5552.44f, 4532.365f, 131.2974f), new Vector3(5551.192f, 4529.44f, 131.2127f), new Vector3(5550.191f, 4526.57f, 131.2088f), new Vector3(5548.732f, 4523.948f, 131.3037f), new Vector3(5546.166f, 4522.379f, 131.4907f), new Vector3(5549.579f, 4521.513f, 131.2739f), new Vector3(5553.171f, 4520.203f, 131.048f), new Vector3(5555.886f, 4518.72f, 130.9608f), new Vector3(5558.538f, 4517.162f, 130.8063f), new Vector3(5561.168f, 4515.417f, 130.6245f), new Vector3(5563.813f, 4513.38f, 130.4089f), new Vector3(5566.817f, 4510.816f, 130.2153f), new Vector3(5569.741f, 4508.137f, 130.1281f), new Vector3(5571.979f, 4505.923f, 130.1358f), new Vector3(5574.356f, 4508.512f, 129.8959f), new Vector3(5576.42f, 4510.914f, 129.5879f), new Vector3(5578.983f, 4513.774f, 129.052f), new Vector3(5581.22f, 4516.154f, 128.5125f), new Vector3(5583.571f, 4518.615f, 127.9592f), new Vector3(5585.746f, 4520.828f, 127.4875f), new Vector3(5588.152f, 4523.222f, 127.0604f), new Vector3(5590.986f, 4526.012f, 126.5954f), new Vector3(5593.178f, 4528.143f, 126.2577f), new Vector3(5595.244f, 4530.646f, 126.0799f), new Vector3(5595.46f, 4533.912f, 126.3532f), new Vector3(5595.354f, 4536.874f, 126.9302f), new Vector3(5594.934f, 4540.705f, 127.9752f), new Vector3(5594.588f, 4543.761f, 128.9259f), new Vector3(5594.245f, 4546.882f, 130.0006f), new Vector3(5593.914f, 4549.858f, 131.0893f), new Vector3(5593.581f, 4552.769f, 132.0397f), new Vector3(5593.147f, 4555.872f, 132.9271f), new Vector3(5592.347f, 4559.634f, 134.1149f), new Vector3(5591.436f, 4562.599f, 134.9129f), new Vector3(5590.086f, 4565.519f, 135.6223f), new Vector3(5588.571f, 4568.236f, 136.1878f), new Vector3(5596.486f, 4530.034f, 125.8641f), new Vector3(5599.629f, 4529.863f, 125.203f), new Vector3(5602.639f, 4529.606f, 124.8573f), new Vector3(5605.774f, 4529.167f, 124.7998f), new Vector3(5608.773f, 4528.771f, 123.9159f), new Vector3(5611.723f, 4528.376f, 121.4731f), new Vector3(5614.825f, 4527.903f, 119.2711f), new Vector3(5618.031f, 4527.384f, 119.2711f), new Vector3(5622.099f, 4527.193f, 119.2711f), new Vector3(5624.79f, 4529.47f, 119.2813f), new Vector3(5627.665f, 4532.029f, 119.2289f), new Vector3(5630.292f, 4533.97f, 119.1422f), new Vector3(5632.9f, 4535.715f, 119.0641f), new Vector3(5635.616f, 4537.234f, 119.002f), new Vector3(5638.351f, 4538.681f, 118.9702f), new Vector3(5641.289f, 4540.11f, 118.964f), new Vector3(5645.043f, 4541.676f, 119.0138f), new Vector3(5648.021f, 4542.903f, 119.0766f), new Vector3(5650.996f, 4544.064f, 119.1748f), new Vector3(5653.891f, 4545.077f, 119.2439f), new Vector3(5621.75f, 4527.167f, 119.2697f), new Vector3(5624.954f, 4526.229f, 119.2697f), new Vector3(5628.075f, 4525.044f, 119.2558f), new Vector3(5631.798f, 4523.382f, 119.2177f), new Vector3(5634.684f, 4522.083f, 119.1827f), new Vector3(5637.471f, 4520.853f, 119.175f), new Vector3(5640.116f, 4519.339f, 119.1982f), new Vector3(5571.243f, 4507.546f, 130.0737f), new Vector3(5572.988f, 4504.861f, 130.1792f), new Vector3(5574.64f, 4502.225f, 130.248f), new Vector3(5576.291f, 4499.672f, 130.3323f), new Vector3(5578.02f, 4497.129f, 130.365f), new Vector3(5579.796f, 4494.629f, 130.3665f), new Vector3(5581.562f, 4492.167f, 130.3665f), new Vector3(5583.945f, 4488.96f, 130.3665f), new Vector3(5585.813f, 4486.585f, 130.2746f), new Vector3(5587.744f, 4484.087f, 130.0903f), new Vector3(5588.624f, 4480.301f, 130.0261f), new Vector3(5587.462f, 4477.258f, 130.2173f), new Vector3(5571.751f, 4505.992f, 130.1403f), new Vector3(5567.88f, 4504.627f, 130.4017f), new Vector3(5563.969f, 4503.354f, 130.6574f), new Vector3(5561.012f, 4502.446f, 130.8499f), new Vector3(5558.136f, 4501.436f, 131.0903f), new Vector3(5555.008f, 4500.164f, 131.3909f), new Vector3(5551.378f, 4498.631f, 131.7152f), new Vector3(5548.497f, 4497.408f, 131.9225f), new Vector3(5544.795f, 4495.768f, 132.2162f), new Vector3(5542.031f, 4494.459f, 132.5265f), new Vector3(5539.246f, 4493.176f, 132.8303f), new Vector3(5536.41f, 4491.872f, 133.1249f), new Vector3(5533.575f, 4490.544f, 133.4142f), new Vector3(5530.073f, 4488.758f, 133.8216f), new Vector3(5527.36f, 4487.328f, 134.1438f), new Vector3(5524.569f, 4485.831f, 134.4953f), new Vector3(5521.13f, 4483.945f, 134.9779f), new Vector3(5518.425f, 4482.462f, 135.4897f), new Vector3(5515.768f, 4481.006f, 136.0625f), new Vector3(5512.973f, 4479.438f, 136.7532f), new Vector3(5510.232f, 4477.815f, 137.448f), new Vector3(5507.281f, 4475.979f, 138.1235f), new Vector3(5504.714f, 4474.316f, 138.6194f), new Vector3(5501.333f, 4472.104f, 139.4339f), new Vector3(5498.767f, 4470.426f, 140.0154f), new Vector3(5495.583f, 4468.228f, 140.7464f), new Vector3(5492.361f, 4465.635f, 141.5479f), new Vector3(5489.949f, 4463.598f, 142.1096f), new Vector3(5487.557f, 4461.536f, 142.6635f), new Vector3(5485.164f, 4459.298f, 143.1372f), new Vector3(5482.963f, 4457.149f, 143.5087f), new Vector3(5480.727f, 4454.933f, 143.9639f), new Vector3(5478.047f, 4451.998f, 144.3752f), new Vector3(5476.124f, 4449.494f, 144.4783f), new Vector3(5474.305f, 4447.104f, 144.5677f), new Vector3(5504.673f, 4475.114f, 138.5537f), new Vector3(5502.598f, 4477.978f, 138.8619f), new Vector3(5500.683f, 4480.313f, 138.9728f), new Vector3(5498.229f, 4483.385f, 138.9486f), new Vector3(5496.147f, 4485.879f, 138.8305f), new Vector3(5494.217f, 4488.168f, 138.618f), new Vector3(5492.021f, 4490.755f, 138.4198f), new Vector3(5490.016f, 4493.1f, 138.372f), new Vector3(5487.745f, 4495.756f, 138.3693f), new Vector3(5485.083f, 4498.82f, 138.2969f), new Vector3(5482.417f, 4501.869f, 138.1414f), new Vector3(5480.429f, 4504.143f, 138.0993f), new Vector3(5478.254f, 4506.63f, 138.1306f), new Vector3(5476.074f, 4508.808f, 138.168f), new Vector3(5473.425f, 4510.619f, 138.4282f), new Vector3(5469.755f, 4512.407f, 138.7518f), new Vector3(5466.932f, 4513.604f, 138.8967f), new Vector3(5464.182f, 4514.974f, 138.8996f), new Vector3(5461.815f, 4516.938f, 138.9131f), new Vector3(5459.882f, 4519.269f, 138.8766f), new Vector3(5458.014f, 4522.013f, 138.9329f), new Vector3(5456.431f, 4524.65f, 138.9397f), new Vector3(5454.929f, 4527.292f, 138.817f), new Vector3(5453.464f, 4529.976f, 138.4669f), new Vector3(5451.954f, 4532.791f, 138.101f), new Vector3(5450.439f, 4535.456f, 137.8043f), new Vector3(5448.625f, 4538.063f, 137.4953f), new Vector3(5446.882f, 4540.553f, 137.3259f), new Vector3(5445.066f, 4543.103f, 137.2361f), new Vector3(5442.991f, 4545.456f, 137.277f), new Vector3(5440.754f, 4547.659f, 137.5051f), new Vector3(5438.494f, 4549.838f, 137.9063f), new Vector3(5436.175f, 4551.95f, 138.5047f), new Vector3(5433.093f, 4554.444f, 139.3212f), new Vector3(5430.566f, 4556.308f, 139.768f), new Vector3(5427.238f, 4558.329f, 139.6327f), new Vector3(5424.532f, 4560.041f, 139.3472f), new Vector3(5421.842f, 4561.764f, 139.0074f), new Vector3(5419.153f, 4563.47f, 138.5208f), new Vector3(5416.543f, 4565.028f, 138.238f), new Vector3(5414.089f, 4567.149f, 138.1559f), new Vector3(5414.105f, 4570.314f, 137.8879f), new Vector3(5413.264f, 4567.324f, 138.2073f), new Vector3(5413.029f, 4564.231f, 138.4632f), new Vector3(5413.261f, 4560.29f, 138.873f), new Vector3(5413.295f, 4557.278f, 139.1236f), new Vector3(5413.277f, 4553.929f, 139.1236f), new Vector3(5413.617f, 4550.867f, 139.1236f), new Vector3(5414.44f, 4546.967f, 139.1236f), new Vector3(5410.978f, 4546.176f, 139.1236f), new Vector3(5408.931f, 4542.892f, 139.1236f), new Vector3(5408.464f, 4539.869f, 139.5388f), new Vector3(5409.513f, 4536.057f, 139.1233f), new Vector3(5412.691f, 4533.553f, 139.1233f), new Vector3(5415.898f, 4532.634f, 139.1233f), new Vector3(5419.882f, 4533.228f, 139.1233f), new Vector3(5422.178f, 4535.313f, 139.1233f), new Vector3(5422.562f, 4538.61f, 140.0932f), new Vector3(5422.284f, 4541.622f, 139.1234f), new Vector3(5421.563f, 4544.564f, 139.1234f), new Vector3(5420.208f, 4547.242f, 139.1234f), new Vector3(5418.071f, 4549.569f, 139.1234f), new Vector3(5414.892f, 4550.958f, 139.1234f), new Vector3(5413.097f, 4553.665f, 139.1234f), new Vector3(5412.603f, 4556.88f, 139.1234f), new Vector3(5416.577f, 4570.414f, 137.5914f), new Vector3(5418.846f, 4572.754f, 137.1274f), new Vector3(5421.646f, 4574.174f, 136.7938f), new Vector3(5425.551f, 4575.025f, 136.4868f), new Vector3(5429.102f, 4574.712f, 136.2943f), new Vector3(5432.225f, 4574.247f, 136.1039f), new Vector3(5436.205f, 4573.911f, 135.8904f), new Vector3(5439.294f, 4574.232f, 135.7384f), new Vector3(5442.885f, 4576.199f, 135.3862f), new Vector3(5444.895f, 4578.766f, 135.1645f), new Vector3(5447.272f, 4582.146f, 135.3654f), new Vector3(5448.962f, 4584.791f, 135.8734f), new Vector3(5451.015f, 4588.199f, 136.2511f), new Vector3(5452.588f, 4590.895f, 136.4336f), new Vector3(5454.882f, 4594.654f, 136.3932f), new Vector3(5457.058f, 4598.134f, 136.0267f), new Vector3(5458.825f, 4600.838f, 135.5401f), new Vector3(5460.579f, 4603.399f, 135.229f), new Vector3(5462.46f, 4605.913f, 135.1012f), new Vector3(5464.489f, 4608.126f, 134.9995f), new Vector3(5467.001f, 4610.402f, 134.8882f), new Vector3(5470.347f, 4612.474f, 134.6602f), new Vector3(5473.392f, 4613.666f, 134.4985f), new Vector3(5476.441f, 4613.788f, 134.4498f), new Vector3(5480.19f, 4612.667f, 134.4498f), new Vector3(5483.073f, 4611.497f, 134.4693f), new Vector3(5486.569f, 4609.551f, 134.5943f), new Vector3(5489.123f, 4607.696f, 134.6571f), new Vector3(5491.418f, 4605.261f, 134.689f), new Vector3(5493.361f, 4602.009f, 134.7548f), new Vector3(5494.879f, 4599.004f, 134.9155f), new Vector3(5496.151f, 4596.214f, 134.9387f), new Vector3(5497.454f, 4593.297f, 135.0374f), new Vector3(5498.684f, 4590.528f, 135.1513f), new Vector3(5499.998f, 4587.492f, 135.3218f), new Vector3(5501.207f, 4584.684f, 135.4805f), new Vector3(5502.788f, 4581.015f, 135.3361f), new Vector3(5504.111f, 4577.978f, 135.1729f), new Vector3(5505.375f, 4575.232f, 135.1534f), new Vector3(5506.917f, 4571.996f, 134.8439f), new Vector3(5508.451f, 4568.937f, 134.5026f), new Vector3(5510.019f, 4566.333f, 134.3018f), new Vector3(5512.325f, 4563.073f, 134.0276f), new Vector3(5514.283f, 4560.585f, 133.8372f), new Vector3(5516.468f, 4558.331f, 133.5066f), new Vector3(5518.751f, 4556.218f, 133.2202f), new Vector3(5522.08f, 4553.596f, 132.847f), new Vector3(5524.649f, 4551.873f, 132.5888f), new Vector3(5527.315f, 4550.417f, 132.4307f), new Vector3(5530.263f, 4548.987f, 132.365f), new Vector3(5533.728f, 4547.374f, 132.2706f), new Vector3(5537.362f, 4545.692f, 132.0482f), new Vector3(5540.112f, 4544.419f, 131.9241f), new Vector3(5543.715f, 4542.576f, 131.7818f), new Vector3(5546.207f, 4540.775f, 131.7151f), new Vector3(5548.29f, 4538.613f, 131.615f), new Vector3(5549.381f, 4535.589f, 131.4646f), new Vector3(5550.116f, 4532.406f, 131.3132f), new Vector3(5550.56f, 4529.293f, 131.2152f), new Vector3(5550.298f, 4525.332f, 131.2042f), new Vector3(5548.593f, 4522.182f, 131.3284f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel2\"] = spH2;\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] spH3 = new Vector3[] {new Vector3(5579.263f, 4619.961f, 142.7377f), new Vector3(5576.703f, 4617.404f, 142.7377f), new Vector3(5574.318f, 4615.179f, 142.8536f), new Vector3(5571.557f, 4612.627f, 142.0365f), new Vector3(5569.068f, 4610.318f, 142.0323f), new Vector3(5566.677f, 4608.297f, 141.7069f), new Vector3(5564.25f, 4606.471f, 141.716f), new Vector3(5561.616f, 4604.866f, 141.716f), new Vector3(5562.251f, 4601.349f, 141.716f), new Vector3(5564.368f, 4599.092f, 141.716f), new Vector3(5566.577f, 4596.653f, 141.716f), new Vector3(5568.661f, 4594.367f, 141.716f), new Vector3(5570.829f, 4591.976f, 142.0847f), new Vector3(5572.957f, 4589.635f, 142.1596f), new Vector3(5575.137f, 4587.246f, 142.1811f), new Vector3(5577.26f, 4584.919f, 141.1284f), new Vector3(5579.391f, 4582.572f, 138.6507f), new Vector3(5581.526f, 4580.105f, 136.8033f), new Vector3(5584.019f, 4577.189f, 136.7972f), new Vector3(5585.979f, 4574.896f, 136.5225f), new Vector3(5588.174f, 4572.532f, 136.3163f), new Vector3(5591.469f, 4573.399f, 136.2572f), new Vector3(5593.239f, 4576.174f, 136.3722f), new Vector3(5594.331f, 4579.352f, 136.482f), new Vector3(5594.525f, 4582.465f, 136.5282f), new Vector3(5594.538f, 4585.692f, 136.5724f), new Vector3(5588.781f, 4571.076f, 136.2025f), new Vector3(5590.054f, 4567.915f, 135.8072f), new Vector3(5591.04f, 4564.828f, 135.3257f), new Vector3(5591.933f, 4561.873f, 134.6964f), new Vector3(5592.648f, 4558.691f, 133.8489f), new Vector3(5593.145f, 4555.708f, 132.8736f), new Vector3(5593.642f, 4552.647f, 132.0102f), new Vector3(5594.119f, 4549.64f, 130.9944f), new Vector3(5594.617f, 4546.338f, 129.7841f), new Vector3(5594.945f, 4543.234f, 128.7272f), new Vector3(5595.111f, 4540.089f, 127.791f), new Vector3(5595.036f, 4536.793f, 126.9445f), new Vector3(5595.528f, 4533.501f, 126.2742f), new Vector3(5597.361f, 4530.736f, 125.7409f), new Vector3(5600.303f, 4530.091f, 125.0674f), new Vector3(5603.452f, 4529.723f, 124.8143f), new Vector3(5606.611f, 4529.544f, 124.783f), new Vector3(5609.742f, 4529.368f, 123.0312f), new Vector3(5612.792f, 4529.147f, 120.6382f), new Vector3(5616.159f, 4528.25f, 119.2703f), new Vector3(5619.594f, 4526.901f, 119.2703f), new Vector3(5621.792f, 4524.422f, 119.2703f), new Vector3(5623.747f, 4521.979f, 119.2703f), new Vector3(5625.584f, 4519.604f, 119.2703f), new Vector3(5628.51f, 4518.399f, 119.2703f), new Vector3(5631.687f, 4518.408f, 119.2703f), new Vector3(5634.889f, 4518.295f, 119.26f), new Vector3(5638.035f, 4517.875f, 119.2429f), new Vector3(5640.985f, 4517.007f, 119.2616f), new Vector3(5619.788f, 4527.427f, 119.2691f), new Vector3(5622.749f, 4529.011f, 119.2691f), new Vector3(5625.493f, 4530.44f, 119.2659f), new Vector3(5628.232f, 4532.01f, 119.2151f), new Vector3(5630.948f, 4533.605f, 119.1212f), new Vector3(5633.769f, 4535.244f, 119.035f), new Vector3(5636.436f, 4536.77f, 118.9764f), new Vector3(5639.397f, 4538.34f, 118.9446f), new Vector3(5642.523f, 4540.092f, 118.9598f), new Vector3(5645.293f, 4541.417f, 119.0059f), new Vector3(5648.107f, 4542.634f, 119.1673f), new Vector3(5650.98f, 4543.782f, 119.2664f), new Vector3(5653.833f, 4544.847f, 119.2664f), new Vector3(5655.372f, 4541.589f, 119.2664f), new Vector3(5654.542f, 4538.485f, 119.1622f), new Vector3(5653.228f, 4535.516f, 119.0698f), new Vector3(5651.857f, 4532.54f, 119.0205f), new Vector3(5650.337f, 4529.694f, 119.001f), new Vector3(5648.721f, 4526.876f, 119.0095f), new Vector3(5647.104f, 4524.083f, 119.0507f), new Vector3(5645.491f, 4521.256f, 119.1223f), new Vector3(5644.082f, 4518.307f, 119.2254f), new Vector3(5647.639f, 4518.815f, 119.2311f), new Vector3(5650.644f, 4520.105f, 119.2512f), new Vector3(5653.496f, 4521.339f, 119.353f), new Vector3(5656.401f, 4522.26f, 119.5274f), new Vector3(5659.43f, 4522.682f, 119.7433f), new Vector3(5662.689f, 4522.689f, 120.0154f), new Vector3(5665.799f, 4522.188f, 120.3833f), new Vector3(5668.757f, 4521.003f, 120.8513f), new Vector3(5671.216f, 4518.85f, 121.4671f), new Vector3(5673.056f, 4516.002f, 122.3478f), new Vector3(5674.602f, 4513.469f, 123.6222f), new Vector3(5676.262f, 4510.621f, 125.26f), new Vector3(5677.777f, 4507.709f, 126.9449f), new Vector3(5678.895f, 4504.908f, 128.127f), new Vector3(5679.579f, 4501.813f, 128.9409f), new Vector3(5680.03f, 4498.528f, 129.28f), new Vector3(5680.327f, 4494.731f, 129.5099f), new Vector3(5680.194f, 4491.656f, 129.6957f), new Vector3(5679.605f, 4488.421f, 129.9137f), new Vector3(5677.916f, 4485.276f, 130.0584f), new Vector3(5674.444f, 4483.269f, 130.0493f), new Vector3(5671.632f, 4481.67f, 130.0652f), new Vector3(5668.849f, 4480.08f, 130.0048f), new Vector3(5666.064f, 4478.519f, 130.0376f), new Vector3(5663.246f, 4477.15f, 130.1202f), new Vector3(5660.445f, 4475.82f, 130.2629f), new Vector3(5657.684f, 4474.504f, 130.4222f), new Vector3(5654.766f, 4473.143f, 130.4865f), new Vector3(5651.845f, 4471.909f, 130.5247f), new Vector3(5648.9f, 4470.712f, 130.5247f), new Vector3(5645.948f, 4469.595f, 130.5247f), new Vector3(5642.802f, 4468.658f, 130.5256f), new Vector3(5642.592f, 4465.447f, 130.5261f), new Vector3(5643.302f, 4462.465f, 130.5261f), new Vector3(5644.049f, 4459.397f, 130.5261f), new Vector3(5644.99f, 4456.428f, 130.5261f), new Vector3(5645.995f, 4453.42f, 130.5261f), new Vector3(5641.778f, 4468.395f, 130.5273f), new Vector3(5638.292f, 4468.603f, 130.5266f), new Vector3(5635.317f, 4469.453f, 130.5163f), new Vector3(5632.316f, 4470.315f, 130.4177f), new Vector3(5628.953f, 4471.258f, 130.1893f), new Vector3(5626.021f, 4472.028f, 130.1154f), new Vector3(5622.688f, 4472.838f, 130.1025f), new Vector3(5619.688f, 4473.565f, 130.115f), new Vector3(5616.321f, 4474.382f, 130.1358f), new Vector3(5613.238f, 4475.153f, 130.1275f), new Vector3(5610.1f, 4475.937f, 130.1275f), new Vector3(5606.958f, 4476.791f, 130.1275f), new Vector3(5603.917f, 4477.636f, 130.1275f), new Vector3(5600.634f, 4478.557f, 130.1275f), new Vector3(5597.742f, 4479.44f, 130.1464f), new Vector3(5594.649f, 4480.386f, 130.1783f), new Vector3(5591.669f, 4481.27f, 130.2732f), new Vector3(5588.774f, 4483.255f, 130.2925f), new Vector3(5587.055f, 4486.036f, 130.3025f), new Vector3(5585.357f, 4488.547f, 130.3295f), new Vector3(5583.576f, 4491.229f, 130.3634f), new Vector3(5581.936f, 4493.91f, 130.3667f), new Vector3(5580.331f, 4496.563f, 130.3667f), new Vector3(5578.748f, 4499.205f, 130.3667f), new Vector3(5577.114f, 4501.866f, 130.3158f), new Vector3(5575.376f, 4504.392f, 130.1818f), new Vector3(5573.439f, 4506.99f, 130.032f), new Vector3(5571.41f, 4509.427f, 129.9544f), new Vector3(5572.785f, 4512.527f, 129.6833f), new Vector3(5575.178f, 4514.554f, 129.3938f), new Vector3(5577.601f, 4516.512f, 128.9565f), new Vector3(5580.093f, 4518.507f, 128.4796f), new Vector3(5582.702f, 4520.535f, 127.9238f), new Vector3(5585.225f, 4522.479f, 127.4587f), new Vector3(5587.84f, 4524.509f, 127.0342f), new Vector3(5590.33f, 4526.55f, 126.6631f), new Vector3(5592.774f, 4528.761f, 126.312f), new Vector3(5595.104f, 4531.374f, 126.141f), new Vector3(5570.251f, 4509.307f, 130.0328f), new Vector3(5566.824f, 4510.738f, 130.2147f), new Vector3(5564.462f, 4512.682f, 130.358f), new Vector3(5561.897f, 4514.874f, 130.5671f), new Vector3(5559.571f, 4516.914f, 130.7266f), new Vector3(5557.105f, 4519.07f, 130.9014f), new Vector3(5554.583f, 4521.082f, 130.9428f), new Vector3(5552.034f, 4522.771f, 131.1013f), new Vector3(5549.625f, 4525.344f, 131.2411f), new Vector3(5549.122f, 4528.433f, 131.2805f), new Vector3(5548.629f, 4531.53f, 131.3766f), new Vector3(5547.989f, 4534.531f, 131.4856f), new Vector3(5547.07f, 4537.595f, 131.6158f), new Vector3(5545.8f, 4540.766f, 131.721f), new Vector3(5544.084f, 4543.33f, 131.7829f), new Vector3(5541.377f, 4545.104f, 131.8951f), new Vector3(5538.317f, 4546.386f, 132.0552f), new Vector3(5535.395f, 4547.562f, 132.1936f), new Vector3(5532.379f, 4548.787f, 132.3324f), new Vector3(5529.366f, 4550.018f, 132.3953f), new Vector3(5526.479f, 4551.288f, 132.4706f), new Vector3(5523.647f, 4552.74f, 132.7114f), new Vector3(5520.896f, 4554.531f, 132.9896f), new Vector3(5518.371f, 4556.318f, 133.249f), new Vector3(5516.026f, 4558.309f, 133.5428f), new Vector3(5513.82f, 4560.624f, 133.8603f), new Vector3(5511.938f, 4563.146f, 134.0492f), new Vector3(5510.501f, 4565.782f, 134.2512f), new Vector3(5509.172f, 4568.637f, 134.4512f), new Vector3(5507.885f, 4571.428f, 134.6887f), new Vector3(5506.628f, 4574.155f, 134.9936f), new Vector3(5505.303f, 4577.028f, 135.1246f), new Vector3(5503.595f, 4580.525f, 135.2224f), new Vector3(5502.213f, 4583.277f, 135.436f), new Vector3(5500.908f, 4585.997f, 135.3878f), new Vector3(5499.638f, 4588.948f, 135.2266f), new Vector3(5498.382f, 4591.867f, 135.0956f), new Vector3(5497.082f, 4594.844f, 134.955f), new Vector3(5495.7f, 4597.822f, 134.9103f), new Vector3(5494.197f, 4600.755f, 134.821f), new Vector3(5492.454f, 4603.635f, 134.7009f), new Vector3(5490.562f, 4606.139f, 134.6826f), new Vector3(5488.384f, 4608.375f, 134.641f), new Vector3(5485.575f, 4610.215f, 134.5665f), new Vector3(5482.826f, 4611.603f, 134.4649f), new Vector3(5479.945f, 4613.072f, 134.4505f), new Vector3(5477.14f, 4614.917f, 134.4505f), new Vector3(5473.436f, 4615.292f, 134.4805f), new Vector3(5470.284f, 4614.373f, 134.5984f), new Vector3(5467.477f, 4612.767f, 134.7376f), new Vector3(5465.239f, 4610.642f, 134.8438f), new Vector3(5463.175f, 4608.126f, 134.9696f), new Vector3(5461.426f, 4605.677f, 135.0862f), new Vector3(5459.706f, 4602.96f, 135.6814f), new Vector3(5458.048f, 4600.217f, 136.183f), new Vector3(5456.386f, 4597.476f, 136.6927f), new Vector3(5454.799f, 4594.926f, 136.7721f), new Vector3(5453.174f, 4592.326f, 136.7474f), new Vector3(5451.49f, 4589.582f, 136.7687f), new Vector3(5449.84f, 4586.874f, 136.5136f), new Vector3(5448.211f, 4584.203f, 136.1075f), new Vector3(5446.574f, 4581.577f, 135.701f), new Vector3(5444.813f, 4578.807f, 135.1619f), new Vector3(5442.887f, 4576.264f, 135.3769f), new Vector3(5440.369f, 4574.317f, 135.6858f), new Vector3(5437.165f, 4573.73f, 135.8449f), new Vector3(5433.975f, 4574.242f, 136.0033f), new Vector3(5430.881f, 4574.936f, 136.1782f), new Vector3(5427.708f, 4575.392f, 136.3489f), new Vector3(5424.23f, 4575.404f, 136.5533f), new Vector3(5421.204f, 4574.753f, 136.8031f), new Vector3(5418.199f, 4573.187f, 137.1572f), new Vector3(5415.996f, 4571.052f, 137.5926f), new Vector3(5414.536f, 4568.247f, 138.0238f), new Vector3(5413.479f, 4565.407f, 138.3608f), new Vector3(5412.82f, 4562.213f, 138.642f), new Vector3(5412.789f, 4559.219f, 139.0104f), new Vector3(5412.95f, 4555.954f, 139.1233f), new Vector3(5413.678f, 4552.885f, 139.1233f), new Vector3(5416.54f, 4551.578f, 139.1233f), new Vector3(5418.98f, 4549.486f, 139.1233f), new Vector3(5420.958f, 4546.93f, 139.1233f), new Vector3(5422.171f, 4544.104f, 139.1233f), new Vector3(5422.815f, 4540.999f, 139.1233f), new Vector3(5423.088f, 4537.607f, 139.1233f), new Vector3(5421.814f, 4534.832f, 139.1233f), new Vector3(5419.436f, 4532.679f, 139.1233f), new Vector3(5416.465f, 4531.988f, 139.1233f), new Vector3(5413.399f, 4532.713f, 139.1233f), new Vector3(5410.861f, 4534.873f, 139.1233f), new Vector3(5409.223f, 4537.502f, 139.1233f), new Vector3(5408.444f, 4540.679f, 139.1233f), new Vector3(5408.903f, 4543.896f, 139.1233f), new Vector3(5409.863f, 4547.029f, 139.1233f), new Vector3(5411.911f, 4544.781f, 139.1244f), new Vector3(5411.491f, 4541.633f, 139.1742f), new Vector3(5411.974f, 4538.542f, 139.1235f), new Vector3(5414.719f, 4536.011f, 139.6826f), new Vector3(5418.074f, 4536.322f, 139.6472f), new Vector3(5420.16f, 4538.627f, 139.2648f), new Vector3(5420.17f, 4542.318f, 139.618f), new Vector3(5418.192f, 4544.971f, 139.1239f), new Vector3(5416.338f, 4547.567f, 139.1239f), new Vector3(5414.977f, 4550.249f, 139.1239f), new Vector3(5414.39f, 4553.275f, 139.1239f), new Vector3(5414.009f, 4556.479f, 139.1239f), new Vector3(5442.256f, 4574.338f, 135.6211f), new Vector3(5442.759f, 4570.952f, 135.7294f), new Vector3(5443.172f, 4567.894f, 135.8649f), new Vector3(5443.485f, 4564.815f, 136.0915f), new Vector3(5443.832f, 4561.537f, 136.3765f), new Vector3(5444.23f, 4558.533f, 136.7254f), new Vector3(5444.688f, 4555.168f, 136.9058f), new Vector3(5445.103f, 4552.109f, 137.103f), new Vector3(5445.627f, 4548.253f, 137.1295f), new Vector3(5446.022f, 4545.22f, 137.0889f), new Vector3(5446.403f, 4541.811f, 137.2912f), new Vector3(5446.734f, 4538.686f, 137.3866f), new Vector3(5447.072f, 4535.511f, 137.5764f), new Vector3(5447.586f, 4532.277f, 137.8349f), new Vector3(5448.442f, 4529.3f, 138.0461f), new Vector3(5450.122f, 4525.896f, 138.2251f), new Vector3(5452.744f, 4522.96f, 138.4845f), new Vector3(5454.985f, 4520.808f, 138.7009f), new Vector3(5457.611f, 4518.867f, 138.7404f), new Vector3(5460.491f, 4516.952f, 138.8318f), new Vector3(5463.035f, 4515.278f, 138.9352f), new Vector3(5465.722f, 4513.557f, 138.88f), new Vector3(5468.919f, 4511.596f, 138.8318f), new Vector3(5471.561f, 4510.042f, 138.6706f), new Vector3(5474.337f, 4508.356f, 138.2851f), new Vector3(5476.893f, 4506.318f, 138.2058f), new Vector3(5478.432f, 4503.641f, 138.3438f), new Vector3(5479.722f, 4500.413f, 138.5716f), new Vector3(5480.61f, 4497.53f, 138.823f), new Vector3(5481.702f, 4493.802f, 139.0574f), new Vector3(5482.542f, 4490.657f, 139.2219f), new Vector3(5483.194f, 4487.713f, 139.5251f), new Vector3(5483.833f, 4484.364f, 140.1418f), new Vector3(5484.288f, 4481.261f, 140.7956f), new Vector3(5484.494f, 4478.167f, 141.4432f), new Vector3(5484.804f, 4475.063f, 141.9581f), new Vector3(5485.304f, 4471.911f, 142.0547f), new Vector3(5485.797f, 4468.934f, 142.0802f), new Vector3(5486.495f, 4465.823f, 142.014f), new Vector3(5487.603f, 4462.711f, 142.0779f), new Vector3(5486.751f, 4459.286f, 142.6536f), new Vector3(5484.514f, 4457.174f, 143.1761f), new Vector3(5482.086f, 4454.878f, 143.647f), new Vector3(5479.837f, 4452.644f, 144.0649f), new Vector3(5477.354f, 4450.339f, 144.4045f), new Vector3(5475.014f, 4448.283f, 144.54f), new Vector3(5489.115f, 4461.272f, 142.0696f), new Vector3(5491.686f, 4463.563f, 141.4567f), new Vector3(5493.963f, 4465.583f, 140.888f), new Vector3(5496.468f, 4467.469f, 140.3495f), new Vector3(5499.169f, 4469.396f, 139.8038f), new Vector3(5501.68f, 4471.203f, 139.3316f), new Vector3(5504.179f, 4473.039f, 138.9096f), new Vector3(5506.821f, 4474.866f, 138.3275f), new Vector3(5509.48f, 4476.58f, 137.728f), new Vector3(5512.267f, 4478.368f, 137.0011f), new Vector3(5514.826f, 4480.005f, 136.3303f), new Vector3(5517.483f, 4481.67f, 135.7004f), new Vector3(5520.156f, 4483.257f, 135.1682f), new Vector3(5522.953f, 4484.793f, 134.7165f), new Vector3(5525.739f, 4486.216f, 134.3587f), new Vector3(5528.559f, 4487.653f, 134.0101f), new Vector3(5531.348f, 4489.085f, 133.6821f), new Vector3(5534.306f, 4490.604f, 133.3516f), new Vector3(5537.16f, 4492.08f, 133.3569f), new Vector3(5539.981f, 4493.542f, 133.1382f), new Vector3(5543.377f, 4495.265f, 132.7881f), new Vector3(5546.093f, 4496.596f, 132.4329f), new Vector3(5548.922f, 4497.933f, 132.128f), new Vector3(5552.257f, 4499.41f, 131.7153f), new Vector3(5555.029f, 4500.636f, 131.3827f), new Vector3(5557.809f, 4501.945f, 131.11f), new Vector3(5560.803f, 4503.393f, 130.858f), new Vector3(5563.539f, 4504.68f, 130.6578f), new Vector3(5566.566f, 4505.95f, 130.4227f), new Vector3(5569.407f, 4507.209f, 130.1752f), new Vector3(5623.68f, 4469.524f, 130.104f), new Vector3(5622.185f, 4466.553f, 130.1417f), new Vector3(5620.914f, 4463.118f, 130.2483f), new Vector3(5620.077f, 4458.797f, 130.4704f), new Vector3(5619.631f, 4455.283f, 130.5235f), new Vector3(5619.669f, 4452.08f, 130.5255f), new Vector3(5620.089f, 4448.658f, 130.5255f), new Vector3(5620.984f, 4445.398f, 130.5297f), new Vector3(5622.468f, 4442.327f, 130.5573f), new Vector3(5624.835f, 4440.154f, 130.5313f), new Vector3(5590.828f, 4566.274f, 135.5696f), new Vector3(5589.284f, 4562.959f, 135.2508f), new Vector3(5586.519f, 4560.229f, 135.3234f), new Vector3(5583.923f, 4558.414f, 135.4707f), new Vector3(5580.56f, 4556.361f, 135.5538f), new Vector3(5577.322f, 4554.547f, 135.9038f), new Vector3(5573.99f, 4552.577f, 136.172f), new Vector3(5570.803f, 4550.532f, 136.22f), new Vector3(5567.523f, 4548.029f, 135.9444f), new Vector3(5564.844f, 4545.597f, 135.5302f), new Vector3(5562.172f, 4543.156f, 134.8844f), new Vector3(5560.149f, 4541.306f, 133.556f), new Vector3(5557.999f, 4539.04f, 132.2687f), new Vector3(5555.941f, 4536.708f, 131.7066f), new Vector3(5553.619f, 4533.872f, 131.3612f), new Vector3(5551.467f, 4531.175f, 131.2564f), new Vector3(5550.019f, 4528.311f, 131.2157f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3\"] = spH3;\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] spA1 = new Vector3[] {new Vector3(1892.875f, 212.7701f, 77.06247f), new Vector3(1890.859f, 215.5596f, 77.06247f), new Vector3(1888.848f, 218.3812f, 77.06247f), new Vector3(1886.857f, 221.1793f, 77.06247f), new Vector3(1884.731f, 223.983f, 77.04121f), new Vector3(1882.598f, 226.674f, 76.95905f), new Vector3(1880.297f, 229.5475f, 76.77769f), new Vector3(1878.075f, 232.1546f, 76.60387f), new Vector3(1875.892f, 234.6134f, 76.50378f), new Vector3(1873.6f, 237.1916f, 76.54234f), new Vector3(1871.308f, 239.7179f, 76.86274f), new Vector3(1868.735f, 241.6957f, 77.16824f), new Vector3(1865.76f, 243.7322f, 77.49725f), new Vector3(1862.947f, 245.7817f, 77.48315f), new Vector3(1860.13f, 247.7865f, 77.41662f), new Vector3(1857.394f, 249.7186f, 77.42258f), new Vector3(1854.603f, 251.7962f, 77.53105f), new Vector3(1852.006f, 254.1169f, 77.96453f), new Vector3(1850.009f, 256.7127f, 78.20528f), new Vector3(1848.69f, 260.0035f, 78.31453f), new Vector3(1847.888f, 263.2232f, 78.31453f), new Vector3(1846.944f, 266.5252f, 78.31453f)};\r\n\r\n\r\nG[\"GarrsionSafePointsAllianceLevel1\"] = spA1;\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] spA2 = new Vector3[] {new Vector3(1944.342f, 330.1305f, 91.76392f), new Vector3(1946.093f, 327.0276f, 90.51317f), new Vector3(1947.625f, 324.1943f, 90.28072f), new Vector3(1944.037f, 323.6929f, 90.28072f), new Vector3(1941.063f, 322.3022f, 90.40512f), new Vector3(1938.033f, 320.5355f, 90.40512f), new Vector3(1935.354f, 318.9604f, 90.40512f), new Vector3(1936.729f, 316.0346f, 90.40512f), new Vector3(1938.351f, 312.7056f, 90.40512f), new Vector3(1939.719f, 309.9227f, 90.40512f), new Vector3(1940.255f, 306.8302f, 90.40512f), new Vector3(1937.374f, 304.6109f, 90.40512f), new Vector3(1934.184f, 302.6098f, 90.40512f), new Vector3(1931.427f, 300.9471f, 90.40512f), new Vector3(1928.822f, 299.1523f, 90.40512f), new Vector3(1926.087f, 297.5073f, 88.96591f), new Vector3(1922.99f, 295.5423f, 88.96591f), new Vector3(1919.916f, 293.6193f, 88.96591f), new Vector3(1917.136f, 291.86f, 88.96591f), new Vector3(1913.871f, 289.8596f, 88.96591f), new Vector3(1911.098f, 288.1817f, 89.10671f), new Vector3(1914.357f, 289.0831f, 88.96459f), new Vector3(1917.563f, 289.7852f, 88.96459f), new Vector3(1920.699f, 290.1284f, 88.96459f), new Vector3(1923.764f, 290.0706f, 88.96459f), new Vector3(1926.807f, 289.8409f, 88.96459f), new Vector3(1929.959f, 289.6709f, 88.96459f), new Vector3(1933.863f, 289.5315f, 88.96459f), new Vector3(1937.082f, 289.5792f, 88.96459f), new Vector3(1940.308f, 289.9443f, 88.96459f), new Vector3(1943.835f, 290.4942f, 88.96459f), new Vector3(1912.489f, 289.0588f, 89.10657f), new Vector3(1909.281f, 287.0318f, 89.10711f), new Vector3(1906.599f, 285.3401f, 88.11365f), new Vector3(1904.081f, 283.7694f, 85.75307f), new Vector3(1902.003f, 282.4587f, 83.79947f), new Vector3(1899.951f, 281.1592f, 81.90839f), new Vector3(1897.37f, 279.5043f, 79.5332f), new Vector3(1894.617f, 277.728f, 77.38046f), new Vector3(1891.806f, 276.0604f, 76.63961f), new Vector3(1889.319f, 274.2716f, 76.63961f), new Vector3(1886.8f, 272.55f, 76.63961f), new Vector3(1884.178f, 270.8416f, 76.63961f), new Vector3(1881.534f, 269.1553f, 76.63961f), new Vector3(1878.788f, 267.434f, 76.63961f), new Vector3(1876.144f, 265.7613f, 76.63961f), new Vector3(1873.375f, 264.1206f, 76.63961f), new Vector3(1870.37f, 263.597f, 76.63961f), new Vector3(1866.988f, 263.8458f, 76.63961f), new Vector3(1863.933f, 263.4863f, 76.63961f), new Vector3(1860.996f, 262.5444f, 76.63961f), new Vector3(1857.61f, 260.7188f, 76.63961f), new Vector3(1855.25f, 258.7346f, 76.63961f), new Vector3(1853.198f, 256.0134f, 76.63961f), new Vector3(1851.904f, 253.1193f, 76.63961f), new Vector3(1851.083f, 250.0147f, 76.63961f), new Vector3(1850.699f, 246.9884f, 76.63961f), new Vector3(1851.111f, 243.7616f, 76.63961f), new Vector3(1852.271f, 240.886f, 76.63961f), new Vector3(1854.061f, 238.0392f, 76.63961f), new Vector3(1856.173f, 235.4852f, 76.63961f), new Vector3(1858.774f, 233.7f, 76.63961f), new Vector3(1861.627f, 232.7688f, 76.63961f), new Vector3(1864.879f, 232.4247f, 76.63961f), new Vector3(1867.98f, 232.5764f, 76.63961f), new Vector3(1871.098f, 233.4318f, 76.63961f), new Vector3(1873.857f, 234.8105f, 76.63961f), new Vector3(1876.489f, 236.5912f, 76.63961f), new Vector3(1878.725f, 238.8799f, 76.63961f), new Vector3(1880.323f, 241.5078f, 76.63961f), new Vector3(1881.394f, 244.4072f, 76.63961f), new Vector3(1881.76f, 247.4879f, 76.63961f), new Vector3(1881.655f, 250.5908f, 76.63961f), new Vector3(1881.233f, 253.5629f, 76.63961f), new Vector3(1880.053f, 256.9408f, 76.63961f), new Vector3(1878.566f, 259.7218f, 76.63961f), new Vector3(1876.369f, 261.8271f, 76.63961f), new Vector3(1873.63f, 263.2183f, 76.63961f), new Vector3(1870.503f, 263.9428f, 76.63961f), new Vector3(1869.002f, 266.6456f, 76.63961f), new Vector3(1868.89f, 269.8684f, 76.63961f), new Vector3(1868.607f, 273.1602f, 76.63961f), new Vector3(1868.346f, 276.2292f, 76.63961f), new Vector3(1868.138f, 279.4355f, 76.63961f), new Vector3(1867.962f, 282.5525f, 77.33257f), new Vector3(1867.755f, 285.7518f, 79.88097f), new Vector3(1867.591f, 288.1963f, 81.65726f), new Vector3(1867.333f, 291.3989f, 81.66872f), new Vector3(1867.041f, 294.6619f, 81.64977f), new Vector3(1866.8f, 297.7253f, 81.66025f), new Vector3(1866.62f, 301.1225f, 81.66025f), new Vector3(1881.311f, 242.7393f, 76.63975f), new Vector3(1884.779f, 241.5115f, 76.63975f), new Vector3(1887.793f, 240.3432f, 76.63975f), new Vector3(1890.748f, 239.3355f, 76.63975f), new Vector3(1893.89f, 238.2048f, 76.63975f), new Vector3(1863.698f, 234.8486f, 76.63975f), new Vector3(1860.2f, 234.2452f, 76.63975f), new Vector3(1857.634f, 232.4075f, 76.63975f), new Vector3(1855.072f, 230.6476f, 76.63058f), new Vector3(1852.457f, 228.9035f, 76.52721f), new Vector3(1849.636f, 227.0534f, 76.27775f), new Vector3(1846.954f, 225.4683f, 75.86359f), new Vector3(1844.275f, 223.8925f, 75.35949f), new Vector3(1841.58f, 222.2767f, 74.78519f), new Vector3(1838.968f, 220.7114f, 74.16017f), new Vector3(1836.192f, 219.1083f, 73.5752f), new Vector3(1833.332f, 217.6434f, 73.04395f), new Vector3(1830.475f, 216.3863f, 72.62508f), new Vector3(1827.362f, 215.261f, 72.25804f), new Vector3(1824.463f, 214.2848f, 71.97551f), new Vector3(1823.296f, 217.2325f, 71.98252f), new Vector3(1822.294f, 220.1245f, 72.12748f), new Vector3(1824.508f, 213.8097f, 71.96575f), new Vector3(1825.426f, 210.5149f, 71.96331f), new Vector3(1826.549f, 207.5204f, 71.95824f), new Vector3(1868.549f, 230.6276f, 76.63816f), new Vector3(1870.105f, 227.5947f, 76.64154f), new Vector3(1871.16f, 224.6818f, 76.66657f), new Vector3(1872.085f, 221.6415f, 76.76815f), new Vector3(1872.495f, 218.597f, 76.95116f), new Vector3(1872.414f, 215.1904f, 77.16647f), new Vector3(1871.953f, 212.1633f, 77.35079f), new Vector3(1871.083f, 208.7863f, 77.58262f), new Vector3(1869.843f, 205.6967f, 77.77827f), new Vector3(1868.407f, 203.0198f, 77.9008f), new Vector3(1866.89f, 200.3394f, 78.04034f), new Vector3(1865.325f, 197.5571f, 78.02795f), new Vector3(1863.694f, 194.5382f, 78.0985f), new Vector3(1862.228f, 191.766f, 78.24704f), new Vector3(1861.011f, 189.0083f, 78.38348f), new Vector3(1860.062f, 185.7115f, 78.5805f), new Vector3(1859.834f, 182.5855f, 78.74667f), new Vector3(1859.894f, 179.4431f, 78.86735f), new Vector3(1860.067f, 176.3331f, 78.95658f), new Vector3(1860.665f, 173.0744f, 79.17797f), new Vector3(1861.944f, 169.6111f, 79.58179f), new Vector3(1863.528f, 166.9359f, 79.85897f), new Vector3(1864.214f, 163.4209f, 80.06098f), new Vector3(1862.826f, 160.6961f, 80.01186f), new Vector3(1860.944f, 158.1352f, 79.57586f), new Vector3(1859.026f, 155.5662f, 79.04401f), new Vector3(1857.19f, 152.9465f, 78.60813f), new Vector3(1855.45f, 150.4054f, 78.32409f), new Vector3(1854.033f, 147.4756f, 78.29153f), new Vector3(1851.217f, 146.1134f, 78.29153f), new Vector3(1848.065f, 147.2553f, 78.28238f), new Vector3(1845.107f, 148.295f, 78.15911f), new Vector3(1842.209f, 149.1593f, 77.784f), new Vector3(1838.87f, 150.0285f, 77.36453f), new Vector3(1835.636f, 150.8583f, 76.9263f), new Vector3(1832.52f, 151.3495f, 76.60438f), new Vector3(1829.407f, 151.5717f, 76.60438f), new Vector3(1826.217f, 151.6803f, 76.60438f), new Vector3(1822.914f, 151.5988f, 76.60438f), new Vector3(1819.276f, 151.4798f, 76.60438f), new Vector3(1866.52f, 163.521f, 80.13095f), new Vector3(1869.29f, 161.5083f, 80.31311f), new Vector3(1871.79f, 159.6857f, 80.50506f), new Vector3(1874.458f, 157.9207f, 80.72175f), new Vector3(1877.26f, 156.159f, 81.00375f), new Vector3(1879.868f, 154.5311f, 81.23196f), new Vector3(1882.726f, 152.7474f, 81.50452f), new Vector3(1885.957f, 150.7312f, 81.77988f), new Vector3(1888.569f, 149.1004f, 81.96709f), new Vector3(1891.17f, 147.477f, 82.12126f), new Vector3(1893.854f, 145.8018f, 82.3156f), new Vector3(1896.628f, 144.071f, 82.51228f), new Vector3(1899.187f, 142.4735f, 82.75841f), new Vector3(1901.896f, 140.6954f, 82.96612f), new Vector3(1904.265f, 138.8527f, 83.08512f), new Vector3(1906.479f, 136.814f, 83.18134f), new Vector3(1908.767f, 134.5279f, 83.24935f), new Vector3(1911.181f, 132.1013f, 83.29546f), new Vector3(1910.947f, 128.4575f, 83.31505f), new Vector3(1910.666f, 125.2505f, 83.34082f), new Vector3(1910.517f, 122.0526f, 83.37442f), new Vector3(1910.413f, 118.1968f, 83.42655f), new Vector3(1910.319f, 114.9922f, 83.47235f), new Vector3(1910.218f, 111.8158f, 83.51048f), new Vector3(1910.099f, 108.5717f, 83.52048f), new Vector3(1910.004f, 105.5632f, 83.52523f), new Vector3(1909.85f, 102.2842f, 83.52523f), new Vector3(1909.453f, 99.08918f, 83.52523f), new Vector3(1908.016f, 96.15554f, 83.52523f), new Vector3(1905.74f, 94.12292f, 83.52523f), new Vector3(1912.22f, 131.4777f, 83.30724f), new Vector3(1914.706f, 129.2983f, 83.33329f), new Vector3(1917.255f, 127.3079f, 83.36523f), new Vector3(1919.717f, 125.423f, 83.40047f), new Vector3(1922.194f, 123.5446f, 83.43803f), new Vector3(1924.595f, 121.5276f, 83.47723f), new Vector3(1926.952f, 119.4704f, 83.51725f), new Vector3(1929.295f, 117.2513f, 83.56129f), new Vector3(1931.554f, 115.1489f, 83.60477f), new Vector3(1934.087f, 113.2423f, 83.6457f), new Vector3(1936.577f, 111.5651f, 83.66904f), new Vector3(1939.557f, 110.3927f, 83.79632f), new Vector3(1942.544f, 111.5496f, 83.66888f), new Vector3(1944.914f, 113.6945f, 83.51407f), new Vector3(1947.26f, 116.1957f, 83.54634f), new Vector3(1949.372f, 118.4575f, 83.60899f), new Vector3(1951.545f, 120.7666f, 84.00111f), new Vector3(1953.741f, 123.093f, 84.31499f), new Vector3(1955.878f, 125.2913f, 84.37413f), new Vector3(1958.199f, 127.6232f, 84.15134f), new Vector3(1960.381f, 129.7864f, 83.6841f), new Vector3(1962.758f, 132.0719f, 83.56436f), new Vector3(1965.036f, 134.2474f, 83.1627f), new Vector3(1967.258f, 136.3188f, 83.19179f), new Vector3(1969.685f, 138.1748f, 83.24158f), new Vector3(1972.246f, 139.8353f, 83.29243f), new Vector3(1975.008f, 141.5704f, 83.37f), new Vector3(1977.65f, 143.2208f, 83.36819f), new Vector3(1980.321f, 144.8897f, 83.27692f), new Vector3(1982.984f, 146.5189f, 83.11184f), new Vector3(1985.777f, 148.1919f, 83.01373f), new Vector3(1988.444f, 149.6731f, 83.09253f), new Vector3(1991.175f, 151.2006f, 83.22071f), new Vector3(1993.961f, 152.8145f, 83.19352f), new Vector3(1996.63f, 154.4336f, 83.08804f), new Vector3(1999.254f, 156.0997f, 83.06996f), new Vector3(2001.887f, 157.9021f, 83.12315f), new Vector3(2004.977f, 160.1876f, 83.1437f), new Vector3(2007.525f, 162.1443f, 83.17229f), new Vector3(2009.98f, 164.0507f, 83.33833f), new Vector3(2012.382f, 166.0223f, 83.61543f), new Vector3(2014.777f, 168.0364f, 83.97604f), new Vector3(2017.172f, 170.119f, 84.25625f), new Vector3(2019.377f, 172.2986f, 84.52269f), new Vector3(2021.477f, 174.662f, 84.59455f), new Vector3(2023.214f, 177.3131f, 84.59455f)};\r\n\r\n\r\nG[\"GarrsionSafePointsAllianceLevel2\"] = spA2;\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] spA3 = new Vector3[] {new Vector3(1934.318f, 345.3639f, 91.57761f), new Vector3(1936.074f, 342.6972f, 90.40536f), new Vector3(1937.199f, 338.8818f, 90.28063f), new Vector3(1937.825f, 335.4866f, 90.28063f), new Vector3(1938.85f, 332.117f, 90.28063f), new Vector3(1940.116f, 328.607f, 90.40533f), new Vector3(1941.045f, 325.3637f, 90.40533f), new Vector3(1938.266f, 323.0731f, 90.40533f), new Vector3(1935.653f, 321.2721f, 89.50332f), new Vector3(1934.041f, 318.5994f, 89.50332f), new Vector3(1935.845f, 316.045f, 89.50332f), new Vector3(1937.576f, 313.6249f, 90.29122f), new Vector3(1939.445f, 310.8765f, 90.40476f), new Vector3(1939.157f, 307.8275f, 90.40476f), new Vector3(1936.856f, 305.537f, 90.40476f), new Vector3(1934.26f, 303.7113f, 90.40476f), new Vector3(1931.538f, 301.9029f, 90.40476f), new Vector3(1928.829f, 300.0579f, 90.38757f), new Vector3(1926.052f, 298.095f, 89.2618f), new Vector3(1922.766f, 295.7722f, 88.96588f), new Vector3(1919.857f, 293.7166f, 88.96588f), new Vector3(1921.974f, 291.5002f, 88.96588f), new Vector3(1925.655f, 290.7365f, 88.96588f), new Vector3(1928.994f, 290.0437f, 88.96588f), new Vector3(1932.427f, 289.5923f, 88.96588f), new Vector3(1936.208f, 289.3928f, 88.96588f), new Vector3(1939.542f, 289.8582f, 88.96588f), new Vector3(1942.831f, 290.8292f, 88.96588f), new Vector3(1917.964f, 292.3338f, 88.96588f), new Vector3(1915.035f, 290.5689f, 88.96588f), new Vector3(1912.36f, 288.8264f, 88.96928f), new Vector3(1909.725f, 287.1084f, 89.00848f), new Vector3(1907.165f, 285.4661f, 89.00954f), new Vector3(1904.549f, 283.7881f, 86.65217f), new Vector3(1902.195f, 282.2783f, 84.42857f), new Vector3(1899.691f, 280.6717f, 82.0957f), new Vector3(1897.655f, 279.366f, 80.22215f), new Vector3(1895.572f, 278.0298f, 78.43657f), new Vector3(1892.901f, 276.316f, 76.63992f), new Vector3(1889.836f, 274.3226f, 76.63992f), new Vector3(1886.761f, 272.3461f, 76.63992f), new Vector3(1883.739f, 270.427f, 76.63992f), new Vector3(1880.846f, 268.604f, 76.63992f), new Vector3(1877.832f, 266.8725f, 76.63992f), new Vector3(1875.152f, 265.3365f, 76.63992f), new Vector3(1872.307f, 263.4066f, 76.63992f), new Vector3(1869.127f, 262.6184f, 76.63992f), new Vector3(1868.933f, 266.2264f, 76.63992f), new Vector3(1868.853f, 269.6166f, 76.63992f), new Vector3(1868.775f, 272.9786f, 76.63992f), new Vector3(1868.638f, 276.5655f, 76.63992f), new Vector3(1868.501f, 279.5663f, 76.63992f), new Vector3(1868.374f, 282.3406f, 78.34603f), new Vector3(1868.265f, 284.7375f, 80.25135f), new Vector3(1868.134f, 287.5967f, 81.64567f), new Vector3(1867.996f, 290.6258f, 81.65662f), new Vector3(1867.843f, 293.6542f, 81.64696f), new Vector3(1867.671f, 296.8897f, 81.65954f), new Vector3(1867.504f, 300.0404f, 81.65954f), new Vector3(1867.328f, 303.2473f, 82.79651f), new Vector3(1867.129f, 306.3582f, 83.34754f), new Vector3(1866.934f, 309.3936f, 83.38011f), new Vector3(1866.684f, 312.5005f, 83.32616f), new Vector3(1866.408f, 315.3174f, 84.36273f), new Vector3(1866.121f, 318.401f, 84.24577f), new Vector3(1869.991f, 262.0021f, 76.64005f), new Vector3(1872.205f, 259.7852f, 76.64005f), new Vector3(1874.213f, 257.305f, 76.64005f), new Vector3(1876.169f, 254.5359f, 76.64005f), new Vector3(1877.877f, 251.6975f, 76.64005f), new Vector3(1879.196f, 248.978f, 76.64005f), new Vector3(1880.477f, 246.1261f, 76.64005f), new Vector3(1881.538f, 243.1713f, 76.64005f), new Vector3(1885.088f, 241.7006f, 76.64005f), new Vector3(1888.014f, 240.6548f, 76.64005f), new Vector3(1890.915f, 239.4888f, 76.64005f), new Vector3(1894.349f, 238.1531f, 76.64005f), new Vector3(1897.56f, 236.9242f, 77.03458f), new Vector3(1900.639f, 235.7553f, 76.78654f), new Vector3(1903.727f, 234.6f, 76.76482f), new Vector3(1906.699f, 233.4877f, 76.74257f), new Vector3(1910.35f, 232.1114f, 76.72702f), new Vector3(1913.601f, 230.8536f, 76.72702f), new Vector3(1881.861f, 243.0611f, 76.63965f), new Vector3(1879.929f, 239.7374f, 76.63965f), new Vector3(1877.392f, 237.6222f, 76.63965f), new Vector3(1874.644f, 236.1643f, 76.63965f), new Vector3(1871.581f, 235.1833f, 76.63965f), new Vector3(1868.527f, 234.5558f, 76.63965f), new Vector3(1865.518f, 234.1238f, 76.63965f), new Vector3(1861.64f, 234.1626f, 76.63965f), new Vector3(1857.73f, 234.498f, 76.63965f), new Vector3(1855.032f, 236.3021f, 76.63965f), new Vector3(1854.153f, 239.2928f, 76.63965f), new Vector3(1853.228f, 242.9248f, 76.63965f), new Vector3(1852.668f, 246.1329f, 76.63965f), new Vector3(1852.537f, 249.8612f, 76.63965f), new Vector3(1852.937f, 253.314f, 76.63965f), new Vector3(1854.481f, 257.0814f, 76.63965f), new Vector3(1856.532f, 259.5264f, 76.63965f), new Vector3(1859.646f, 260.9168f, 76.63965f), new Vector3(1862.583f, 261.6707f, 76.63965f), new Vector3(1865.85f, 262.5398f, 76.63965f), new Vector3(1868.847f, 262.3245f, 76.63965f), new Vector3(1868.847f, 262.3245f, 76.63965f), new Vector3(1864.96f, 261.5354f, 76.63965f), new Vector3(1861.966f, 260.6747f, 76.63965f), new Vector3(1858.958f, 259.2874f, 76.63965f), new Vector3(1855.156f, 258.3183f, 76.63965f), new Vector3(1851.929f, 259.1197f, 76.63965f), new Vector3(1849.413f, 260.9289f, 76.63965f), new Vector3(1846.795f, 262.8532f, 76.63965f), new Vector3(1843.749f, 264.9085f, 76.63965f), new Vector3(1840.738f, 266.9481f, 76.63965f), new Vector3(1837.909f, 268.919f, 76.63965f), new Vector3(1835.27f, 270.8316f, 76.63965f), new Vector3(1832.829f, 272.6615f, 76.63965f), new Vector3(1830.359f, 274.5633f, 77.91827f), new Vector3(1827.551f, 276.753f, 78.41142f), new Vector3(1824.957f, 278.7577f, 78.50695f), new Vector3(1822.389f, 280.7194f, 78.46857f), new Vector3(1819.565f, 282.9655f, 78.42216f), new Vector3(1816.317f, 285.1932f, 77.22386f), new Vector3(1813.862f, 286.9601f, 76.97762f), new Vector3(1856.679f, 235.6042f, 76.63972f), new Vector3(1854.617f, 233.3818f, 76.63972f), new Vector3(1852.319f, 231.2616f, 76.58916f), new Vector3(1849.915f, 229.0889f, 76.41035f), new Vector3(1847.471f, 227.0506f, 76.06316f), new Vector3(1845.031f, 225.2031f, 75.58952f), new Vector3(1842.045f, 223.2457f, 74.95538f), new Vector3(1839.076f, 221.2116f, 74.2213f), new Vector3(1835.975f, 219.0868f, 73.54047f), new Vector3(1833.252f, 217.4081f, 73.01933f), new Vector3(1830.536f, 216.1939f, 72.61861f), new Vector3(1827.339f, 215.1271f, 72.25014f), new Vector3(1824.489f, 214.0917f, 71.97218f), new Vector3(1825.196f, 210.5933f, 71.9556f), new Vector3(1826.569f, 207.1543f, 71.9641f), new Vector3(1825.219f, 210.3605f, 71.95465f), new Vector3(1824.18f, 213.4195f, 71.92699f), new Vector3(1823.378f, 216.4793f, 71.94897f), new Vector3(1822.622f, 219.7076f, 72.10194f), new Vector3(1823.889f, 216.1601f, 71.98397f), new Vector3(1822.461f, 213.3906f, 71.78558f), new Vector3(1818.866f, 212.4651f, 71.42156f), new Vector3(1815.956f, 211.5814f, 71.09712f), new Vector3(1813.002f, 210.6788f, 70.78697f), new Vector3(1809.873f, 209.7338f, 70.50079f), new Vector3(1806.95f, 208.8266f, 70.31017f), new Vector3(1803.871f, 207.8488f, 70.17564f), new Vector3(1800.749f, 206.9458f, 70.08878f), new Vector3(1797.813f, 206.153f, 70.05907f), new Vector3(1798.918f, 202.3807f, 70.08163f), new Vector3(1800.129f, 199.173f, 70.07506f), new Vector3(1879.652f, 242.7156f, 76.63821f), new Vector3(1878.719f, 239.407f, 76.63821f), new Vector3(1877.913f, 235.9106f, 76.63821f), new Vector3(1877.179f, 232.5032f, 76.63821f), new Vector3(1876.303f, 228.6143f, 76.64849f), new Vector3(1875.476f, 224.9466f, 76.70731f), new Vector3(1874.67f, 221.6241f, 76.83878f), new Vector3(1873.829f, 218.5637f, 77.00029f), new Vector3(1873.041f, 215.5038f, 77.17076f), new Vector3(1872.216f, 212.0298f, 77.37175f), new Vector3(1871.314f, 208.2245f, 77.63027f), new Vector3(1870.547f, 204.989f, 77.82954f), new Vector3(1868.886f, 201.6799f, 77.99508f), new Vector3(1872.108f, 199.5678f, 78.06503f), new Vector3(1875.007f, 197.7016f, 78.05641f), new Vector3(1878.185f, 195.5552f, 78.4741f), new Vector3(1880.712f, 193.8616f, 78.74033f), new Vector3(1883.235f, 192.1968f, 78.74033f), new Vector3(1885.75f, 190.5371f, 78.23356f), new Vector3(1888.272f, 188.5773f, 78.19093f), new Vector3(1890.77f, 186.6192f, 78.19093f), new Vector3(1867.806f, 199.1533f, 78.07957f), new Vector3(1866.093f, 196.0323f, 78.08347f), new Vector3(1864.57f, 193.0872f, 78.16994f), new Vector3(1862.955f, 189.7986f, 78.30476f), new Vector3(1861.645f, 186.7733f, 78.47477f), new Vector3(1860.407f, 183.6367f, 78.70368f), new Vector3(1859.952f, 180.0764f, 78.83934f), new Vector3(1860.464f, 176.9831f, 78.91682f), new Vector3(1861.306f, 173.2329f, 79.20213f), new Vector3(1862.207f, 170.2511f, 79.55221f), new Vector3(1863.336f, 167.2243f, 79.83341f), new Vector3(1864.833f, 164.5448f, 80.02701f), new Vector3(1864.981f, 161.2684f, 80.23283f), new Vector3(1862.823f, 159.0062f, 79.91874f), new Vector3(1860.836f, 156.7788f, 79.42255f), new Vector3(1858.792f, 154.4125f, 78.90905f), new Vector3(1856.544f, 151.5441f, 78.41596f), new Vector3(1854.701f, 148.6351f, 78.29143f), new Vector3(1852.299f, 146.5301f, 78.29143f), new Vector3(1848.402f, 147.6715f, 78.29143f), new Vector3(1845.241f, 148.5038f, 78.18171f), new Vector3(1842.157f, 149.2521f, 77.77551f), new Vector3(1838.642f, 150.0687f, 77.33631f), new Vector3(1835.435f, 150.5835f, 76.89999f), new Vector3(1831.779f, 150.9526f, 76.60423f), new Vector3(1828.586f, 151.3058f, 76.60423f), new Vector3(1824.757f, 151.4784f, 76.60423f), new Vector3(1820.904f, 151.5516f, 76.60423f), new Vector3(1866.082f, 162.9899f, 80.13677f), new Vector3(1869.276f, 161.1545f, 80.32847f), new Vector3(1872.192f, 159.4791f, 80.53444f), new Vector3(1874.874f, 157.8554f, 80.76839f), new Vector3(1877.864f, 156.0133f, 81.09469f), new Vector3(1880.894f, 154.1967f, 81.37144f), new Vector3(1883.678f, 152.485f, 81.58444f), new Vector3(1886.253f, 150.9019f, 81.80614f), new Vector3(1889.308f, 148.9634f, 82.00262f), new Vector3(1891.917f, 147.2182f, 82.16823f), new Vector3(1894.661f, 145.3732f, 82.3779f), new Vector3(1897.698f, 143.3045f, 82.58991f), new Vector3(1900.571f, 141.1221f, 82.90806f), new Vector3(1903.281f, 138.9755f, 83.05708f), new Vector3(1905.703f, 137.0577f, 83.15941f), new Vector3(1908.635f, 134.8427f, 83.2428f), new Vector3(1911.068f, 133.0719f, 83.28825f), new Vector3(1913.066f, 130.4005f, 83.31612f), new Vector3(1912.328f, 127.0843f, 83.32578f), new Vector3(1911.55f, 123.1843f, 83.35915f), new Vector3(1911.02f, 120.0075f, 83.39869f), new Vector3(1910.531f, 116.8236f, 83.44771f), new Vector3(1909.968f, 113.5563f, 83.49561f), new Vector3(1909.452f, 110.5683f, 83.51874f), new Vector3(1908.929f, 107.543f, 83.5256f), new Vector3(1908.417f, 104.5735f, 83.5256f), new Vector3(1907.726f, 101.0723f, 83.5256f), new Vector3(1905.796f, 97.91738f, 83.5256f), new Vector3(1913.107f, 131.3287f, 83.31464f), new Vector3(1915.85f, 129.2077f, 83.34544f), new Vector3(1918.851f, 126.7458f, 83.38708f), new Vector3(1921.425f, 124.4655f, 83.42456f), new Vector3(1923.883f, 122.1848f, 83.46522f), new Vector3(1926.234f, 119.9143f, 83.50562f), new Vector3(1928.834f, 117.3763f, 83.55694f), new Vector3(1931.532f, 114.6637f, 83.62413f), new Vector3(1933.756f, 112.4255f, 83.70001f), new Vector3(1935.886f, 110.2151f, 83.84675f), new Vector3(1938.113f, 107.7977f, 84.0535f), new Vector3(1940.263f, 110.0944f, 83.8313f), new Vector3(1942.605f, 112.5076f, 83.54618f), new Vector3(1944.982f, 114.9521f, 83.39613f), new Vector3(1947.419f, 117.4575f, 83.34531f), new Vector3(1949.815f, 119.8481f, 83.35438f), new Vector3(1952.121f, 122.1502f, 84.17258f), new Vector3(1954.274f, 124.2989f, 84.41884f), new Vector3(1956.822f, 126.8413f, 84.30782f), new Vector3(1959.259f, 129.1022f, 83.68041f), new Vector3(1961.765f, 131.373f, 83.33296f), new Vector3(1964.657f, 133.9353f, 83.20779f), new Vector3(1967.166f, 135.8323f, 83.18732f), new Vector3(1970.081f, 137.9108f, 83.24029f), new Vector3(1972.921f, 139.8148f, 83.29857f), new Vector3(1975.867f, 141.747f, 83.36269f), new Vector3(1978.659f, 143.4651f, 83.34666f), new Vector3(1981.375f, 145.0891f, 83.20002f), new Vector3(1984.231f, 146.618f, 83.0327f), new Vector3(1986.865f, 148.0713f, 82.99692f), new Vector3(1990.294f, 150.0478f, 83.1526f), new Vector3(1993.595f, 152.126f, 83.20823f), new Vector3(1996.315f, 153.9537f, 83.0788f), new Vector3(1999.067f, 156.0781f, 83.07653f), new Vector3(2001.536f, 158.1763f, 83.15147f), new Vector3(2004.021f, 160.3135f, 83.19725f), new Vector3(2006.298f, 162.2717f, 83.22602f), new Vector3(2008.626f, 164.2734f, 83.30458f), new Vector3(2011.401f, 166.6466f, 83.59406f), new Vector3(2014.299f, 168.9959f, 83.92239f), new Vector3(2017.051f, 171.1961f, 84.23238f), new Vector3(2019.459f, 173.1911f, 84.46317f), new Vector3(2021.663f, 175.3522f, 84.58573f), new Vector3(1826.854f, 148.2169f, 76.60439f), new Vector3(1824.434f, 146.4331f, 76.60439f), new Vector3(1822.941f, 142.846f, 76.60439f), new Vector3(1822.771f, 139.4413f, 76.60439f), new Vector3(1820.687f, 136.6797f, 76.60439f), new Vector3(1817.979f, 138.7288f, 76.60439f), new Vector3(1816.927f, 142.0038f, 76.60439f), new Vector3(1815.452f, 144.7657f, 76.60439f), new Vector3(1813.997f, 147.8319f, 76.60434f), new Vector3(1812.719f, 150.9461f, 76.60434f), new Vector3(1812.276f, 154.4333f, 76.60434f), new Vector3(1813.629f, 157.164f, 76.60434f), new Vector3(1816.024f, 158.9971f, 76.60434f), new Vector3(1819.063f, 159.704f, 76.60434f), new Vector3(1822.178f, 159.8675f, 76.60434f), new Vector3(1825.542f, 158.2052f, 76.60434f), new Vector3(1826.968f, 154.8995f, 76.60434f), new Vector3(1827.637f, 151.9504f, 76.60434f), new Vector3(1827.701f, 147.9438f, 76.60434f)};\r\n\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3\"] = spA3;\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Define Star Points"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] cpH1 = new Vector3[] {new Vector3(5567.958f, 4511.583f, 132.3537f), new Vector3(5572.593f, 4502.434f, 131.0415f), new Vector3(5561.244f, 4508.848f, 132.6943f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel1\"] = cpH1;"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] cpH2 = new Vector3[] {new Vector3(5562.291f, 4597.475f, 140.9091f), new Vector3(5587.749f, 4571.155f, 136.5157f), new Vector3(5593.955f, 4583.63f, 136.5864f), new Vector3(5591.319f, 4590.775f, 136.5864f), new Vector3(5580.221f, 4555.605f, 135.6213f), new Vector3(5547.082f, 4524.744f, 131.409f), new Vector3(5593.764f, 4529.929f, 126.2101f), new Vector3(5622.247f, 4527.074f, 119.2713f), new Vector3(5639.512f, 4519.468f, 119.2008f), new Vector3(5654.438f, 4545.11f, 119.2528f), new Vector3(5570.622f, 4507.236f, 130.1138f), new Vector3(5590.015f, 4480.71f, 129.946f), new Vector3(5514.475f, 4480.158f, 136.3875f), new Vector3(5474.633f, 4447.012f, 144.5606f), new Vector3(5502.411f, 4474.845f, 138.9825f), new Vector3(5472.249f, 4511.659f, 138.5636f), new Vector3(5448.28f, 4538.043f, 137.4822f), new Vector3(5435.413f, 4572.582f, 135.957f), new Vector3(5414.307f, 4569.138f, 137.9726f), new Vector3(5413.89f, 4547.304f, 139.123f), new Vector3(5447.205f, 4582.283f, 135.3848f), new Vector3(5462.958f, 4606.057f, 135.1225f), new Vector3(5479.546f, 4616.125f, 134.45f), new Vector3(5493.69f, 4601.063f, 134.8084f), new Vector3(5512.187f, 4562.881f, 134.0251f), new Vector3(5534.333f, 4544.932f, 132.2139f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel2\"] = cpH2;"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] cpH3 = new Vector3[] {new Vector3(5578.344f, 4619.329f, 142.7387f), new Vector3(5559.731f, 4604.105f, 141.716f), new Vector3(5587.829f, 4572.133f, 136.3053f), new Vector3(5592.767f, 4585.828f, 136.6245f), new Vector3(5593.857f, 4530.881f, 126.2234f), new Vector3(5549.802f, 4522.485f, 131.2492f), new Vector3(5568.553f, 4506.856f, 130.2374f), new Vector3(5590.914f, 4481.577f, 130.2772f), new Vector3(5642.425f, 4463.965f, 130.5255f), new Vector3(5623.896f, 4440.198f, 130.5658f), new Vector3(5679.936f, 4487.483f, 130.0341f), new Vector3(5666.596f, 4521.232f, 120.5513f), new Vector3(5654.782f, 4545.199f, 119.2655f), new Vector3(5642.507f, 4516.532f, 119.2699f), new Vector3(5626.029f, 4518.86f, 119.2689f), new Vector3(5617.831f, 4527.585f, 119.2696f), new Vector3(5522.581f, 4485.27f, 134.7261f), new Vector3(5491.721f, 4464.641f, 141.3033f), new Vector3(5475.292f, 4447.888f, 144.5328f), new Vector3(5476.956f, 4497.492f, 139.5195f), new Vector3(5482.395f, 4502.831f, 138.0838f), new Vector3(5453.659f, 4526.543f, 138.5298f), new Vector3(5442.421f, 4572.45f, 135.6804f), new Vector3(5412.332f, 4549.751f, 139.1242f), new Vector3(5413.744f, 4571.108f, 137.856f), new Vector3(5464.285f, 4608.675f, 134.9505f), new Vector3(5484.411f, 4612.749f, 134.5037f), new Vector3(5506.459f, 4572.861f, 134.9422f), new Vector3(5543.386f, 4543.422f, 131.796f), new Vector3(5554.196f, 4519.162f, 131.0399f), new Vector3(5641.334f, 4467.76f, 130.5256f), new Vector3(5570.803f, 4550.532f, 136.22f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3\"] = cpH3;\r\n"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] cpA1 = new Vector3[] {new Vector3(1850.208f, 254.7601f, 78.12648f),new Vector3(1892.145f, 214.5021f, 77.06219f),new Vector3(1847.254f, 264.8563f, 78.31438f),new Vector3(1869.643f, 241.1991f, 77.0584f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel1\"] = cpA1;"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] cpA2 = new Vector3[] {new Vector3(2023.2f, 177.0928f, 84.59455f), new Vector3(1995.887f, 153.9143f, 83.10257f), new Vector3(1968.043f, 137.0029f, 83.20798f), new Vector3(1939.575f, 111.3798f, 83.67059f), new Vector3(1911.429f, 132.6993f, 83.29605f), new Vector3(1910.775f, 105.8351f, 83.52547f), new Vector3(1903.723f, 95.43719f, 83.52547f), new Vector3(1865.091f, 165.4003f, 80.00133f), new Vector3(1851.842f, 146.0045f, 78.29158f), new Vector3(1833.581f, 151.2283f, 76.63756f), new Vector3(1819.278f, 151.0393f, 76.60435f), new Vector3(1860.062f, 185.4446f, 78.59474f), new Vector3(1871.107f, 205.6498f, 77.79347f), new Vector3(1870.642f, 230.9608f, 76.64068f), new Vector3(1894.69f, 237.959f, 76.64068f), new Vector3(1870.533f, 268.3038f, 76.64068f), new Vector3(1866.521f, 301.9358f, 82.1937f), new Vector3(1853.186f, 249.827f, 76.63818f), new Vector3(1848.419f, 225.5273f, 76.05145f), new Vector3(1823.867f, 213.8814f, 71.91363f), new Vector3(1821.969f, 221.8557f, 72.1741f), new Vector3(1827.257f, 206.3974f, 71.98415f), new Vector3(1946.094f, 327.3823f, 90.52151f), new Vector3(1936.369f, 319.4941f, 90.40495f), new Vector3(1940.894f, 307.0537f, 90.40495f), new Vector3(1924.807f, 296.8271f, 88.96597f), new Vector3(1927.256f, 290.7017f, 88.96597f), new Vector3(1942.997f, 290.6642f, 88.96597f), new Vector3(1875.843f, 262.2821f, 76.63966f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel2\"] = cpA2;"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "Vector3[] cpA3 = new Vector3[] {new Vector3(1935.476f, 343.4531f, 90.52024f),\n new Vector3(1942.011f, 325.6374f, 90.40542f), new Vector3(1933.509f, 319.5729f, 89.50317f), new Vector3(1940.492f, 308.6534f, 90.40484f), new Vector3(1919.845f, 293.981f, 88.96704f), new Vector3(1943.39f, 290.2419f, 88.96704f), new Vector3(1869.579f, 263.088f, 76.63968f), new Vector3(1867.763f, 299.3506f, 81.66045f), new Vector3(1879.516f, 244.2362f, 76.63963f), new Vector3(1897.22f, 237.1838f, 77.00782f), new Vector3(1853.364f, 256.2758f, 76.63973f), new Vector3(1834.469f, 270.7098f, 76.63973f), new Vector3(1853.719f, 229.72f, 76.61156f), new Vector3(1823.616f, 213.5766f, 71.88461f), new Vector3(1797.013f, 204.7331f, 70.07064f), new Vector3(1869.913f, 200.8184f, 78.03103f), new Vector3(1867.857f, 223.4964f, 76.66671f), new Vector3(1860.373f, 175.6626f, 79.00866f), new Vector3(1865.313f, 163.9715f, 80.06802f), new Vector3(1854.663f, 148.2034f, 78.29153f), new Vector3(1821.331f, 151.4387f, 76.60446f), new Vector3(1888.679f, 150.2474f, 81.95645f), new Vector3(1911.079f, 133.1144f, 83.28785f), new Vector3(1909.879f, 104.6324f, 83.52538f), new Vector3(1905.01f, 96.10889f, 83.52538f), new Vector3(1937.424f, 108.8222f, 83.94836f), new Vector3(1971.423f, 139.3806f, 83.27824f), new Vector3(2021.639f, 174.4023f, 84.56709f), new Vector3(2000.75f, 155.8785f, 83.00834f), new Vector3(1927.865f, 299.2078f, 90.38753f), new Vector3(1921.529f, 295.3576f, 88.96474f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3\"] = cpA3;\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Define CTM Points"
                    },
                    {
                      "$type": "ActionSequence",
                      "Children": [
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "//G[\"GarrsionSafePoints\"]............................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePoints\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPoints\"] = w;\r\n"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordePlot18\"]..................................................\r\nVector3[] v = new Vector3[] {new Vector3(5642.803f, 4515.195f, 119.2703f), new Vector3(5642.976f, 4512.475f, 120.0795f), new Vector3(5643.184f, 4509.202f, 120.0809f), new Vector3(5643.36f, 4506.436f, 120.0809f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot18TheTannery\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5642.803f, 4515.195f, 119.2703f), new Vector3(5643.36f, 4506.436f, 120.0809f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot18TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot18TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot18TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot18TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot18TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot18TheTannery\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordePlot19\"]..................................................\r\nVector3[] v = new Vector3[] {new Vector3(5653.695f, 4544.859f, 119.2651f), new Vector3(5655.458f, 4545.411f, 119.2651f), new Vector3(5658.349f, 4546.298f, 120.122f), new Vector3(5660.433f, 4546.949f, 120.173f), new Vector3(5661.834f, 4547.832f, 120.1643f), new Vector3(5662.859f, 4548.281f, 120.135f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V3Plot19TheTannery\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5653.695f, 4544.859f, 119.2651f), new Vector3(5662.859f, 4548.281f, 120.135f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot19TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot19TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot19TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot19TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot19TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V3Plot19TheTannery\"] = w;\r\n\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordePlot20\"]..................................................\r\nVector3[] v = new Vector3[] {new Vector3(5627.963f, 4514.415f, 119.2708f), new Vector3(5625.659f, 4517.891f, 119.2708f), new Vector3(5622.345f, 4515.253f, 120.1509f), new Vector3(5619.848f, 4512.591f, 120.2765f), new Vector3(5618.187f, 4510.834f, 120.3598f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot20TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot20TheTannery\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20Storehouse\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20TheForge\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot20TheTannery\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5625.938f, 4518.472f, 119.2706f), new Vector3(5618.292f, 4511.183f, 120.3476f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot20TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot20TheTannery\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20AlchemyLab\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20EnchanterStudy\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20EngineeringWorks\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20GemBoutique\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20SalvageYard\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20ScribeQuarters\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20Storehouse\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20TailoringEmporium\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20TheForge\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot20TheTannery\"] = w;"
                                }
                              ],
                              "GroupName": "Horde Small Buildings"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordeLevel3V1Plot22TradingPost\"].................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot22TradingPost\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V1Plot22TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot22TradingPost\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V1Plot22TradingPost\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordeLevel3V1Plot25TradingPost\"]...................................\r\nVector3[] v = new Vector3[] {new Vector3(5679.826f, 4488.716f, 129.9026f), new Vector3(5682.187f, 4485.866f, 131.0365f), new Vector3(5683.699f, 4484.04f, 131.0844f), new Vector3(5685.035f, 4482.427f, 131.1169f), new Vector3(5686.066f, 4481.182f, 131.1148f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V1Plot25TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5679.826f, 4488.716f, 129.9026f), new Vector3(5686.066f, 4481.182f, 131.1148f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V1Plot25TradingPost\"] = w;\r\n"
                                }
                              ],
                              "GroupName": "Horde V1 Buildings"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordeLevel3V2Plot22TradingPost\"].................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot22TradingPost\"] = v;\r\nG[\"GarrsionSafePointsHordeLevel2V2Plot22TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot22TradingPost\"] = w;\r\nG[\"GarrsionCTMPointsHordeLevel2V2Plot22TradingPost\"] = w;\r\n\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsHordeLevel3V2Plot25TradingPost\"].................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V2Plot25TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V2Plot25TradingPost\"] = w;\r\n\r\n\r\n"
                                }
                              ],
                              "GroupName": "Horde V2 Buildings"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsHordeLevel3V3Plot22TradingPost\"]..................................\r\nVector3[] v = new Vector3[] {new Vector3(5680.214f, 4486.739f, 130.0693f), new Vector3(5682.237f, 4484.389f, 130.8077f), new Vector3(5684.344f, 4482.045f, 131.0262f), new Vector3(5686.538f, 4479.548f, 131.17f), new Vector3(5688.591f, 4477.08f, 131.0675f), new Vector3(5690.801f, 4474.749f, 131.0413f), new Vector3(5693.034f, 4472.581f, 131.0269f), new Vector3(5695.51f, 4470.457f, 131.1175f), new Vector3(5698.054f, 4468.498f, 131.01f), new Vector3(5695.699f, 4470.664f, 131.1176f), new Vector3(5693.485f, 4472.834f, 131.0296f), new Vector3(5691.348f, 4475.167f, 131.0356f), new Vector3(5689.11f, 4477.848f, 131.0631f), new Vector3(5687.141f, 4480.296f, 131.1703f), new Vector3(5685.075f, 4482.474f, 131.0255f), new Vector3(5682.402f, 4484.598f, 130.8255f), new Vector3(5680.026f, 4486.64f, 130.6194f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot22TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5678.827f, 4487.913f, 129.924f), new Vector3(5687.583f, 4478.701f, 130.9274f), new Vector3(5696.948f, 4469.26f, 131.1755f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot22TradingPost\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsHordeLevel3V3Plot25TradingPost\"].....................................\r\nVector3[] v = new Vector3[] {new Vector3(5547.061f, 4522.535f, 131.7862f), new Vector3(5543.849f, 4522.541f, 131.8244f), new Vector3(5540.734f, 4522.47f, 132.2291f), new Vector3(5537.725f, 4522.49f, 132.3723f), new Vector3(5534.555f, 4522.563f, 132.2691f), new Vector3(5531.349f, 4522.507f, 132.2408f), new Vector3(5527.941f, 4522.504f, 132.2313f), new Vector3(5524.53f, 4522.372f, 132.3643f), new Vector3(5527.875f, 4522.55f, 132.2332f), new Vector3(5531.045f, 4522.579f, 132.2328f), new Vector3(5534.265f, 4522.585f, 132.2671f), new Vector3(5537.359f, 4522.562f, 132.1736f), new Vector3(5540.66f, 4522.415f, 132.2297f), new Vector3(5543.776f, 4522.218f, 131.8675f), new Vector3(5546.981f, 4521.923f, 131.8443f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot25TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5549.563f, 4521.56f, 131.2731f), new Vector3(5536.593f, 4521.904f, 132.1264f), new Vector3(5523.4f, 4522.18f, 132.3771f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot25TradingPost\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsHordeLevel3V3Plot24Armory\"].........................................\r\nVector3[] v = new Vector3[] {new Vector3(5641.228f, 4468.11f, 130.5267f), new Vector3(5637.246f, 4466.391f, 130.5267f), new Vector3(5633.747f, 4465.157f, 130.5247f), new Vector3(5630.825f, 4464.094f, 130.4574f), new Vector3(5627.883f, 4462.322f, 130.4184f), new Vector3(5625.416f, 4459.74f, 130.4559f), new Vector3(5623.768f, 4456.146f, 130.5268f), new Vector3(5623.846f, 4452.481f, 130.5268f), new Vector3(5624.367f, 4448.823f, 130.5268f), new Vector3(5624.924f, 4445.636f, 130.5268f), new Vector3(5622.905f, 4449.351f, 130.5268f), new Vector3(5623.067f, 4453.455f, 130.5268f), new Vector3(5623.765f, 4457.161f, 130.5268f), new Vector3(5625.67f, 4461.053f, 130.3835f), new Vector3(5627.997f, 4463.809f, 130.3668f), new Vector3(5630.608f, 4465.288f, 130.4059f), new Vector3(5634.021f, 4466.011f, 130.5261f), new Vector3(5637.065f, 4466.349f, 130.5246f), new Vector3(5640.235f, 4465.125f, 130.5249f), new Vector3(5643.242f, 4462.442f, 130.5249f), new Vector3(5644.735f, 4459.528f, 130.5249f), new Vector3(5645.73f, 4456.571f, 130.5249f), new Vector3(5646.524f, 4453.564f, 130.5249f), new Vector3(5647.621f, 4450.38f, 130.9668f), new Vector3(5648.505f, 4447.737f, 132.3853f), new Vector3(5649.578f, 4444.507f, 132.9304f), new Vector3(5650.625f, 4441.525f, 132.8818f), new Vector3(5650.914f, 4438.241f, 132.8818f), new Vector3(5648.651f, 4436.153f, 132.8818f), new Vector3(5646.008f, 4434.346f, 132.8818f), new Vector3(5642.828f, 4433.178f, 132.8856f), new Vector3(5639.601f, 4432.303f, 132.8841f), new Vector3(5642.826f, 4432.766f, 132.8833f), new Vector3(5645.891f, 4433.822f, 132.8835f), new Vector3(5649.101f, 4435.248f, 132.8835f), new Vector3(5651.908f, 4437.334f, 132.8835f), new Vector3(5651.015f, 4440.667f, 132.8835f), new Vector3(5649.99f, 4443.571f, 132.9367f), new Vector3(5648.795f, 4447.187f, 132.6913f), new Vector3(5647.777f, 4450.145f, 131.1079f), new Vector3(5646.727f, 4453.084f, 130.526f), new Vector3(5645.572f, 4455.939f, 130.526f), new Vector3(5644.252f, 4458.907f, 130.526f), new Vector3(5643.018f, 4461.706f, 130.526f), new Vector3(5641.915f, 4464.529f, 130.526f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot24Armory\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5627.17f, 4444.354f, 130.524f), new Vector3(5625.91f, 4460.81f, 130.4177f), new Vector3(5642.035f, 4466.111f, 130.524f), new Vector3(5651.553f, 4438.919f, 132.8823f), new Vector3(5643.29f, 4433.156f, 132.8851f), new Vector3(5638.692f, 4431.551f, 132.8843f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot24Armory\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsHordeLevel3V3Plot23Armory\"]........................................\r\nVector3[] v = new Vector3[] {new Vector3(5588.965f, 4481.074f, 130.3342f), new Vector3(5587.041f, 4484.218f, 130.3301f), new Vector3(5585.048f, 4486.515f, 130.3301f), new Vector3(5582.536f, 4488.441f, 130.3574f), new Vector3(5579.442f, 4490.043f, 130.3666f), new Vector3(5576.477f, 4490.95f, 130.3684f), new Vector3(5573.335f, 4492.132f, 130.3701f), new Vector3(5570.56f, 4490.277f, 130.3701f), new Vector3(5568.553f, 4487.869f, 130.3701f), new Vector3(5566.485f, 4485.301f, 130.3701f), new Vector3(5564.531f, 4482.786f, 130.3701f), new Vector3(5566.375f, 4485.536f, 130.3701f), new Vector3(5568.655f, 4487.593f, 130.3701f), new Vector3(5570.938f, 4489.565f, 130.3701f), new Vector3(5573.713f, 4491.396f, 130.3701f), new Vector3(5576.931f, 4491.902f, 130.3701f), new Vector3(5579.913f, 4490.787f, 130.3685f), new Vector3(5582.523f, 4489.14f, 130.3634f), new Vector3(5585f, 4487.003f, 130.3253f), new Vector3(5587.257f, 4484.786f, 130.3181f), new Vector3(5588.753f, 4482.088f, 130.3276f), new Vector3(5587.065f, 4479.084f, 130.3703f), new Vector3(5585.43f, 4476.375f, 130.3703f), new Vector3(5583.77f, 4473.616f, 130.3703f), new Vector3(5582.128f, 4470.912f, 130.3703f), new Vector3(5580.24f, 4467.841f, 130.9222f), new Vector3(5578.495f, 4465.257f, 132.499f), new Vector3(5576.57f, 4462.418f, 132.8095f), new Vector3(5574.737f, 4459.824f, 132.725f), new Vector3(5572.744f, 4457.533f, 132.725f), new Vector3(5569.491f, 4458.417f, 132.725f), new Vector3(5566.734f, 4459.994f, 132.725f), new Vector3(5563.904f, 4461.652f, 132.7279f), new Vector3(5561.468f, 4463.511f, 132.7875f), new Vector3(5563.949f, 4461.62f, 132.7262f), new Vector3(5566.951f, 4459.794f, 132.7263f), new Vector3(5569.715f, 4458.144f, 132.7263f), new Vector3(5572.437f, 4456.84f, 132.7263f), new Vector3(5574.543f, 4459.894f, 132.7263f), new Vector3(5576.35f, 4462.33f, 132.8085f), new Vector3(5578.192f, 4464.796f, 132.7719f), new Vector3(5580.147f, 4467.292f, 131.1772f), new Vector3(5581.878f, 4469.832f, 130.3721f), new Vector3(5583.338f, 4472.504f, 130.3721f), new Vector3(5585.058f, 4475.503f, 130.3721f), new Vector3(5586.754f, 4478.323f, 130.3721f), new Vector3(5588.332f, 4481f, 130.3459f)};\r\n\r\nG[\"GarrsionSafePointsHordeLevel3V3Plot23Armory\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(5589.601f, 4483.542f, 130.2576f), new Vector3(5570.018f, 4489.074f, 130.3705f), new Vector3(5563.22f, 4480.347f, 130.3705f), new Vector3(5572.294f, 4456.584f, 132.7252f), new Vector3(5560.763f, 4463.968f, 132.7257f)};\r\n\r\nG[\"GarrsionCTMPointsHordeLevel3V3Plot23Armory\"] = w;\r\n"
                                }
                              ],
                              "GroupName": "Horde V3 Buildings"
                            }
                          ],
                          "GroupName": "Horde"
                        },
                        {
                          "$type": "ActionSequence",
                          "Children": [
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsAlliancePlot18\"]..................................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot18TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot18TheTannery\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot18TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot18TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot18TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot18TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot18TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot18TheTannery\"] = v;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsAlliancePlot19\"]..................................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V1Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot19TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V3Plot19TheTannery\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot19TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot19TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot19TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V1Plot19TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot19TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel2V3Plot19TheTannery\"] = v;\r\n\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G\"GarrsionSafePointsAlliancePlot20\"]..................................................\r\nVector3[] v = new Vector3[] {};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V1Plot20TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot20TheTannery\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20GemBoutique\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20SalvageYard\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20Storehouse\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20TheForge\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot20TheTannery\"] = v;\r\n\r\nVector3[] w = new Vector3[] {};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V1Plot20TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot20TheTannery\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20AlchemyLab\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20EnchanterStudy\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20EngineeringWorks\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20GemBoutique\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20SalvageYard\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20ScribeQuarters\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20Storehouse\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20TailoringEmporium\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20TheForge\"] = v;\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot20TheTannery\"] = v;\r\n\r\n\r\n\r\n"
                                }
                              ],
                              "GroupName": "Alliance Small Buildings"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [],
                              "GroupName": "Alliance V1 Buildings"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsAllianceLevel3V2Plot22TradingPost\"]............................................\r\nVector3[] v = new Vector3[] {new Vector3(1866.643f, 298.8239f, 81.66041f), new Vector3(1866.25f, 306.3842f, 83.32544f), new Vector3(1865.552f, 314.8245f, 83.32607f), new Vector3(1866.154f, 318.2389f, 83.32607f), new Vector3(1861.105f, 315.8248f, 83.32607f)};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot22TradingPost\"] = v;\r\nG[\"GarrsionSafePointsAllianceLevel2V2Plot22TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(1865.469f, 314.8997f, 83.32601f), new Vector3(1866.309f, 300.8483f, 81.66069f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot22TradingPost\"] = w;\r\nG[\"GarrsionCTMPointsAllianceLevel2V2Plot22TradingPost\"] = w;"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsAllianceLevel3V2Plot25TradingPost\"]............................................\r\nVector3[] v = new Vector3[] {new Vector3(1878.733f, 195.264f, 78.92208f), new Vector3(1888.93f, 188.1375f, 79.72169f), new Vector3(1893.198f, 190.6263f, 79.72169f), new Vector3(1890.589f, 189.4983f, 79.72169f), new Vector3(1887.238f, 189.8757f, 79.72169f), new Vector3(1883.427f, 192.1573f, 79.72177f), new Vector3(1881.56f, 193.3774f, 79.72177f), new Vector3(1891.028f, 185.3198f, 79.72192f), new Vector3(1891.077f, 189.5884f, 79.72192f)};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V2Plot25TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(1878.733f, 195.264f, 78.92208f), new Vector3(1888.93f, 188.1375f, 79.72169f), new Vector3(1893.198f, 190.6263f, 79.72169f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V2Plot25TradingPost\"] = w;\r\n"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Alliance V2 Buildings"
                            },
                            {
                              "$type": "ActionSequence",
                              "Children": [
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsAllianceLevel3V3Plot22TradingPost\"]............................................\r\nVector3[] v = new Vector3[] {new Vector3(1867.773f, 299.8285f, 81.6593f), new Vector3(1867.507f, 303.3192f, 82.83125f), new Vector3(1867.253f, 306.9117f, 83.35264f), new Vector3(1863.473f, 306.7552f, 83.35265f), new Vector3(1860.278f, 306.4605f, 83.35265f), new Vector3(1864.657f, 306.4744f, 83.35265f), new Vector3(1867.807f, 307.0411f, 83.35081f), new Vector3(1866.922f, 310.6845f, 83.32609f), new Vector3(1865.275f, 313.4415f, 83.32609f), new Vector3(1862.625f, 314.8692f, 83.32602f), new Vector3(1859.319f, 315.5791f, 83.72261f), new Vector3(1861.401f, 318.1941f, 83.77692f), new Vector3(1862.866f, 315.0329f, 83.3261f), new Vector3(1865.592f, 312.9518f, 83.32601f), new Vector3(1866.786f, 309.7971f, 83.38799f), new Vector3(1865.222f, 306.6387f, 83.35094f), new Vector3(1862.228f, 306.3973f, 83.35123f), new Vector3(1865.831f, 306.0131f, 83.35123f), new Vector3(1867.268f, 303.3826f, 82.92764f), new Vector3(1867.302f, 300.551f, 81.66077f)};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot22TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(1868.423f, 299.4911f, 81.66057f), new Vector3(1867.159f, 307.0527f, 83.32521f), new Vector3(1860.706f, 305.9655f, 83.32899f), new Vector3(1866.203f, 313.5339f, 83.32594f), new Vector3(1859.85f, 315.6987f, 83.32632f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot22TradingPost\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsAllianceLevel3V3Plot25TradingPost\"]............................................\r\nVector3[] v = new Vector3[] {new Vector3(1876.228f, 195.7368f, 78.05679f), new Vector3(1878.813f, 193.9016f, 79.31424f), new Vector3(1881.983f, 193.3322f, 79.74831f), new Vector3(1883.951f, 195.9113f, 79.74831f), new Vector3(1882.229f, 193.201f, 79.74831f), new Vector3(1884.016f, 190.64f, 79.77915f), new Vector3(1886.553f, 188.9096f, 79.72182f), new Vector3(1889.619f, 190.3048f, 79.72182f), new Vector3(1892.559f, 191.6082f, 79.72182f), new Vector3(1889.283f, 189.9814f, 79.72182f), new Vector3(1886.192f, 189.4039f, 79.72182f), new Vector3(1883.622f, 191.0452f, 79.72186f), new Vector3(1883.159f, 194.2055f, 79.74709f), new Vector3(1884.889f, 196.9102f, 79.74709f), new Vector3(1883.026f, 193.9765f, 79.74709f), new Vector3(1879.614f, 193.9557f, 79.69595f), new Vector3(1877.155f, 195.6078f, 78.05632f)};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot25TradingPost\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(1876.78f, 196.3744f, 78.05671f), new Vector3(1882.366f, 191.6397f, 79.73725f), new Vector3(1885.423f, 198.1878f, 79.74843f), new Vector3(1887.152f, 188.4735f, 79.72174f), new Vector3(1893.336f, 192.0778f, 79.72174f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot25TradingPost\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsAllianceLevel3V3Plot24Armory\"].........................................................\r\nVector3[] v = new Vector3[] {new Vector3(1834.24f, 270.8065f, 76.63963f), new Vector3(1832.456f, 267.3973f, 76.64005f), new Vector3(1829.963f, 264.5202f, 76.64005f), new Vector3(1833.259f, 266.8374f, 76.64005f), new Vector3(1835.424f, 270.2289f, 76.63985f), new Vector3(1832.737f, 271.8779f, 76.63985f), new Vector3(1829.595f, 274.6035f, 78.15551f), new Vector3(1827.163f, 276.6444f, 78.37012f), new Vector3(1824.344f, 278.8866f, 78.51118f), new Vector3(1821.784f, 280.9954f, 78.38863f), new Vector3(1818.81f, 283.449f, 78.41393f), new Vector3(1816.402f, 285.2887f, 77.23623f), new Vector3(1813.52f, 287.4033f, 76.97421f), new Vector3(1810.28f, 285.8605f, 76.96262f), new Vector3(1808.348f, 282.9117f, 76.94624f), new Vector3(1809.862f, 285.9368f, 76.95902f), new Vector3(1811.656f, 288.4993f, 76.95902f), new Vector3(1813.849f, 291.1727f, 76.96071f), new Vector3(1816.455f, 292.8666f, 76.95921f), new Vector3(1816.084f, 296.5651f, 77.55408f), new Vector3(1814.851f, 299.8405f, 78.42092f), new Vector3(1812.536f, 301.5992f, 79.25088f), new Vector3(1809.227f, 301.0028f, 79.88251f), new Vector3(1806.295f, 299.7691f, 79.90678f), new Vector3(1803.472f, 297.4748f, 79.85789f), new Vector3(1806.072f, 299.1779f, 79.89205f), new Vector3(1809.515f, 300.3897f, 79.86456f), new Vector3(1813.202f, 300.689f, 78.75562f), new Vector3(1815.886f, 299.3382f, 78.42407f), new Vector3(1816.074f, 295.5075f, 76.94931f), new Vector3(1815.532f, 292.3031f, 76.9612f), new Vector3(1813.939f, 289.3447f, 76.96729f), new Vector3(1811.136f, 288.2076f, 76.95956f), new Vector3(1809.032f, 285.1448f, 76.95446f), new Vector3(1811.906f, 286.6662f, 76.96596f), new Vector3(1815.135f, 284.983f, 76.968f), new Vector3(1817.991f, 283.1437f, 78.28922f), new Vector3(1820.598f, 281.52f, 78.38826f), new Vector3(1823.653f, 279.5546f, 78.51178f), new Vector3(1826.81f, 277.3419f, 78.41386f), new Vector3(1829.223f, 275.5096f, 78.41991f), new Vector3(1832.1f, 273.2125f, 77.02144f), new Vector3(1834.889f, 270.6851f, 76.63972f), new Vector3(1833.106f, 268.1332f, 76.82659f), new Vector3(1830.309f, 265.9872f, 76.63971f), new Vector3(1833.902f, 268.1478f, 76.64006f)};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot24Armory\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(1835.779f, 269.7311f, 76.64005f), new Vector3(1811.899f, 288.3035f, 76.96213f), new Vector3(1815.731f, 300.5501f, 78.42176f), new Vector3(1803.539f, 297.4995f, 79.85786f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot24Armory\"] = w;\r\n"
                                },
                                {
                                  "$type": "CSharpAction",
                                  "CSharpCode": "//G[\"GarrsionSafePointsAllianceLevel3V3Plot23Armory\"].........................................................\r\nVector3[] v = new Vector3[] {new Vector3(1896.669f, 237.4181f, 76.63961f), new Vector3(1895.33f, 240.9465f, 76.73059f), new Vector3(1896.489f, 244.4521f, 76.63974f), new Vector3(1898.521f, 247.542f, 76.63974f), new Vector3(1895.627f, 246.3901f, 76.63974f), new Vector3(1894.163f, 243.5265f, 76.63974f), new Vector3(1893.271f, 239.321f, 76.63998f), new Vector3(1895.921f, 237.0446f, 76.63998f), new Vector3(1899.683f, 235.7794f, 77.79878f), new Vector3(1903.483f, 234.4049f, 78.39392f), new Vector3(1906.617f, 233.1371f, 78.52388f), new Vector3(1909.608f, 231.9307f, 78.4314f), new Vector3(1912.607f, 230.7587f, 78.41337f), new Vector3(1915.758f, 229.6154f, 77.50844f), new Vector3(1918.921f, 228.5078f, 76.99376f), new Vector3(1921.842f, 230.0234f, 76.97865f), new Vector3(1922.683f, 233.2937f, 76.96749f), new Vector3(1922.585f, 229.7752f, 76.97347f), new Vector3(1921.125f, 226.3518f, 76.97514f), new Vector3(1919.755f, 223.1157f, 76.97736f), new Vector3(1919.496f, 219.9739f, 76.96469f), new Vector3(1919.971f, 217.1754f, 78.35571f), new Vector3(1922.31f, 214.8455f, 78.43475f), new Vector3(1925.142f, 214.5052f, 79.58267f), new Vector3(1927.815f, 216.2364f, 79.90626f), new Vector3(1930.352f, 218.2442f, 80.11046f), new Vector3(1932.963f, 220.8678f, 79.87376f), new Vector3(1930.733f, 218.3155f, 80.37684f), new Vector3(1927.873f, 217.3019f, 79.92484f), new Vector3(1924.3f, 216.1747f, 79.2201f), new Vector3(1921.183f, 216.4504f, 78.44014f), new Vector3(1919.409f, 219.2023f, 77.0569f), new Vector3(1919.049f, 222.6279f, 76.97539f), new Vector3(1919.752f, 225.613f, 76.98167f), new Vector3(1920.562f, 228.5986f, 76.98274f), new Vector3(1921.658f, 231.6248f, 76.98127f), new Vector3(1922.774f, 235.435f, 76.95781f), new Vector3(1921.002f, 231.6744f, 76.98711f), new Vector3(1918.542f, 229.3529f, 76.99596f), new Vector3(1914.931f, 229.6902f, 77.85709f), new Vector3(1911.967f, 230.743f, 78.44816f), new Vector3(1908.533f, 232.1364f, 78.52104f), new Vector3(1905.036f, 233.6191f, 78.43732f), new Vector3(1902.05f, 234.7553f, 78.42213f), new Vector3(1899.372f, 235.9994f, 77.63259f), new Vector3(1896.624f, 237.3138f, 76.63956f), new Vector3(1893.665f, 239.2855f, 76.63956f), new Vector3(1895.305f, 242.2134f, 76.6398f), new Vector3(1897.261f, 245.7672f, 76.6398f), new Vector3(1894.951f, 243.1886f, 76.6398f), new Vector3(1893.558f, 239.7648f, 76.63959f)};\r\n\r\nG[\"GarrsionSafePointsAllianceLevel3V3Plot23Armory\"] = v;\r\n\r\nVector3[] w = new Vector3[] {new Vector3(1897.775f, 245.291f, 76.63963f), new Vector3(1894.847f, 237.5904f, 76.63975f), new Vector3(1921.021f, 227.3442f, 76.97948f), new Vector3(1921.596f, 215.1265f, 78.4361f), new Vector3(1932.087f, 221.4218f, 79.87293f)};\r\n\r\nG[\"GarrsionCTMPointsAllianceLevel3V3Plot23Armory\"] = w;\r\n"
                                }
                              ],
                              "IsExtendedInEditor": false,
                              "GroupName": "Alliance V3 Buildings"
                            }
                          ],
                          "GroupName": "Alliance"
                        },
                        {
                          "$type": "CSharpAction",
                          "CSharpCode": "string lua = \"result = '' for k,v in pairs(C_Garrison.GetBuildings()) do result = result..tostring(v.buildingID)..':'..tostring(v.plotID)..',' end return result\";\r\n\r\nstring s = ExecuteLua<string>(lua);\r\n\r\nif (object.ReferenceEquals(null, s)) { s = \"null\"; }\r\n\r\n//PrintInfo(\"s=\"+s);\r\n\r\nstring[] a = s.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);\r\n\r\nif (a.Length > 0)\r\n{\r\n\tstring thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\n\tstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\n\tVector3[] sps = new Vector3[] {};\r\n\ttry { sps = (Vector3[])G[\"GarrsionSafePoints\"+thisFaction+thisLevel]; } catch { sps = new Vector3[] {}; }\r\n\tVector3[] cps = new Vector3[] {};\r\n\ttry { cps = (Vector3[])G[\"GarrsionCTMPoints\"+thisFaction+thisLevel]; } catch { cps = new Vector3[] {}; }\r\n\tPrintInfo(\"Loaded From G GarrisonFaction=\"+thisFaction);\r\n\tPrintInfo(\"Loaded From G GarrisonLevel=\"+thisLevel);\r\n\tVector3[] spt = new Vector3[] {};\r\n\tVector3[] spu = new Vector3[] {};\r\n\tfor (int i = 0; i < a.Length; i++)\r\n\t{\r\n\t\tstring[] b = a[i].Split(new char[] { ':' }, StringSplitOptions.RemoveEmptyEntries);\r\n\t\tif (b.Length == 2)\r\n\t\t{\r\n\t\t\tPrintInfo(\"buildingID=\" + b[0] + \"; plotID=\" + b[1]);\r\n\t\t\tint o = 0;\r\n\t\t\tint v = -1;\r\n\t\t\tstring z = \"\";\r\n\t\t\tstring p = \"\";\r\n\t\t\tstring n = \"\";\r\n\t\t\tstring m = \"\";\r\n\t\t\tif ((b[1] == \"63\")) { p = \"GarrisonFarmPosition\"; }\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"29\") || (b[0] == \"136\") || (b[0] == \"137\")))\r\n\t\t\t{\tz = \"Farm\";\r\n\t\t\t\tif (b[0] == \"29\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"136\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"137\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((b[1] == \"59\")) { p = \"GarrisonMinePosition\"; }\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"61\") || (b[0] == \"62\") || (b[0] == \"63\")))\r\n\t\t\t{\tz = \"Mine\";\r\n\t\t\t\tif (b[0] == \"61\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"62\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"63\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tG[\"GarrisonMineChainVectors\"] = spt;\r\n\t\t\t\t\t//o = sps.Length;\r\n\t\t\t\t\t//Array.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\t//Array.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\t//m = \"GarrsionCTMPoints\"+thisFaction+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\t//try { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\t//PrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\t//if (spu.Length > 0)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//o = cps.Length;\r\n\t\t\t\t\t//Array.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\t//Array.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t\tif ((b[1] == \"22\")) { p = \"GarrisonMediumPlot1Position\"; }\r\n\t\t\tif ((b[1] == \"25\")) { p = \"GarrisonMediumPlot2Position\"; }\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"111\") || (b[0] == \"144\") || (b[0] == \"145\")))\r\n\t\t\t{\tz = \"TradingPost\";\r\n\t\t\t\tif (b[0] == \"111\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"144\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"145\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"24\") || (b[0] == \"25\") || (b[0] == \"133\")))\r\n\t\t\t{\tz = \"Barn\";\r\n\t\t\t\tif (b[0] == \"24\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"25\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"133\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"159\") || (b[0] == \"160\") || (b[0] == \"161\")))\r\n\t\t\t{\tz = \"Arena\";\r\n\t\t\t\tif (b[0] == \"159\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"160\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"161\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"34\") || (b[0] == \"35\") || (b[0] == \"36\")))\r\n\t\t\t{\tz = \"Inn\";\r\n\t\t\t\tif (b[0] == \"34\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"35\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"36\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"40\") || (b[0] == \"41\") || (b[0] == \"138\")))\r\n\t\t\t{\tz = \"Mill\";\r\n\t\t\t\tif (b[0] == \"40\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"41\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"138\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tp = \"\";\r\n\t\t\tif ((b[1] == \"23\")) { p = \"GarrisonLargePlot1Position\"; }\r\n\t\t\tif ((b[1] == \"24\")) { p = \"GarrisonLargePlot2Position\"; }\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"26\") || (b[0] == \"27\") || (b[0] == \"28\")))\r\n\t\t\t{\tz = \"Barracks\";\r\n\t\t\t\tif (b[0] == \"26\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"27\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"28\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"8\") || (b[0] == \"9\") || (b[0] == \"10\")))\r\n\t\t\t{\tz = \"Armory\";\r\n\t\t\t\tif (b[0] == \"8\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"9\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"10\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"65\") || (b[0] == \"66\") || (b[0] == \"67\")))\r\n\t\t\t{\tz = \"Stables\";\r\n\t\t\t\tif (b[0] == \"65\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"66\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"67\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"37\") || (b[0] == \"38\") || (b[0] == \"39\")))\r\n\t\t\t{\tz = \"MageTower\";\r\n\t\t\t\tif (b[0] == \"37\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"38\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"39\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"162\") || (b[0] == \"163\") || (b[0] == \"164\")))\r\n\t\t\t{\tz = \"Workshop\";\r\n\t\t\t\tif (b[0] == \"162\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"163\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"164\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tp = \"\";\r\n\t\t\tif ((b[1] == \"18\")) { p = \"GarrisonSmallPlot1Position\"; }\r\n\t\t\tif ((b[1] == \"19\")) { p = \"GarrisonSmallPlot2Position\"; }\r\n\t\t\tif ((b[1] == \"20\")) { p = \"GarrisonSmallPlot3Position\"; }\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"76\") || (b[0] == \"119\") || (b[0] == \"120\")))\r\n\t\t\t{\tz = \"AlchemyLab\";\r\n\t\t\t\tif (b[0] == \"76\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"119\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"120\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"93\") || (b[0] == \"125\") || (b[0] == \"126\")))\r\n\t\t\t{\tz = \"EnchanterStudy\";\r\n\t\t\t\tif (b[0] == \"93\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"125\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"126\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"91\") || (b[0] == \"123\") || (b[0] == \"124\")))\r\n\t\t\t{\tz = \"EngineeringWorks\";\r\n\t\t\t\tif (b[0] == \"91\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"123\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"124\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"96\") || (b[0] == \"131\") || (b[0] == \"132\")))\r\n\t\t\t{\tz = \"GemBoutique\";\r\n\t\t\t\tif (b[0] == \"96\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"131\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"132\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"52\") || (b[0] == \"140\") || (b[0] == \"141\")))\r\n\t\t\t{\tz = \"SalvageYard\";\r\n\t\t\t\tif (b[0] == \"52\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"140\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"141\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"95\") || (b[0] == \"129\") || (b[0] == \"130\")))\r\n\t\t\t{\tz = \"ScribeQuarters\";\r\n\t\t\t\tif (b[0] == \"95\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"129\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"130\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"51\") || (b[0] == \"142\") || (b[0] == \"143\")))\r\n\t\t\t{\tz = \"Storehouse\";\r\n\t\t\t\tif (b[0] == \"51\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"142\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"143\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"94\") || (b[0] == \"127\") || (b[0] == \"128\")))\r\n\t\t\t{\tz = \"TailoringEmporium\";\r\n\t\t\t\tif (b[0] == \"94\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"127\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"128\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"60\") || (b[0] == \"117\") || (b[0] == \"118\")))\r\n\t\t\t{\tz = \"TheForge\";\r\n\t\t\t\tif (b[0] == \"60\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"117\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"118\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!p.Equals(\"\")) && ((b[0] == \"90\") || (b[0] == \"121\") || (b[0] == \"122\")))\r\n\t\t\t{\tz = \"TheTannery\";\r\n\t\t\t\tif (b[0] == \"90\") { G[\"Garrison\"+z+\"Version\"] = 1; } else\r\n\t\t\t\tif (b[0] == \"121\") { G[\"Garrison\"+z+\"Version\"] = 2; } else\r\n\t\t\t\tif (b[0] == \"122\") { G[\"Garrison\"+z+\"Version\"] = 3; }\r\n\t\t\t\tG[\"Garrison\"+z+\"Plot\"] = b[1];\r\n\t\t\t\ttry { G[\"Garrison\"+z+\"Position\"] = (Vector3)G[p]; }\r\n\t\t\t\tcatch { PrintInfo(\"G[\\\"Garrison\"+z+\"Position\\\"] not defined?\"); }\r\n\t\t\t\ttry { v = (int)G[\"Garrison\"+z+\"Version\"]; } catch { v = -1; }\r\n\t\t\t\tPrintInfo(thisFaction+\" \"+thisLevel+\" Garrison Building V\"+v+\" \"+z+\" on Plot \"+b[1]);\r\n\t\t\t\tn = \"GarrsionSafePoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spt = (Vector3[])G[n]; } catch { spt = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+n+\"\\\"] vectors=\"+spt.Length);\r\n\t\t\t\tif (spt.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = sps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref sps, o + spt.Length);\r\n\t\t\t\t\tArray.Copy(spt, 0, sps, o, spt.Length);\r\n\t\t\t\t}\r\n\t\t\t\tm = \"GarrsionCTMPoints\"+thisFaction+thisLevel+\"V\"+v+\"Plot\"+b[1]+z;\r\n\t\t\t\ttry { spu = (Vector3[])G[m]; } catch { spu = new Vector3[] {}; }\r\n\t\t\t\tPrintInfo(\"Loading Vector3[] G[\\\"\"+m+\"\\\"] vectors=\"+spu.Length);\r\n\t\t\t\tif (spu.Length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\to = cps.Length;\r\n\t\t\t\t\tArray.Resize<Vector3>(ref cps, o + spu.Length);\r\n\t\t\t\t\tArray.Copy(spu, 0, cps, o, spu.Length);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tG[\"GarrsionSafePoints\"+thisFaction+thisLevel] = sps;\r\n\tG[\"GarrsionCTMPoints\"+thisFaction+thisLevel] = cps;\r\n}\r\n\r\n\r\n\r\n"
                        }
                      ],
                      "IsExtendedInEditor": false,
                      "GroupName": "Buildings"
                    }
                  ],
                  "GroupName": "Pathing Define Vectors"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "Text": "A Star Pathfinding"
                    },
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "int maxTries = 4999;\r\nfloat minDistance = 8f;\r\n\r\n//Vector3 thisPoint = new Vector3(1864.955f, 320.2083f, 81.66045f);\r\n///Vector3 thisPoint = new Vector3(1947.616f, 286.6389f, 88.96585f);\r\n\r\nstring thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nVector3 thisPoint = Me.Position;\r\ntry { thisPoint = (Vector3)G[\"GarrisonMoveTo\"]; } catch { thisPoint = Me.Position; }\r\n//PrintInfo(\"Moving towards->\"+thisPoint.ToString());\r\n\r\nVector3[] sps = new Vector3[] {};\r\ntry { sps = (Vector3[])G[\"GarrsionSafePoints\"+thisFaction+thisLevel]; } catch { sps = new Vector3[] {}; }\r\nPrintInfo(\"Loaded From G GarrisonFaction=\"+thisFaction);\r\nPrintInfo(\"Loaded From G GarrisonLevel=\"+thisLevel);\r\n\r\n\r\nVector3 startNode = Me.Position;\r\nVector3 goalNode = thisPoint;\r\nVector3 bestNode = Me.Position;\r\nint spsLength = sps.Length; if (spsLength < 2) { spsLength = 2; }\r\n\r\nfloat goDistance = 99999f;\r\nfor(int i = 0; i < sps.Length; i++) \r\n{ \r\n\tfloat goTest = Vector3.Distance(thisPoint, sps[i]);\r\n\tif (goDistance > goTest) { goalNode = sps[i]; goDistance = goTest; }\r\n}\r\n\r\nfloat meDistance = 99999f;\r\nfor(int i = 0; i < sps.Length; i++) \r\n{ \r\n\tfloat meTest = Vector3.Distance(Me.Position, sps[i]);\r\n\tif (meDistance > meTest) { startNode = sps[i]; meDistance = meTest; }\r\n}\r\n\r\n//PrintInfo(\"Me.Position->\"+Me.Position.ToString());\r\n//PrintInfo(\"startNode->\"+startNode.ToString());\r\n//PrintInfo(\"goalNode->\"+goalNode.ToString());\r\n//PrintInfo(\"destination->\"+thisPoint.ToString());\r\n\r\nList<Vector3> closedList = new List<Vector3>();\r\nDictionary<Vector3, int> pathList = new Dictionary<Vector3, int>();\r\nDictionary<Vector3, int> htapList = new Dictionary<Vector3, int>();\r\nSortedList<float, Vector3> neighborNodes = new SortedList<float, Vector3>();\r\nint y = 0;\r\nbool notdone = true;\r\nint PathListCounter = 0;\r\nbestNode = startNode;\r\nwhile ((notdone) && (y < maxTries))\r\n{\r\n\ty++;\r\n\tneighborNodes = new SortedList<float, Vector3>();\r\n\tfor(int i = 0; i < sps.Length; i++) \r\n\t{\r\n\t\tbool inRange = (bool)(Vector3.Distance(bestNode, sps[i]) <= minDistance);\r\n\t\tif ((inRange) && (!pathList.ContainsKey(sps[i])) && (!closedList.Contains(sps[i])))\r\n\t\t{ \r\n\t\t\tfloat thisKey = Vector3.Distance(sps[i], goalNode);\r\n\t\t\tif (!(neighborNodes.ContainsKey(thisKey))) { neighborNodes.Add(thisKey, sps[i]); }\r\n\t\t}\r\n\t}\r\n\tif (neighborNodes.Count < 1) \r\n\t{\r\n\t\t//dead end\r\n\t\tclosedList.Add(bestNode);\r\n\t\tbestNode = startNode;\r\n\t\tpathList = new Dictionary<Vector3, int>();\r\n\t\tPathListCounter = 0;\r\n\t} else \r\n\t{\r\n\t\tbestNode = (Vector3)neighborNodes.Values[0];\r\n\t\tif (!pathList.ContainsKey(bestNode)) { pathList.Add(bestNode, PathListCounter); }\r\n\t\tPathListCounter++;\r\n\t}\r\n\tif ((bestNode.X == goalNode.X) && (bestNode.Y == goalNode.Y) && (bestNode.Z == goalNode.Z))\r\n\t{\r\n\t\tnotdone = false;\r\n\t\tif (!pathList.ContainsKey(thisPoint)) { pathList.Add(thisPoint, PathListCounter); }\r\n//\t\tPrintInfo(\"Path successfully found. pathList.Count=\"+pathList.Count);\r\n\t}\r\n}\r\n\r\nif (pathList.Count > 0)\r\n{\r\n\r\n\tSortedList<int,Vector3> sortedPathList = new SortedList<int,Vector3>();\r\n\tforeach (KeyValuePair<Vector3,int> kvp in pathList) \r\n\t{\r\n\t\tif (!(closedList.Contains(kvp.Key)))\r\n\t\t{\r\n//\t\t\tPrintInfo(\"Adding...\"+kvp.Value+\"; \"+kvp.Key.ToString());\r\n\t\t\tsortedPathList.Add((int)kvp.Value, (Vector3)kvp.Key); \r\n\t\t}\r\n\t}\r\n\tforeach (KeyValuePair<int,Vector3> kvp in sortedPathList) \r\n\t{\r\n//\t\tPrintInfo(\"Doing...\"+kvp.Key+\"; \"+kvp.Value.ToString());\r\n\t\tint k = 0;\r\n\t\tfloat j = 99999f;\r\n\t\twhile ((j > 4) && (k < 15))\r\n\t\t{\r\n\t\t\tk++;\r\n\t\t\tCTM((Vector3)kvp.Value);\r\n\t\t\tj = Me.DistanceTo((Vector3)kvp.Value);\r\n//\t\t\tPrintInfo(\"path:\"+kvp.Key+\"; CTM->\"+kvp.Value.ToString()+\"; \"+f.ToString());\r\n\t\t\tyield return 50;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nyield return 50;\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "A Star Pathfinding Algorithm"
                },
                {
                  "$type": "ActionSequence",
                  "Children": [
                    {
                      "$type": "Comment",
                      "IsInfo": false,
                      "Text": "CTM Star Pathfinding"
                    },
                    {
                      "$type": "CSharpAction",
                      "CSharpCode": "bool result = false;\r\nint maxTries = 5999;\r\nfloat minDistance = 8f;\r\n\r\n//Vector3 thisPoint = new Vector3(1864.955f, 320.2083f, 81.66045f);\r\n///Vector3 thisPoint = new Vector3(1947.616f, 286.6389f, 88.96585f);\r\n\r\nstring thisFaction = \"\"; try { thisFaction = (string)G[\"GarrisonFaction\"]; } catch { thisFaction = \"\"; }\r\nstring thisLevel = \"\"; try { thisLevel = (string)G[\"GarrisonLevel\"]; } catch { thisLevel = \"\"; }\r\nVector3 thisPoint = Me.Position;\r\ntry { thisPoint = (Vector3)G[\"GarrisonMoveTo\"]; } catch { thisPoint = Me.Position; }\r\n//PrintInfo(\"Moving towards->\"+thisPoint.ToString());\r\n\r\nVector3[] sps = new Vector3[] {};\r\ntry { sps = (Vector3[])G[\"GarrsionSafePoints\"+thisFaction+thisLevel]; } catch { sps = new Vector3[] {}; }\r\n//PrintInfo(\"Loaded From G GarrisonFaction=\"+thisFaction);\r\n//PrintInfo(\"Loaded From G GarrisonLevel=\"+thisLevel);\r\n\r\n\r\nVector3 startNode = Me.Position;\r\nVector3 goalNode = thisPoint;\r\nVector3 bestNode = Me.Position;\r\nint spsLength = sps.Length; if (spsLength < 2) { spsLength = 2; }\r\n\r\nfloat goDistance = 99999f;\r\nfor(int i = 0; i < sps.Length; i++) \r\n{ \r\n\tfloat goTest = Vector3.Distance(thisPoint, sps[i]);\r\n\tif (goDistance > goTest) { goalNode = sps[i]; goDistance = goTest; }\r\n}\r\n\r\nfloat meDistance = 99999f;\r\nfor(int i = 0; i < sps.Length; i++) \r\n{ \r\n\tfloat meTest = Vector3.Distance(Me.Position, sps[i]);\r\n\tif (meDistance > meTest) { startNode = sps[i]; meDistance = meTest; }\r\n}\r\n\r\n//PrintInfo(\"Me.Position->\"+Me.Position.ToString());\r\n//PrintInfo(\"startNode->\"+startNode.ToString());\r\n//PrintInfo(\"goalNode->\"+goalNode.ToString());\r\n//PrintInfo(\"destination->\"+thisPoint.ToString());\r\n\r\nList<Vector3> closedList = new List<Vector3>();\r\nDictionary<Vector3, int> pathList = new Dictionary<Vector3, int>();\r\nDictionary<Vector3, int> htapList = new Dictionary<Vector3, int>();\r\nSortedList<float, Vector3> neighborNodes = new SortedList<float, Vector3>();\r\nint y = 0;\r\nbool notdone = true;\r\nint PathListCounter = 0;\r\nbestNode = startNode;\r\nwhile ((notdone) && (y < maxTries))\r\n{\r\n\ty++;\r\n\tneighborNodes = new SortedList<float, Vector3>();\r\n\tfor(int i = 0; i < sps.Length; i++) \r\n\t{\r\n\t\tbool inRange = (bool)(Vector3.Distance(bestNode, sps[i]) <= minDistance);\r\n\t\tif ((inRange) && (!pathList.ContainsKey(sps[i])) && (!closedList.Contains(sps[i])))\r\n\t\t{ \r\n\t\t\tfloat thisKey = Vector3.Distance(sps[i], goalNode);\r\n\t\t\tif (!(neighborNodes.ContainsKey(thisKey))) { neighborNodes.Add(thisKey, sps[i]); }\r\n\t\t}\r\n\t}\r\n\tif (neighborNodes.Count < 1) \r\n\t{\r\n\t\t//dead end\r\n\t\tclosedList.Add(bestNode);\r\n\t\tbestNode = startNode;\r\n\t\tpathList = new Dictionary<Vector3, int>();\r\n\t\tPathListCounter = 0;\r\n\t} else \r\n\t{\r\n\t\tbestNode = (Vector3)neighborNodes.Values[0];\r\n\t\tif (!pathList.ContainsKey(bestNode)) { pathList.Add(bestNode, PathListCounter); }\r\n\t\tPathListCounter++;\r\n\t}\r\n\tif ((bestNode.X == goalNode.X) && (bestNode.Y == goalNode.Y) && (bestNode.Z == goalNode.Z))\r\n\t{\r\n\t\tnotdone = false;\r\n\t\tif (!pathList.ContainsKey(thisPoint)) { pathList.Add(thisPoint, PathListCounter); }\r\n//\t\tPrintInfo(\"Path successfully found. pathList.Count=\"+pathList.Count);\r\n\t\tresult = true;\r\n\t}\r\n}\r\n\r\nif (result) \r\n{\r\n\r\nif (pathList.Count > 0)\r\n{\r\n\r\n\tSortedList<int,Vector3> sortedPathList = new SortedList<int,Vector3>();\r\n\tforeach (KeyValuePair<Vector3,int> kvp in pathList) \r\n\t{\r\n\t\tif (!(closedList.Contains(kvp.Key)))\r\n\t\t{\r\n//\t\t\tPrintInfo(\"Adding...\"+kvp.Value+\"; \"+kvp.Key.ToString());\r\n//\t\t\tsortedPathList.Add((int)kvp.Value, (Vector3)kvp.Key); \r\n\t\t\tsortedPathList.Add(sortedPathList.Count, (Vector3)kvp.Key); \r\n\t\t}\r\n\t}\r\n\r\n\tfloat ctmDistance = 6f;\r\n\tVector3[] cps = new Vector3[] {};\r\n\ttry { cps = (Vector3[])G[\"GarrsionCTMPoints\"+thisFaction+thisLevel]; } catch { cps = new Vector3[] {}; }\r\n\tSortedList<int,Vector3> sortedCTMPathList = new SortedList<int,Vector3>();\r\n\tList<int> alreadyAdded = new List<int>();\r\n\tforeach (KeyValuePair<int,Vector3> kvp in sortedPathList) \r\n\t{\r\n//\t\tPrintInfo(\"Doing...\"+kvp.Key+\"; \"+kvp.Value.ToString());\r\n\t\tfor(int i = 0; i < cps.Length; i++) \r\n\t\t{\r\n\t\t\tfloat range = Vector3.Distance(cps[i], (Vector3)kvp.Value);\r\n\t\t\tbool inRange = (bool)(range <= ctmDistance);\r\n//\t\t\tPrintInfo(\"Range to CTM[\" + i + \"]=\" + range.ToString());\r\n\t\t\tif ((inRange) && (!alreadyAdded.Contains(i)))\r\n\t\t\t{ \r\n\t\t\t\tif (!alreadyAdded.Contains(i)) { alreadyAdded.Add(i); }\r\n\t\t\t\tsortedCTMPathList.Add(sortedCTMPathList.Count, (Vector3)cps[i]); \r\n//\t\t\t\tPrintInfo(\"CTM agrees to add...\"+ i +\"; \"+cps[i].ToString());\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n//\t\t\t\t\tPrintInfo(\"CTM did not add...\"+kvp.Value.ToString()+\"; \"+cps[i].ToString());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tforeach (KeyValuePair<int,Vector3> kvp in sortedCTMPathList) \r\n\t{\r\n//\t\tPrintInfo(\"Doing...\"+kvp.Key+\"; \"+kvp.Value.ToString());\r\n\t\tint k = 0;\r\n\t\tfloat j = 99999f;\r\n\t\twhile ((j > 1) && (k < 15))\r\n\t\t{\r\n\t\t\tk++;\r\n\t\t\tMe.MountUp();\r\n\t\t\tCTM((Vector3)kvp.Value);\r\n\t\t\tj = Me.DistanceTo((Vector3)kvp.Value);\r\n//\t\t\tPrintInfo(\"path:\"+kvp.Key+\"; CTM->\"+kvp.Value.ToString()+\"; \"+f.ToString());\r\n\t\t\tint yieldTime = 100;\r\n\t\t\tfloat multiplier = 25f;\r\n\t\t\tif (Me.IsMounted) { multiplier = 10f; }\r\n\t\t\tyieldTime = Convert.ToInt32(j*multiplier);\r\n//\t\t\tPrint(\"yieldTime=\"+yieldTime+\"; Distance=\"+j); \r\n\t\t\tyield return yieldTime;\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n//////////Identify Building Positions when Moving///////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n}\r\nelse\r\n{\r\n\tPrintInfo(\"CTM Star Failed to Find a Path... *SOB*\");\r\n}\r\n\r\nG[\"GarrisonCTMStarSuccess\"] = result;\r\n\r\nyield return 150;\r\n"
                    }
                  ],
                  "IsExtendedInEditor": false,
                  "GroupName": "CTM Star Pathfinding Algorithm"
                }
              ],
              "GroupName": "Pathing"
            }
          ],
          "GroupName": "Internal (Coders: code level)"
        }
      ],
      "GroupName": "Movement System (Alcove)"
    }
  ],
  "GroupName": ""
}
